#include "xillybus_wrapper.h"

void compute_gradients(byte image[IMAGE_HEIGHT][IMAGE_WIDTH], gradient_vote grad_vote[IMAGE_HEIGHT][IMAGE_WIDTH])
{
#pragma AP interface ap_ctrl_none port=return
	//gradient magnitude and orientation calculation
	for(int i = 0; i < IMAGE_HEIGHT; i++)
	{
		for(int j = 0; j < IMAGE_WIDTH; j++)
		{
#pragma HLS pipeline
			//calculate magnitude and binning
			byte lx, rx, uy, dy;

			if(j == 0)
				lx = 0;
			else
				lx = j - 1;

			if(j == IMAGE_WIDTH - 1)
				rx = IMAGE_WIDTH - 1;
			else
				rx = j + 1;

			if(i == 0)
				uy = 0;
			else
				uy = i - 1;

			if(i == IMAGE_HEIGHT - 1)
				dy = IMAGE_HEIGHT - 1;
			else
				dy = i + 1;

			int gradX = image[i][rx] - image[i][lx];
			int gradY = image[dy][j] - image[uy][j];
			grad_vote[i][j].magnitude = sqrt_approx((gradX < 0) ? 0 - gradX : gradX, (gradY < 0) ? 0 - gradY : gradY);
			grad_vote[i][j].bin = find_bin(gradX, gradY);
		}
	}
}

void initialize_cells(cell_histogram cells[IMAGE_HEIGHT/CELL_SIZE][IMAGE_WIDTH/CELL_SIZE])
{
#pragma AP interface ap_ctrl_none port=return
	//initialize cell_histogram buffer
	for(int i = 0; i < IMAGE_HEIGHT/CELL_SIZE; i++)
	{
		for(int j = 0; j < IMAGE_WIDTH/CELL_SIZE; j++)
		{
			for(int k = 0; k < BIN_SIZE; k++)
			{
				cells[i][j].bin[k] = 0;
			}
			cells[i][j].mag_sq = 0;
		}
	}
}

void compute_cells(gradient_vote grad_vote[IMAGE_HEIGHT][IMAGE_WIDTH], cell_histogram cells[IMAGE_HEIGHT/CELL_SIZE][IMAGE_WIDTH/CELL_SIZE])
{
#pragma AP interface ap_ctrl_none port=return

	for(short i = 0; i < IMAGE_HEIGHT; i += CELL_SIZE)
	{
		for(short j = 0; j < IMAGE_WIDTH; j += CELL_SIZE)
		{
			fixed_point bin_vote[BIN_SIZE] = {};
			fixed_point bins[BIN_SIZE] = {};

			for(short k = 0; k < BIN_SIZE; k++)
			{
				bin_vote[k] = 0;
				bins[k] = 0;
			}

			double_fixed_point mag_sq = 0;

			//calculate histogram per cell
			for(byte ii = 0; ii < CELL_SIZE; ii++)
			{
				for(byte jj = 0; jj < CELL_SIZE; jj++)
				{
#pragma HLS pipeline
					gradient_vote temp = grad_vote[i + ii][j + jj];
					bin_vote[temp.bin] += temp.magnitude;
				}
			}

			//assumes CELL_SIZE is 8, optimization
			for(int k = 0; k < BIN_SIZE; k++)
			{
#pragma HLS pipeline
				bins[k] = (bin_vote[k]>>1) + (bin_vote[(k == BIN_SIZE - 1) ? (0) : (k + 1)]>>1);
				cells[i>>3][j>>3].bin[k] = bins[k];
				mag_sq += bins[k]*bins[k];
			}

			cells[i>>3][j>>3].mag_sq = mag_sq;
		}
	}
}

//calculate w*x + b
//w = hyperplane (SVM_detector)
//b = offset
//x = block_histogram (block-normalized cell histogram)

float svm_detect(cell_histogram cells[IMAGE_HEIGHT/CELL_SIZE][IMAGE_WIDTH/CELL_SIZE])
{
#pragma AP interface ap_ctrl_none port=return
//#pragma HLS ALLOCATION instances=mul limit=8 operation
	static const fixed_point SVM_detector[SVM_DESC_SIZE] = {-0.0699441, -0.0326717, -0.0411228, 0.00601402, -0.0582127, -0.00668835, 0.0342204, 0.0126062, -0.0345501, -0.0259312, 0.00149854, -0.00626752, 0.0242945, -0.0816993, -0.0297805, -0.0061014, 0.00213629, -0.0175293, -0.0173013, -0.00382096, -0.0237526, 0.0216384, -0.0415331, -0.00749062, 0.0110112, -0.0110509, -0.0239832, 0.0442289, 0.0334984, -0.0344062, 0.0550416, 0.0416069, 0.0247058, 0.0135384, -0.00786057, -0.00888665, -0.0414988, -0.0177177, -0.00682239, 0.027754, -0.0574305, -0.0360907, 0.000866013, -0.0240979, -0.0410672, 0.0154715, 0.0264755, -0.00744918, -0.00190697, -0.0536106, -0.00435678, 0.00664877, -0.0195743, -0.0344806, -0.035452, -0.022449, -0.0368233, 0.0384997, -0.0113595, -0.0273265, 0.0140773, 0.000847836, -0.0131567, -0.00675891, 0.0294661, -0.0286132, 0.0637894, 0.0262113, -0.019624, 0.00451806, -0.00669176, -0.0222605, -0.0406286, -0.0229128, -0.0231035, 0.0181471, -0.0557384, -0.0559655, 0.016295, -0.00208013, -0.0248073, -0.0239581, 0.0174867, -0.0242997, -0.00208973, -0.0492385, -0.0422459, -0.00225977, -0.0234541, -0.0438717, -0.0458505, -0.0534778, -0.0363672, 0.0166232, -0.0207204, -0.0644419, -0.0132741, -0.027216, -0.0254081, -0.0245906, -0.0262775, -0.0244937, 0.0397022, 0.041891, -0.0176358, -0.017426, -0.0282763, -0.0185073, -0.041861, -0.0431827, -0.0271708, 0.000794677, 0.000425922, -0.0172249, -0.00123057, -0.021692, -0.0232813, -0.0419036, -0.0313597, -0.0162544, 0.010101, 0.00864706, -0.0143191, -0.0127946, -0.0303226, -0.0326996, -0.0192334, -0.0169029, 0.000214839, -0.0133343, 0.0188458, 0.0220027, -0.0288977, -0.0545463, -0.0432863, -0.0399358, -0.0358861, -0.00701924, -0.0178202, -0.0073277, -0.00197405, -0.024776, -0.0364287, -0.0387082, -0.0278132, -0.0242819, -0.00837537, -0.0395015, 0.00627147, 0.0300473, -0.0357378, -0.061584, -0.0549985, -0.02709, -0.0289541, -0.00690791, -0.00117898, 0.0482511, 0.0369523, -0.0322032, -0.0297343, -0.0237867, -0.0112714, -0.00304062, 0.00791669, -0.0582959, -0.053368, 0.0192544, -0.0198629, -0.00907912, -0.0154171, -0.0519187, -0.0175626, 0.00157408, -0.0500042, -0.0528208, 0.0220104, -0.0189317, 0.00840797, -0.0124616, -0.00218881, -0.00155538, 0.00883608, -0.0231393, -0.0225372, 0.0148819, -0.0341182, -0.0042834, -0.00986625, -0.0226555, 0.00322074, 0.011327, -0.0177754, 0.0171868, 0.071099, -0.0247668, 0.0204667, 0.0126828, -0.0348936, -0.0155406, 0.00999723, -0.0314501, -0.0632917, 0.0241795, 0.000689795, -0.00886664, -0.0245978, -0.0432757, -0.0220021, 0.0105557, -0.0011201, -0.0592299, -0.0154222, -0.00924503, 0.0292292, 0.0165148, -0.0293301, -0.0135185, 0.0154554, 0.0165431, -0.0406748, 0.00154974, -0.0216974, 0.00154395, -0.00753409, -0.0224113, -0.0115565, 0.0135104, 0.0359269, 0.0317785, 0.0305237, -0.0382332, 0.037061, 0.0403938, -0.0383744, 0.0183841, 0.0273921, -0.0393968, -0.0663162, 0.0165509, -0.0419006, -0.031682, -0.0706444, -0.0264885, 0.015026, 0.00699083, -0.0412372, -0.0862665, 0.0152565, -0.0197087, -0.0114843, -0.0312153, -0.0361736, 0.00610113, 0.00567114, 0.055293, -0.0647205, -0.0569092, -0.0119983, 0.00235217, -0.0329791, 8.12359e-05, 0.0246599, 0.0110814, 0.0282004, -0.0969638, -0.0367436, 0.0272589, 0.0344804, 0.007562, 0.00414327, 0.0237755, -0.0125221, 0.0122127, -0.0296207, 0.00627365, 0.0109834, -0.012314, -0.0369135, 0.0469434, 0.0468072, 0.000655597, 0.0869037, 0.0375634, -0.00154664, 0.00617165, 0.0289625, 0.0256496, 0.0137581, 0.0289268, 0.00674208, 0.0250188, -0.057021, -0.0529556, -0.0126534, -0.0230237, -0.041467, 0.0119587, 0.0308413, 0.00167422, 0.0272355, -0.051202, -0.0637054, -0.0185942, 0.00301147, -0.0189116, -0.0199165, 0.0202501, -0.0230069, 0.0286492, -0.0458, -0.0662155, 0.00745819, -0.0156993, -0.0338949, 0.0560688, 0.0585478, -0.00296614, 0.0813809, 0.0403315, -0.0198412, -0.00342155, -0.00207065, -0.0053766, -0.0169922, 0.013869, -0.0282679, -0.0161722, -0.0389474, -0.0403041, -0.00369928, -0.0213753, -0.0328785, -0.029288, 0.00852979, -0.0194559, -0.0229224, -0.051818, -0.0372348, -0.0135254, -0.0228735, -0.0590206, -0.0545221, -0.0546179, -0.0427883, -0.00658986, -0.0212126, -0.0853739, -0.0386867, -0.037465, -0.0364515, -0.0185235, -0.0156277, -0.0246689, 0.0251656, 0.0291377, -0.0296117, -0.0321744, -0.0227813, -0.0229285, -0.0407746, -0.0443907, -0.0443816, -0.0315484, -0.00858273, -0.0258693, -0.0138679, -0.0300359, -0.0282301, -0.0381982, -0.0304279, -0.0250065, -0.00592221, -0.0100817, -0.0410092, -0.0303888, -0.0248503, -0.0280911, -0.0332716, -0.0381544, -0.0224142, -0.0379043, -0.0150156, -0.0242086, -0.0388659, -0.0399743, -0.0377624, -0.0204052, -0.0146058, -0.0211408, -0.0325068, -0.00788634, -0.0185939, -0.0371739, -0.0260263, -0.0334119, -0.0466125, -0.0373998, -0.0281405, -0.0732768, -0.00622355, 0.00702948, -0.0455189, -0.0527267, -0.0590654, -0.0271707, -0.0172837, -0.0219866, -0.0181879, 0.0406394, 0.0238434, -0.03, -0.0171476, -0.0275977, -0.0355466, -0.0159219, 0.00229811, -0.0307006, -0.0277922, -0.000443135, -0.0302972, 0.00247638, -0.00434004, -0.0597583, -0.0193132, -0.0104186, -0.0522886, -0.0524273, -0.0104657, -0.0273167, 0.0154153, -0.0205623, -0.041155, -0.0111067, 0.0130527, -0.062475, -0.0376814, 0.0447778, -0.0290666, 0.00530971, -0.00687206, -0.0127227, -0.00661608, 0.0036394, -0.0204581, 0.0432741, 0.0800993, -0.0180039, 0.0636197, 0.0600089, -0.0465749, -0.0232008, -0.00235923, -0.0456952, -0.0544975, 0.0224386, -0.00134573, 0.0259571, 0.0136249, -0.0391981, 0.00718805, -0.0041116, -0.0581265, -0.0626279, 0.0168458, 0.00288056, 0.0233988, -0.0089654, -0.0399757, -0.00815131, 0.0237386, 0.0119245, -0.0254069, 0.0157004, -0.0204155, 0.022814, 0.00406706, 0.0147219, 0.0354467, 0.0273645, 0.00639784, 0.034427, 0.08948, -0.000731457, 0.0400762, 0.0446012, -0.0341759, 0.0131367, 0.00440354, -0.0695554, -0.0745182, 0.0450939, -0.0121246, -0.0047371, -0.03523, 0.0207338, 0.0385127, 0.028294, -0.0443964, -0.094087, 0.0462388, 0.0165682, 0.0262429, 0.0198547, -0.00440694, 0.0213387, 0.00860042, 0.00683213, -0.0697272, -0.00252477, 0.0238025, 0.0267567, -6.15283e-05, -0.000295755, 0.0411329, 0.0187655, 0.0699099, -0.0847632, -0.0558187, 0.0348805, 0.0268851, -0.00553524, 0.0254047, 0.036737, -0.00879785, 0.00886363, 0.0053777, 0.0293165, 0.0104765, 0.0219459, 0.00469394, 0.0470221, 0.0385396, 0.00508769, 0.0380945, 0.0557322, 0.0456891, -0.00630409, 0.0279999, 0.0358308, 0.0318186, 0.0425036, 0.00284595, 0.0232093, 0.0058693, -0.00557921, -0.00489382, 0.0187483, 0.00508087, -0.00192771, 0.0104834, -0.000572859, -0.0196964, -0.0264439, -0.0122393, -0.0171162, 0.00469829, -0.00618853, 0.0106738, 0.0234304, -0.0132494, 0.000857818, -0.0417742, -0.0365896, 0.00757536, 0.0125802, 0.000326069, 0.0537967, 0.0264312, 0.00565273, 0.0223937, 0.057371, 0.0332619, -0.0116606, 0.0065087, 0.0471078, -0.00561245, 0.0163891, -0.0157436, -0.0284867, -0.00423965, 0.0191508, 0.00223484, 0.00418574, -0.0186866, -0.0120077, -0.00433321, -0.00683297, -0.0102347, 0.0397094, 0.0229678, -0.021019, -0.0178975, -0.0150283, -0.00132456, -0.0164794, -0.0264613, 0.00942955, 0.0213509, -0.0320013, -0.0255626, -0.00742212, 0.00919284, -0.0200119, -0.0191841, -0.0102175, 0.0138578, 0.0416732, 0.0020425, -0.0162055, -0.0205833, -0.0234978, -0.0274921, -0.0319974, -0.0318399, -0.0315144, 0.0238734, 0.011642, -0.0226521, -0.0148836, -0.00682847, -0.0436717, -0.0318726, -0.0204146, -0.0128705, 0.0400118, 0.0247165, -0.00445989, -0.00519339, -0.0248211, 0.00330792, -0.00645964, -0.0107293, 0.0138356, 0.016871, -0.0377396, -0.0388135, -0.0271475, -0.0180513, -0.0103978, -0.00628907, -0.00422227, 0.0417236, 0.037702, -0.0247414, -0.0129768, -0.0293418, -0.0342081, 0.00264442, -0.00931881, -0.019288, -0.0336944, 0.0193005, 0.0112864, -0.0334231, -0.0216518, -0.00908158, -0.0219955, -0.0251516, -0.0145129, 0.0164705, 0.0389255, 0.00543132, -0.00613018, -0.0201735, -0.0166225, -0.0159409, 0.00228655, -0.00405139, -0.00778555, -0.00572459, -0.00994639, -0.0241794, 0.0195129, 0.00587801, -0.0271182, -0.00906968, -0.0100595, 0.0286424, 0.0458918, -0.00319278, -0.00996449, -0.00674018, -0.0279783, -0.00637511, 0.00390803, 0.00193624, -0.0518984, -0.0351154, 0.0164084, -0.0206566, 0.0323604, 0.0245571, 0.0375458, 0.0228576, 0.00577215, 0.030704, 0.0504787, 0.023052, -0.00169738, 0.024461, 0.0387256, -0.0236849, 0.0131945, -0.00432534, -0.00277659, 0.00342204, 0.0175446, 0.0027764, 0.0359543, 0.00939057, -0.0059182, 0.00921729, -0.0100899, -0.00758732, -0.0203164, -0.0207683, -0.00694256, 0.0115128, -0.00279806, -0.00442521, 0.0208668, 0.0166507, 0.0347857, 0.0136757, 0.01667, -0.0079193, 0.0322245, 0.0225974, 0.042252, 0.0319066, 0.000138099, 0.0382747, 0.0505755, 0.0326385, -0.00133377, 0.0425727, 0.0538928, 0.00912604, 0.0266488, 0.0227576, -0.0118703, -0.0844443, 0.00509503, 0.0130954, 0.0235835, 0.00987823, 0.0117926, 0.0366006, 0.0214576, -0.0601974, -0.0849536, 0.0667435, 0.0276585, 0.0383579, 0.0130657, -0.00472687, 0.0282701, 0.00548065, 0.0332298, -0.0659815, -0.0187043, 0.0281234, 0.0267107, -0.00280902, -0.0021908, 0.0234357, 0.0208661, 0.0352231, -0.0996735, -0.0513283, 0.0211927, 0.0520135, 0.0300916, 0.0193121, 0.00990897, -0.00369559, -0.0157115, 0.0267028, 0.0696389, -0.000513507, 0.0238958, 0.0320062, 0.0143041, 0.0184321, -0.00426555, 0.038671, 0.0680819, 0.0698358, 0.00525022, 0.0361552, 0.0325906, 0.00880436, 0.0129575, 0.0213044, -0.0229653, -0.0114921, 0.0336868, -0.00218603, 0.0114763, 0.00782538, -0.0493871, 0.00523343, 0.00585573, 0.0278541, 0.0145799, 0.00498873, 0.00124462, 0.0102426, -0.0379748, 0.0413774, 0.0209112, 0.00923973, 0.0187933, 0.0257671, 0.0193386, 0.00355202, 0.00565615, 0.0337296, 0.0222811, 0.0181519, -0.0129859, -0.0207741, 0.0337452, 0.0369004, -0.00756074, 0.0150609, 0.0211297, 0.0106391, 0.012703, 0.0145774, -0.0173575, 0.0225879, 0.0522579, 0.0189615, 0.00416266, 0.0067807, -0.0273232, 0.00213863, -0.0020656, 0.02224, 0.0518244, 0.00363511, -0.00159614, -0.00739846, -0.0360334, -0.00301071, -0.0173592, -0.000653033, -0.000136229, 0.0024595, 0.00104108, 0.0164736, -0.00481471, 0.000275964, -0.0101397, -0.0144218, -0.0117589, -0.0362643, 0.0325864, 0.0348253, 0.00506383, 0.00323505, -0.00116315, -0.020432, -0.0225429, -0.00931772, -0.0448048, -0.00995899, 0.0216231, 0.0130926, -0.0100717, -0.0191729, -0.0247418, -0.0135193, -0.0105997, 0.00425358, 0.0467753, -0.00296485, -0.00533388, 0.00523329, -0.00977635, -0.00525146, -0.013323, 0.00490769, 0.0301479, -0.0238978, -0.0620895, 0.0051137, -0.0143049, -0.0115307, -0.00111945, 0.00100832, -0.00945144, 0.00360548, 0.0454116, -0.00577369, -0.0114516, -0.00976595, -0.0116939, 0.00295258, -0.0165014, 0.00477317, 0.0115765, 0.00126098, -0.00853827, 0.0096722, -0.015005, 0.0004141, 0.003653, 0.00173754, -0.0121361, 0.0330758, 0.0439202, -0.0340881, -0.0108327, -0.0133842, -0.0136442, -0.00380184, 0.0134492, 0.019805, 0.0443132, 0.0153634, -0.017537, 0.0137809, 0.0123217, -0.0100443, -0.0319698, 0.000608175, -0.0141911, -0.00448781, 0.0554582, 0.0105235, -0.0112472, -0.0188208, -0.046182, 0.036511, 0.0270403, 0.0168358, 0.0217095, 0.0216302, 0.0197767, 0.00849164, 0.0222582, 0.0310157, 0.0313512, 0.0318946, -0.00655376, 0.045862, 0.0430271, -0.0315596, -0.0189523, 0.00170278, 0.00490851, 0.00538131, 0.0150373, 0.00480531, 0.0358185, -0.00687508, -0.0178501, 0.0178045, 0.0185642, 0.011121, -0.0238353, 0.0277461, 0.0104429, 0.0141392, 0.00881718, 0.0163906, 0.00815995, 0.00155892, -0.0470684, 0.0298582, 0.0285383, 0.00450296, 0.0623431, 0.0274725, -0.0136805, -0.00891763, 0.0096383, 0.0193153, 0.0344643, 0.0446593, 0.00658768, 0.0606614, 0.0585493, 0.0405027, 0.00731825, 0.0160634, 0.00962032, 0.0180948, 0.0336395, 0.0148247, -0.0240706, -0.0709924, 0.0286987, 0.0175546, 0.0338686, 0.0126663, 0.0279812, 0.0559202, 0.0203671, -0.0584741, -0.0874589, 0.0452805, 0.0229683, 0.0303707, 0.000798946, 0.0178719, 0.0316513, 0.0259533, 0.0568362, -0.0523147, -0.0314921, 0.0193869, 0.0464376, 0.0393218, -0.00574579, 0.0177636, 0.00588857, 0.0179895, -0.0643012, -0.0261855, 0.0202739, 0.0409286, 0.0204699, 0.0288497, 0.0242662, 0.00117433, 0.0275447, 0.0341893, 0.0439736, 0.00723598, 0.0364797, 0.0434757, 0.0165623, 0.0377168, -0.00408916, -0.0313715, 0.036473, 0.0941139, 0.000608432, 0.0421739, 0.0261151, -0.00862506, 0.0155721, 0.0102829, -0.0252901, -0.037568, 0.0172486, 0.0158203, 0.0185716, -0.00484825, -0.0137311, 0.0275748, 0.0110193, -0.00934411, 0.00914365, 0.0375157, 0.00477327, 0.027549, -0.00790656, 0.0664802, 0.0320955, -0.00515263, -0.00945703, 0.0528754, 0.0674042, 0.00715624, 0.0364993, 0.0731511, -0.0132062, -0.00830798, -0.0196235, -0.0482684, 0.0306073, 0.0612001, 0.0044373, 0.0290323, 0.0207347, 0.0165801, 0.0173284, 0.00745835, -0.0145812, 0.0274536, 0.03664, 0.0114211, 0.00942778, 0.00408051, -0.0217366, -0.000210492, 0.00488602, 0.00169387, 0.0182698, 0.00945266, 0.0136615, 0.0224559, -0.00232688, 0.00076163, -0.00737932, -0.00716884, -0.0225972, 0.0144404, 0.0247464, 0.0245763, 0.0124795, 0.00953193, -0.0145276, -0.0166373, -0.0114691, -0.0324207, 0.0255023, 0.0309578, 0.0144786, 0.02205, 0.0177613, -0.00731166, -0.000755015, 0.0131176, -0.00436932, 0.0131761, 0.0168593, 0.0298214, 0.0103834, -0.00466997, -0.0199115, -0.00925712, 0.00735603, 0.0441945, 0.0317332, -0.0211941, 0.0249262, 0.0250453, 0.00701071, 0.0087617, 0.00438355, 0.0147089, 0.00384178, 0.00838912, 0.00139686, 0.0217263, 0.00715714, 0.00458591, 0.0132158, 0.0164958, 0.00417687, -0.00907742, 0.0459715, 0.0404168, 0.0230114, -0.000190221, -0.012925, 0.0180363, 0.0107634, 0.00178379, 0.00831192, 0.0219302, -0.0119898, 0.000150549, -0.00160795, 0.00223858, 0.0222819, 0.0180194, -0.00297392, 0.0380936, 0.027696, -0.0485547, -0.00673792, -0.0136482, -0.0145946, 0.00993888, 0.0167311, 0.00729267, 0.028172, 0.0266854, -0.0177746, 0.00460783, 0.000965223, -0.000182659, -0.0163195, 0.0112666, 0.00420442, 0.0239378, 0.0260914, -0.00438079, 0.0201485, -0.00577303, -0.0371844, 0.0836903, 0.0538834, 0.010093, 0.0739229, 0.0588491, -0.0202048, -0.0123982, 0.0163314, 0.0484914, 0.0119586, 0.0153684, 0.000950528, 0.0829726, 0.0289622, -0.0690953, -0.00994172, -0.0147956, -0.0240454, -0.000983466, 0.0296566, 0.0206284, 0.0132989, -0.0490788, -0.0344705, 0.010738, 0.00485992, -0.0256266, -0.0102259, 0.0194818, -0.00531681, 0.0279909, 0.0203949, 0.000717613, 0.0106845, 0.0217092, -0.0114699, 0.0422694, 0.0438186, 0.0184544, 0.045987, 0.0289492, 0.0215425, 0.00112968, 0.0108534, 0.0131786, 0.0179606, 0.0279661, -0.005068, 0.0732028, 0.042105, -0.00812592, 0.00278289, 0.0377344, 0.0215675, 0.041626, 0.0506571, 0.0199003, -0.0468155, -0.0545913, 0.0602592, 0.0192504, 0.0286038, 0.0216095, 0.0298635, 0.0449138, 0.00841558, -0.0132183, -0.0568936, 0.0154643, 0.0161369, 0.018033, -0.00731158, 0.0144048, 0.0199466, 0.00112157, 0.0526337, -0.0566153, -0.0588233, 0.00932023, 0.0308123, 0.0247017, -0.0206464, -0.0172361, -0.00171196, -0.0742568, -0.112721, 0.00271738, -0.0176039, -0.0103943, -0.0089858, 0.0313392, 0.0303527, -0.0116806, -0.00069502, 0.0446363, 0.0579662, -0.0126326, 0.0471335, 0.0551091, -0.0213116, -0.00140536, -0.0128466, -0.0402125, -0.00612418, 0.0480952, -0.0210272, -0.000624453, -0.0174004, 0.000222331, 0.02362, -0.00178157, -0.0181456, 0.00259103, 0.0227435, -0.00973407, 0.0252516, 0.00789864, -0.0209758, 0.0136139, 0.000354142, -0.0575574, -0.0428806, 0.0325433, -0.0107404, -0.00154636, -0.032713, 0.0292667, -0.00318668, -0.0350866, -0.0297196, 0.0752814, 0.0739006, -0.00597924, 0.0582298, 0.0858371, -0.0279545, -0.00903002, -0.039447, -0.0899589, -0.00205883, 0.040338, -0.0218027, 0.0057466, -0.00716812, 0.000861005, 0.000224074, -0.0136747, -0.0266004, 0.01908, 0.0118377, -0.00515657, 0.0183117, 0.0137166, -0.0282733, 0.00500035, -0.00791549, -0.0474364, -0.0381902, -0.0265269, -0.0147836, -0.00535397, -0.0285285, -0.0187809, -0.022905, -0.0318916, -0.00989262, 0.101758, 0.0476874, -0.011714, 0.0190769, 0.0156262, -0.0221144, -0.0174028, -0.0171111, -0.0813176, 0.0190233, 0.0339894, -0.0274038, -0.0320961, -0.030822, -0.0251173, -0.020667, -0.0176763, 0.0104447, 0.0580725, 0.00159201, -0.00562266, 0.00649809, -0.00537668, -0.0236138, -0.0173167, -0.00853308, -0.0222716, 0.0165191, -0.0128347, -0.0106653, -0.0183066, -0.0245926, 0.00693609, 0.00470636, -0.019569, 0.00982144, 0.0590548, -0.000687078, -0.00689437, -0.0156082, -0.0214883, -0.0197307, -0.0163494, -0.00619687, -0.0436032, 0.015834, 0.00168299, -0.0127619, -0.0183912, -0.0233822, 0.0280641, 0.0164055, -0.021617, 0.0475774, 0.0963041, -0.0165241, -0.0235064, -0.0205511, -0.0114393, -0.0235382, -0.0210334, -0.01606, 0.0165777, 0.0252932, -0.06619, -0.0280202, -0.0188842, -0.0223381, 0.017025, 0.0116592, -0.0105774, 0.0141224, 0.00704886, -0.0275141, 0.0129294, 0.00351941, 0.00479229, -0.0340564, -0.00212513, -0.0191831, -0.0440171, -0.0367617, -0.0364786, -0.00839078, 0.00284692, -0.0321314, 0.072073, 0.0403441, -0.00541975, 0.0764286, 0.0678493, -0.0313408, -0.0166161, -0.00570719, 0.0217615, -0.0198229, 0.0034298, -0.0316073, 0.0202124, -0.000668643, -0.0775361, -0.0334089, -0.0125068, -0.0383428, 0.0196715, 0.0213493, -0.0159662, 0.00728815, -1.6823e-05, -0.0157305, -0.000208923, 0.0226368, 0.0104679, -0.00858885, 0.0120403, -0.0119728, 0.0207942, -0.0437356, -0.04547, 0.00693699, 0.0135021, -0.0059061, 0.0522383, 0.0418565, -0.0107037, 0.040032, 0.0480036, 0.0107356, -0.0179784, 0.0250093, 0.031336, -0.00692, 0.0149344, -0.0203226, 0.0459959, 0.00663006, -0.0300603, -0.0121297, -0.00154483, -0.0172367, 0.025567, 0.0322257, -0.00720537, -0.0604046, -0.0686649, 0.0355963, 0.00695731, 0.0226376, 0.00825742, -0.00273981, -0.00774927, -0.00200676, -0.0194293, -0.121378, -0.0490961, 0.000409984, -0.00973757, -0.00648008, 0.0136894, -0.0144969, 0.00725505, -0.00659929, -0.0626407, 0.0218441, -0.0123855, 0.00295984, 0.0417744, -0.0680706, -0.0258248, -0.0154866, -0.0401134, -0.10752, -0.014128, -0.0109321, 0.0158692, -0.0192835, 0.0106823, 0.00495017, -0.00705048, 0.00577846, 0.0235499, 0.0638089, -0.00959739, 0.0245498, 0.0377988, -0.0411952, 0.0113143, -0.0387783, -0.0602084, -0.0130353, 0.0563808, -0.0353417, -0.0416092, -0.0706448, -0.00669613, 0.00198157, -0.011522, -0.0736184, -0.0497737, 0.0493601, -0.0178938, 0.0112718, 0.00908736, -0.0376723, 0.00601536, -0.0290858, -0.061281, -0.0271678, 0.0419324, -0.034182, -0.0329729, -0.0542385, -0.00260587, -0.00839824, -0.051757, -0.0212506, 0.0895979, 0.0580749, -0.0377996, 0.0155515, 0.0298232, -0.0574126, -0.0276651, -0.063155, -0.0644074, -0.00306793, 0.0270738, -0.0360734, -0.0478918, -0.0617576, -0.00884921, 0.00309447, -0.0188327, -0.0464833, -0.000575015, 0.00704099, -0.0296962, -0.000621924, 0.00033993, -0.0240106, -0.00959043, -0.0338026, -0.0586553, -0.0275496, 0.0116459, -0.018732, -0.0271421, -0.0246425, -0.0134611, -0.0271216, -0.0275443, -0.0140013, 0.0672616, 0.0176598, -0.0405041, -0.0267285, -0.00796294, -0.0613877, -0.0309734, -0.0424743, -0.0746367, 0.0244899, 0.0333489, -0.040818, -0.0427879, -0.0673446, -0.00562403, -0.0265053, -0.0269558, -0.0241721, 0.033073, -0.0022064, -0.0256657, -0.0245939, -0.00348623, -0.0446198, -0.0208891, -0.0330198, -0.0325695, 0.00433839, -0.0185829, -0.0260426, -0.0341833, -0.0538851, 0.00379111, -0.0231327, -0.0173398, 0.00255803, 0.038289, -0.0279588, -0.0305165, -0.0197458, -0.000840095, -0.0468213, -0.0297954, -0.0342592, -0.0166329, -0.0030243, -0.0509984, -0.0309098, -0.0327349, -0.0427043, -0.00487969, -0.021013, -0.0228825, 0.0208915, 0.054738, -0.0322242, -0.0334969, -0.0216547, -0.0128007, -0.061997, -0.0418394, -0.0452701, 0.0322887, 0.017992, -0.0769066, -0.0286322, -0.0331518, -0.0569055, -0.00653109, 0.00461373, -0.0229388, 0.0237527, 0.00309117, -0.0649791, -0.0253549, 0.00537201, -0.00648764, -0.0376204, -0.0183969, -0.01095, 0.033919, -0.0332057, -0.0769161, -0.0193606, -0.00313347, -0.0313371, 0.00541202, 0.0137241, -0.0314394, 0.0859074, 0.0858886, -0.058908, -0.052277, -0.00499673, -0.0149128, -0.0744751, -0.0346831, -0.0249371, 0.0536855, -0.004897, -0.0741273, -0.0410237, -0.0197953, -0.0645147, 0.0208221, 0.0281182, -0.00699123, 0.0687307, -0.0504464, -0.0914733, -0.00586314, 0.00462888, 0.00359361, -0.0300007, -0.0138326, -0.0299995, 0.0507149, -0.0372485, -0.0869792, -0.0270282, -0.000606404, -0.028223, 0.0361308, 0.0366861, -0.00439351, 0.0810425, 0.0149591, -0.0255092, 0.000259068, 0.00649232, 0.0104579, -0.0487026, -0.0230683, -0.0318819, 0.0834264, -0.00730142, -0.0887157, -0.0336905, 0.00156339, -0.0335854, 0.0507969, 0.0139195, 0.0131338, 0.0273335, -0.0675759, -0.00132195, 0.0145992, -0.00410884, 0.0272148, -0.0135259, 0.00916449, -0.00531953, -0.00490729, -0.116901, -0.0608457, -0.0198547, -0.0303737, -0.0601753};
#pragma HLS RESOURCE variable=SVM_detector core=ROM_2P_LUTRAM
	static const fixed_point offset = -0.302455;

	fixed_point result = offset;
	for(int i = 0; i < V_BLOCKS_PER_IMAGE; i++)
	{
		for(int j = 0; j < H_BLOCKS_PER_IMAGE; j++)
		{
			double_fixed_point block_normal = 0;
			fixed_point inv_sq = 0;

			//hardcoded for BLOCK_SIZE/CELL_SIZE of 2 and BIN_SIZE of 9
			block_normal += cells[i][j].mag_sq;
			block_normal += cells[i + 1][j].mag_sq;
			block_normal += cells[i][j + 1].mag_sq;
			block_normal += cells[i + 1][j + 1].mag_sq;

			inv_sq = fast_inv_sqrt(block_normal);

			for(int k = 0; k < BIN_SIZE; k++)
			{
				short SVM_index = (i*H_BLOCKS_PER_IMAGE + j)*36 + k;

				fixed_point norm_cell_a = cells[i][j].bin[k]*inv_sq;
				fixed_point norm_cell_b = cells[i+1][j].bin[k]*inv_sq;
				fixed_point norm_cell_c = cells[i][j+1].bin[k]*inv_sq;
				fixed_point norm_cell_d = cells[i+1][j+1].bin[k]*inv_sq;

				result += (SVM_detector[SVM_index])*norm_cell_a;
				result += (SVM_detector[SVM_index + 9])*norm_cell_b;
				result += (SVM_detector[SVM_index + 18])*norm_cell_c;
				result += (SVM_detector[SVM_index + 27])*norm_cell_d;
			}
		}
	}

	return result;
}

void compute_blocks(cell_histogram cells[IMAGE_HEIGHT/CELL_SIZE][IMAGE_WIDTH/CELL_SIZE], float hog[SVM_DESC_SIZE])
{
#pragma AP interface ap_ctrl_none port=return
//#pragma HLS ALLOCATION instances=mul limit=8 operation

	int hog_index = 0;
	for(int i = 0; i < V_BLOCKS_PER_IMAGE; i++)
	{
		for(int j = 0; j < H_BLOCKS_PER_IMAGE; j++)
		{
			double_fixed_point block_normal = 0;
			fixed_point inv_sq = 0;

			//hardcoded for BLOCK_SIZE/CELL_SIZE of 2 and BIN_SIZE of 9
			block_normal += cells[i][j].mag_sq;
			block_normal += cells[i + 1][j].mag_sq;
			block_normal += cells[i][j + 1].mag_sq;
			block_normal += cells[i + 1][j + 1].mag_sq;

			inv_sq = fast_inv_sqrt(block_normal);

			for(int jj = 0; jj < BLOCK_SIZE/CELL_SIZE; jj++)
			{
				for(int ii = 0; ii < BLOCK_SIZE/CELL_SIZE; ii++)
				{
#pragma HLS pipeline
					for(int k = 0; k < BIN_SIZE; k++, hog_index++)
					{
						hog[hog_index] = cells[i + ii][j + jj].bin[k]*inv_sq;
					}
				}
			}
		}
	}

}

void xillybus_wrapper(int *in, int *out)
{
#pragma AP interface ap_fifo port=in
#pragma AP interface ap_fifo port=out
#pragma AP interface ap_ctrl_none port=return

#pragma HLS dataflow
	//offset is last element in SVMDetector vector in OpenCV descriptors
	//offset is 0 if the SVMDetector vector size is exactly equal to the block descriptor size

	//memory
	float result;
	byte image[IMAGE_HEIGHT][IMAGE_WIDTH];
	cell_histogram cells[IMAGE_HEIGHT/CELL_SIZE][IMAGE_WIDTH/CELL_SIZE];
	float hog[SVM_DESC_SIZE];

	//input
	for(int i = 0; i < IMAGE_HEIGHT; i++)
	{
		for(int j = 0; j < IMAGE_WIDTH; j+=WORD_SIZE)
		{
			//input intensity data onto window array
			unsigned int temp = *in++;
			image[i][j] = ((temp)&0xff);
			image[i][j + 1] = ((temp>>8)&0xff);
			image[i][j + 2] = ((temp>>16)&0xff);
			image[i][j + 3] = ((temp>>24)&0xff);
		}
	}

	//gradient calculation
	gradient_vote grad_vote[IMAGE_HEIGHT][IMAGE_WIDTH];
	compute_gradients(image, grad_vote);

	//cell histogram computation
	compute_cells(grad_vote, cells);

	//SVM confidence output
	result = svm_detect(cells);
	*out++ = *((int*) &result);

	//HOG output
//	compute_blocks(cells, hog);
//	for(int i = 0; i < SVM_DESC_SIZE; i++)
//	{
//		float temp = hog[i];
//		*out++ = *((int*) &temp);
//	}
}
