// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _compute_gradients_HH_
#define _compute_gradients_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct compute_gradients : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > image_V_address0;
    sc_out< sc_logic > image_V_ce0;
    sc_in< sc_lv<8> > image_V_q0;
    sc_out< sc_lv<12> > image_V_address1;
    sc_out< sc_logic > image_V_ce1;
    sc_in< sc_lv<8> > image_V_q1;
    sc_out< sc_lv<12> > grad_vote_magnitude_s_address0;
    sc_out< sc_logic > grad_vote_magnitude_s_ce0;
    sc_out< sc_logic > grad_vote_magnitude_s_we0;
    sc_out< sc_lv<26> > grad_vote_magnitude_s_d0;
    sc_out< sc_lv<12> > grad_vote_bin_V_address0;
    sc_out< sc_logic > grad_vote_bin_V_ce0;
    sc_out< sc_logic > grad_vote_bin_V_we0;
    sc_out< sc_lv<4> > grad_vote_bin_V_d0;


    // Module declarations
    compute_gradients(sc_module_name name);
    SC_HAS_PROCESS(compute_gradients);

    ~compute_gradients();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<13> > indvar_flatten_reg_171;
    sc_signal< sc_lv<7> > i_reg_182;
    sc_signal< sc_lv<7> > j_reg_193;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_204_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_930;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_930_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_930_pp0_iter2_reg;
    sc_signal< sc_lv<13> > indvar_flatten_next_fu_210_p2;
    sc_signal< sc_lv<13> > indvar_flatten_next_reg_934;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > exitcond_fu_216_p2;
    sc_signal< sc_lv<1> > exitcond_reg_939;
    sc_signal< sc_lv<7> > j_mid2_fu_222_p3;
    sc_signal< sc_lv<7> > j_mid2_reg_945;
    sc_signal< sc_lv<1> > tmp_mid1_fu_236_p2;
    sc_signal< sc_lv<1> > tmp_mid1_reg_953;
    sc_signal< sc_lv<1> > tmp_s_fu_242_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_958;
    sc_signal< sc_lv<1> > tmp_1_mid1_fu_248_p2;
    sc_signal< sc_lv<1> > tmp_1_mid1_reg_963;
    sc_signal< sc_lv<1> > tmp_1_fu_254_p2;
    sc_signal< sc_lv<1> > tmp_1_reg_968;
    sc_signal< sc_lv<7> > p_v_fu_260_p3;
    sc_signal< sc_lv<7> > p_v_reg_973;
    sc_signal< sc_lv<14> > tmp_12_cast_fu_320_p1;
    sc_signal< sc_lv<14> > tmp_12_cast_reg_979;
    sc_signal< sc_lv<1> > tmp_6_fu_367_p2;
    sc_signal< sc_lv<1> > tmp_6_reg_994;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state7_pp0_stage1_iter2;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<7> > j_1_fu_372_p2;
    sc_signal< sc_lv<7> > j_1_reg_999;
    sc_signal< sc_lv<1> > tmp_9_fu_392_p2;
    sc_signal< sc_lv<1> > tmp_9_reg_1009;
    sc_signal< sc_lv<14> > tmp_16_fu_417_p2;
    sc_signal< sc_lv<14> > tmp_16_reg_1019;
    sc_signal< sc_lv<14> > tmp_16_reg_1019_pp0_iter1_reg;
    sc_signal< sc_lv<9> > r_V_1_fu_446_p2;
    sc_signal< sc_lv<9> > r_V_1_reg_1024;
    sc_signal< sc_lv<1> > tmp_21_reg_1030;
    sc_signal< sc_lv<1> > tmp_24_reg_1035;
    sc_signal< sc_lv<9> > gradX_fu_510_p3;
    sc_signal< sc_lv<9> > gradX_reg_1040;
    sc_signal< sc_lv<9> > gradY_fu_523_p3;
    sc_signal< sc_lv<9> > gradY_reg_1052;
    sc_signal< sc_lv<1> > quad_fu_537_p2;
    sc_signal< sc_lv<1> > quad_reg_1060;
    sc_signal< sc_lv<1> > quad_reg_1060_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_17_fu_542_p2;
    sc_signal< sc_lv<1> > tmp_17_reg_1068;
    sc_signal< sc_lv<9> > p_Val2_s_fu_546_p3;
    sc_signal< sc_lv<9> > p_Val2_s_reg_1074;
    sc_signal< sc_lv<26> > r1_V_fu_624_p2;
    sc_signal< sc_lv<26> > r1_V_reg_1079;
    sc_signal< sc_lv<1> > tmp_14_i_fu_782_p2;
    sc_signal< sc_lv<1> > tmp_14_i_reg_1085;
    sc_signal< sc_lv<1> > tmp_15_i_fu_788_p2;
    sc_signal< sc_lv<1> > tmp_15_i_reg_1092;
    sc_signal< sc_lv<1> > tmp_16_i_fu_794_p2;
    sc_signal< sc_lv<1> > tmp_16_i_reg_1098;
    sc_signal< sc_lv<1> > tmp_18_i_fu_800_p2;
    sc_signal< sc_lv<1> > tmp_18_i_reg_1104;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<13> > ap_phi_mux_indvar_flatten_phi_fu_175_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<7> > ap_phi_mux_i_phi_fu_186_p4;
    sc_signal< sc_lv<7> > ap_phi_mux_j_phi_fu_197_p4;
    sc_signal< sc_lv<64> > tmp_27_cast_fu_330_p1;
    sc_signal< sc_lv<64> > tmp_28_cast_fu_341_p1;
    sc_signal< sc_lv<64> > tmp_25_cast_fu_387_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > tmp_26_cast_fu_412_p1;
    sc_signal< sc_lv<64> > tmp_29_cast_fu_806_p1;
    sc_signal< sc_lv<7> > i_s_fu_230_p2;
    sc_signal< sc_lv<7> > tmp_3_fu_268_p2;
    sc_signal< sc_lv<7> > tmp_5_fu_274_p3;
    sc_signal< sc_lv<13> > tmp_7_fu_282_p3;
    sc_signal< sc_lv<7> > i_1_mid1_fu_294_p2;
    sc_signal< sc_lv<7> > tmp_4_fu_300_p3;
    sc_signal< sc_lv<13> > tmp_8_fu_308_p3;
    sc_signal< sc_lv<14> > tmp_24_cast_fu_316_p1;
    sc_signal< sc_lv<14> > tmp_13_fu_324_p2;
    sc_signal< sc_lv<14> > tmp_20_cast_fu_290_p1;
    sc_signal< sc_lv<14> > tmp_15_fu_335_p2;
    sc_signal< sc_lv<13> > tmp_2_fu_356_p3;
    sc_signal< sc_lv<14> > tmp_8_cast_fu_377_p1;
    sc_signal< sc_lv<14> > tmp_4_cast_fu_363_p1;
    sc_signal< sc_lv<14> > tmp_11_fu_381_p2;
    sc_signal< sc_lv<7> > tmp_10_fu_397_p2;
    sc_signal< sc_lv<14> > tmp_11_cast_fu_402_p1;
    sc_signal< sc_lv<14> > tmp_12_fu_406_p2;
    sc_signal< sc_lv<1> > tmp_mid2_fu_346_p3;
    sc_signal< sc_lv<1> > tmp_1_mid2_fu_351_p3;
    sc_signal< sc_lv<8> > tmp_51_load_fu_422_p3;
    sc_signal< sc_lv<8> > tmp_53_load_fu_430_p3;
    sc_signal< sc_lv<9> > lhs_V_1_fu_438_p1;
    sc_signal< sc_lv<9> > rhs_V_1_fu_442_p1;
    sc_signal< sc_lv<8> > tmp_45_load_fu_468_p3;
    sc_signal< sc_lv<8> > tmp_49_load_fu_475_p3;
    sc_signal< sc_lv<9> > lhs_V_fu_482_p1;
    sc_signal< sc_lv<9> > rhs_V_fu_486_p1;
    sc_signal< sc_lv<9> > r_V_fu_490_p2;
    sc_signal< sc_lv<1> > tmp_20_fu_496_p3;
    sc_signal< sc_lv<9> > tmp_14_fu_504_p2;
    sc_signal< sc_lv<9> > p_Val2_5_fu_518_p2;
    sc_signal< sc_lv<1> > tmp_23_fu_529_p3;
    sc_signal< sc_lv<22> > p_Val2_2_fu_551_p3;
    sc_signal< sc_lv<23> > p_Val2_3_fu_563_p3;
    sc_signal< sc_lv<24> > p_Val2_4_fu_575_p3;
    sc_signal< sc_lv<9> > tmp_22_fu_587_p3;
    sc_signal< sc_lv<24> > p_Val2_1_fu_592_p3;
    sc_signal< sc_lv<24> > p_Val2_9_cast_fu_571_p1;
    sc_signal< sc_lv<24> > p_Val2_8_cast_fu_559_p1;
    sc_signal< sc_lv<24> > addconv_fu_604_p2;
    sc_signal< sc_lv<25> > addconv_cast_fu_610_p1;
    sc_signal< sc_lv<25> > p_Val2_10_cast_fu_583_p1;
    sc_signal< sc_lv<25> > addconv2_fu_614_p2;
    sc_signal< sc_lv<26> > addconv2_cast_fu_620_p1;
    sc_signal< sc_lv<26> > p_Val2_11_cast_fu_600_p1;
    sc_signal< sc_lv<25> > tmp_25_fu_630_p3;
    sc_signal< sc_lv<27> > dy_V_fu_637_p1;
    sc_signal< sc_lv<22> > tmp_9_i_fu_649_p3;
    sc_signal< sc_lv<29> > tmp_9_i_cast_fu_656_p1;
    sc_signal< sc_lv<21> > tmp_10_i_fu_664_p3;
    sc_signal< sc_lv<28> > tmp_10_i_cast_fu_671_p1;
    sc_signal< sc_lv<30> > p_Val2_2_cast_i_fu_660_p1;
    sc_signal< sc_lv<30> > p_Val2_3_cast_i_fu_679_p1;
    sc_signal< sc_lv<23> > tmp_11_i_fu_689_p3;
    sc_signal< sc_lv<30> > tmp_11_i_cast_fu_696_p1;
    sc_signal< sc_lv<24> > tmp_12_i_fu_704_p3;
    sc_signal< sc_lv<31> > tmp_12_i_cast_fu_711_p1;
    sc_signal< sc_lv<19> > tmp_13_i_fu_719_p3;
    sc_signal< sc_lv<26> > tmp_13_i_cast_fu_726_p1;
    sc_signal< sc_lv<29> > p_Val2_2_i_cast_fu_675_p1;
    sc_signal< sc_lv<29> > p_Val2_5_i_cast_fu_730_p1;
    sc_signal< sc_lv<29> > tmp1_fu_734_p2;
    sc_signal< sc_lv<32> > tmp1_cast_fu_740_p1;
    sc_signal< sc_lv<32> > p_Val2_7_fu_715_p1;
    sc_signal< sc_lv<29> > tmp2_fu_750_p2;
    sc_signal< sc_lv<30> > tmp2_cast_fu_756_p1;
    sc_signal< sc_lv<31> > p_Val2_3_i_cast_fu_700_p1;
    sc_signal< sc_lv<31> > tmp3_fu_766_p2;
    sc_signal< sc_lv<32> > tmp3_cast_fu_772_p1;
    sc_signal< sc_lv<30> > dy_V_cast15_cast_i_fu_641_p1;
    sc_signal< sc_lv<30> > addconv_i_fu_683_p2;
    sc_signal< sc_lv<32> > dy_V_cast_i_fu_645_p1;
    sc_signal< sc_lv<32> > p_Val2_i_fu_744_p2;
    sc_signal< sc_lv<30> > p_Val2_7_i_fu_760_p2;
    sc_signal< sc_lv<32> > p_Val2_8_i_fu_776_p2;
    sc_signal< sc_lv<25> > a_V_fu_811_p3;
    sc_signal< sc_lv<26> > a_V_cast_fu_818_p1;
    sc_signal< sc_lv<1> > tmp_18_fu_822_p2;
    sc_signal< sc_lv<1> > sel_tmp_i_fu_863_p2;
    sc_signal< sc_lv<1> > sel_tmp1_i_fu_868_p2;
    sc_signal< sc_lv<4> > tmp_17_i_fu_835_p3;
    sc_signal< sc_lv<4> > tmp_21_cast_i_cast_c_fu_856_p3;
    sc_signal< sc_lv<1> > sel_tmp3_i_fu_881_p2;
    sc_signal< sc_lv<1> > sel_tmp4_i_fu_885_p2;
    sc_signal< sc_lv<1> > sel_tmp5_i_fu_890_p2;
    sc_signal< sc_lv<4> > tmp_19_cast_i_cast_c_fu_842_p3;
    sc_signal< sc_lv<4> > sel_tmp2_i_fu_873_p3;
    sc_signal< sc_lv<1> > tmp4_fu_904_p2;
    sc_signal< sc_lv<1> > sel_tmp9_i_fu_908_p2;
    sc_signal< sc_lv<4> > tmp_20_cast_i_cast_c_fu_849_p3;
    sc_signal< sc_lv<4> > sel_tmp6_i_fu_896_p3;
    sc_signal< sc_lv<4> > sel_tmp10_i_fu_914_p3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<13> ap_const_lv13_1000;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<7> ap_const_lv7_3F;
    static const sc_lv<7> ap_const_lv7_7F;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<7> ap_const_lv7_2;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<29> ap_const_lv29_10000;
    static const sc_lv<31> ap_const_lv31_20000;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_V_cast_fu_818_p1();
    void thread_a_V_fu_811_p3();
    void thread_addconv2_cast_fu_620_p1();
    void thread_addconv2_fu_614_p2();
    void thread_addconv_cast_fu_610_p1();
    void thread_addconv_fu_604_p2();
    void thread_addconv_i_fu_683_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_block_state6_pp0_stage0_iter2();
    void thread_ap_block_state7_pp0_stage1_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_phi_fu_186_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_175_p4();
    void thread_ap_phi_mux_j_phi_fu_197_p4();
    void thread_ap_ready();
    void thread_dy_V_cast15_cast_i_fu_641_p1();
    void thread_dy_V_cast_i_fu_645_p1();
    void thread_dy_V_fu_637_p1();
    void thread_exitcond_flatten_fu_204_p2();
    void thread_exitcond_fu_216_p2();
    void thread_gradX_fu_510_p3();
    void thread_gradY_fu_523_p3();
    void thread_grad_vote_bin_V_address0();
    void thread_grad_vote_bin_V_ce0();
    void thread_grad_vote_bin_V_d0();
    void thread_grad_vote_bin_V_we0();
    void thread_grad_vote_magnitude_s_address0();
    void thread_grad_vote_magnitude_s_ce0();
    void thread_grad_vote_magnitude_s_d0();
    void thread_grad_vote_magnitude_s_we0();
    void thread_i_1_mid1_fu_294_p2();
    void thread_i_s_fu_230_p2();
    void thread_image_V_address0();
    void thread_image_V_address1();
    void thread_image_V_ce0();
    void thread_image_V_ce1();
    void thread_indvar_flatten_next_fu_210_p2();
    void thread_j_1_fu_372_p2();
    void thread_j_mid2_fu_222_p3();
    void thread_lhs_V_1_fu_438_p1();
    void thread_lhs_V_fu_482_p1();
    void thread_p_Val2_10_cast_fu_583_p1();
    void thread_p_Val2_11_cast_fu_600_p1();
    void thread_p_Val2_1_fu_592_p3();
    void thread_p_Val2_2_cast_i_fu_660_p1();
    void thread_p_Val2_2_fu_551_p3();
    void thread_p_Val2_2_i_cast_fu_675_p1();
    void thread_p_Val2_3_cast_i_fu_679_p1();
    void thread_p_Val2_3_fu_563_p3();
    void thread_p_Val2_3_i_cast_fu_700_p1();
    void thread_p_Val2_4_fu_575_p3();
    void thread_p_Val2_5_fu_518_p2();
    void thread_p_Val2_5_i_cast_fu_730_p1();
    void thread_p_Val2_7_fu_715_p1();
    void thread_p_Val2_7_i_fu_760_p2();
    void thread_p_Val2_8_cast_fu_559_p1();
    void thread_p_Val2_8_i_fu_776_p2();
    void thread_p_Val2_9_cast_fu_571_p1();
    void thread_p_Val2_i_fu_744_p2();
    void thread_p_Val2_s_fu_546_p3();
    void thread_p_v_fu_260_p3();
    void thread_quad_fu_537_p2();
    void thread_r1_V_fu_624_p2();
    void thread_r_V_1_fu_446_p2();
    void thread_r_V_fu_490_p2();
    void thread_rhs_V_1_fu_442_p1();
    void thread_rhs_V_fu_486_p1();
    void thread_sel_tmp10_i_fu_914_p3();
    void thread_sel_tmp1_i_fu_868_p2();
    void thread_sel_tmp2_i_fu_873_p3();
    void thread_sel_tmp3_i_fu_881_p2();
    void thread_sel_tmp4_i_fu_885_p2();
    void thread_sel_tmp5_i_fu_890_p2();
    void thread_sel_tmp6_i_fu_896_p3();
    void thread_sel_tmp9_i_fu_908_p2();
    void thread_sel_tmp_i_fu_863_p2();
    void thread_tmp1_cast_fu_740_p1();
    void thread_tmp1_fu_734_p2();
    void thread_tmp2_cast_fu_756_p1();
    void thread_tmp2_fu_750_p2();
    void thread_tmp3_cast_fu_772_p1();
    void thread_tmp3_fu_766_p2();
    void thread_tmp4_fu_904_p2();
    void thread_tmp_10_fu_397_p2();
    void thread_tmp_10_i_cast_fu_671_p1();
    void thread_tmp_10_i_fu_664_p3();
    void thread_tmp_11_cast_fu_402_p1();
    void thread_tmp_11_fu_381_p2();
    void thread_tmp_11_i_cast_fu_696_p1();
    void thread_tmp_11_i_fu_689_p3();
    void thread_tmp_12_cast_fu_320_p1();
    void thread_tmp_12_fu_406_p2();
    void thread_tmp_12_i_cast_fu_711_p1();
    void thread_tmp_12_i_fu_704_p3();
    void thread_tmp_13_fu_324_p2();
    void thread_tmp_13_i_cast_fu_726_p1();
    void thread_tmp_13_i_fu_719_p3();
    void thread_tmp_14_fu_504_p2();
    void thread_tmp_14_i_fu_782_p2();
    void thread_tmp_15_fu_335_p2();
    void thread_tmp_15_i_fu_788_p2();
    void thread_tmp_16_fu_417_p2();
    void thread_tmp_16_i_fu_794_p2();
    void thread_tmp_17_fu_542_p2();
    void thread_tmp_17_i_fu_835_p3();
    void thread_tmp_18_fu_822_p2();
    void thread_tmp_18_i_fu_800_p2();
    void thread_tmp_19_cast_i_cast_c_fu_842_p3();
    void thread_tmp_1_fu_254_p2();
    void thread_tmp_1_mid1_fu_248_p2();
    void thread_tmp_1_mid2_fu_351_p3();
    void thread_tmp_20_cast_fu_290_p1();
    void thread_tmp_20_cast_i_cast_c_fu_849_p3();
    void thread_tmp_20_fu_496_p3();
    void thread_tmp_21_cast_i_cast_c_fu_856_p3();
    void thread_tmp_22_fu_587_p3();
    void thread_tmp_23_fu_529_p3();
    void thread_tmp_24_cast_fu_316_p1();
    void thread_tmp_25_cast_fu_387_p1();
    void thread_tmp_25_fu_630_p3();
    void thread_tmp_26_cast_fu_412_p1();
    void thread_tmp_27_cast_fu_330_p1();
    void thread_tmp_28_cast_fu_341_p1();
    void thread_tmp_29_cast_fu_806_p1();
    void thread_tmp_2_fu_356_p3();
    void thread_tmp_3_fu_268_p2();
    void thread_tmp_45_load_fu_468_p3();
    void thread_tmp_49_load_fu_475_p3();
    void thread_tmp_4_cast_fu_363_p1();
    void thread_tmp_4_fu_300_p3();
    void thread_tmp_51_load_fu_422_p3();
    void thread_tmp_53_load_fu_430_p3();
    void thread_tmp_5_fu_274_p3();
    void thread_tmp_6_fu_367_p2();
    void thread_tmp_7_fu_282_p3();
    void thread_tmp_8_cast_fu_377_p1();
    void thread_tmp_8_fu_308_p3();
    void thread_tmp_9_fu_392_p2();
    void thread_tmp_9_i_cast_fu_656_p1();
    void thread_tmp_9_i_fu_649_p3();
    void thread_tmp_mid1_fu_236_p2();
    void thread_tmp_mid2_fu_346_p3();
    void thread_tmp_s_fu_242_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
