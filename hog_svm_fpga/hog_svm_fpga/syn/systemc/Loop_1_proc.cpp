// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_1_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_1_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_1_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> Loop_1_proc::ap_ST_fsm_state1 = "1";
const sc_lv<4> Loop_1_proc::ap_ST_fsm_state2 = "10";
const sc_lv<4> Loop_1_proc::ap_ST_fsm_state3 = "100";
const sc_lv<4> Loop_1_proc::ap_ST_fsm_state4 = "1000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_2 = "10";
const sc_lv<1> Loop_1_proc::ap_const_lv1_0 = "0";
const sc_lv<32> Loop_1_proc::ap_const_lv32_1 = "1";
const sc_lv<7> Loop_1_proc::ap_const_lv7_0 = "0000000";
const sc_lv<1> Loop_1_proc::ap_const_lv1_1 = "1";
const sc_lv<32> Loop_1_proc::ap_const_lv32_3 = "11";
const sc_lv<5> Loop_1_proc::ap_const_lv5_0 = "00000";
const sc_lv<7> Loop_1_proc::ap_const_lv7_40 = "1000000";
const sc_lv<7> Loop_1_proc::ap_const_lv7_1 = "1";
const sc_lv<6> Loop_1_proc::ap_const_lv6_0 = "000000";
const sc_lv<5> Loop_1_proc::ap_const_lv5_10 = "10000";
const sc_lv<5> Loop_1_proc::ap_const_lv5_1 = "1";
const sc_lv<6> Loop_1_proc::ap_const_lv6_1 = "1";
const sc_lv<32> Loop_1_proc::ap_const_lv32_8 = "1000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_F = "1111";
const sc_lv<32> Loop_1_proc::ap_const_lv32_10 = "10000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_17 = "10111";
const sc_lv<32> Loop_1_proc::ap_const_lv32_18 = "11000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_1F = "11111";
const sc_lv<7> Loop_1_proc::ap_const_lv7_4 = "100";
const sc_lv<6> Loop_1_proc::ap_const_lv6_2 = "10";
const sc_lv<6> Loop_1_proc::ap_const_lv6_3 = "11";
const bool Loop_1_proc::ap_const_boolean_1 = true;

Loop_1_proc::Loop_1_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( in_r_empty_n );
    sensitive << ( exitcond_fu_163_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_i_fu_139_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_i_fu_139_p2 );

    SC_METHOD(thread_exitcond_fu_163_p2);
    sensitive << ( in_r_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_163_p2 );
    sensitive << ( p_1_rec_i_reg_117 );

    SC_METHOD(thread_exitcond_i_fu_139_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_i_reg_105 );

    SC_METHOD(thread_i_fu_145_p2);
    sensitive << ( i_i_reg_105 );

    SC_METHOD(thread_image_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_118_cast_fu_189_p1 );
    sensitive << ( tmp_114_fu_267_p1 );

    SC_METHOD(thread_image_V_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_112_fu_212_p1 );
    sensitive << ( tmp_116_fu_285_p1 );

    SC_METHOD(thread_image_V_ce0);
    sensitive << ( in_r_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_163_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_image_V_ce1);
    sensitive << ( in_r_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_163_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_image_V_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_2_i_reg_317 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_125_fu_175_p1 );

    SC_METHOD(thread_image_V_d1);
    sensitive << ( in_r_dout );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_3_i_reg_322 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_image_V_we0);
    sensitive << ( in_r_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_163_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_image_V_we1);
    sensitive << ( in_r_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_163_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_in_r_blk_n);
    sensitive << ( in_r_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_163_p2 );

    SC_METHOD(thread_in_r_read);
    sensitive << ( in_r_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_163_p2 );

    SC_METHOD(thread_j_fu_248_p2);
    sensitive << ( j_i_reg_128 );

    SC_METHOD(thread_p_rec_i_fu_169_p2);
    sensitive << ( p_1_rec_i_reg_117 );

    SC_METHOD(thread_tmp_111_fu_204_p3);
    sensitive << ( i_i_reg_105 );
    sensitive << ( tmp_4_i_fu_198_p2 );

    SC_METHOD(thread_tmp_112_fu_212_p1);
    sensitive << ( tmp_111_fu_204_p3 );

    SC_METHOD(thread_tmp_113_fu_259_p3);
    sensitive << ( i_i_reg_105 );
    sensitive << ( tmp_7_i_fu_254_p2 );

    SC_METHOD(thread_tmp_114_fu_267_p1);
    sensitive << ( tmp_113_fu_259_p3 );

    SC_METHOD(thread_tmp_115_fu_277_p3);
    sensitive << ( i_i_reg_105 );
    sensitive << ( tmp_i_fu_272_p2 );

    SC_METHOD(thread_tmp_116_fu_285_p1);
    sensitive << ( tmp_115_fu_277_p3 );

    SC_METHOD(thread_tmp_117_cast_fu_159_p1);
    sensitive << ( tmp_fu_151_p3 );

    SC_METHOD(thread_tmp_118_cast_fu_189_p1);
    sensitive << ( tmp_s_fu_184_p2 );

    SC_METHOD(thread_tmp_125_fu_175_p1);
    sensitive << ( in_r_dout );

    SC_METHOD(thread_tmp_126_fu_194_p1);
    sensitive << ( j_i_reg_128 );

    SC_METHOD(thread_tmp_3_i_cast_fu_180_p1);
    sensitive << ( j_i_reg_128 );

    SC_METHOD(thread_tmp_4_i_fu_198_p2);
    sensitive << ( tmp_126_fu_194_p1 );

    SC_METHOD(thread_tmp_7_i_fu_254_p2);
    sensitive << ( tmp_126_reg_311 );

    SC_METHOD(thread_tmp_fu_151_p3);
    sensitive << ( i_i_reg_105 );

    SC_METHOD(thread_tmp_i_fu_272_p2);
    sensitive << ( tmp_126_reg_311 );

    SC_METHOD(thread_tmp_s_fu_184_p2);
    sensitive << ( tmp_117_cast_reg_298 );
    sensitive << ( tmp_3_i_cast_fu_180_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_r_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_163_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_i_fu_139_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_1_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r_dout, "(port)in_r_dout");
    sc_trace(mVcdFile, in_r_empty_n, "(port)in_r_empty_n");
    sc_trace(mVcdFile, in_r_read, "(port)in_r_read");
    sc_trace(mVcdFile, image_V_address0, "(port)image_V_address0");
    sc_trace(mVcdFile, image_V_ce0, "(port)image_V_ce0");
    sc_trace(mVcdFile, image_V_we0, "(port)image_V_we0");
    sc_trace(mVcdFile, image_V_d0, "(port)image_V_d0");
    sc_trace(mVcdFile, image_V_address1, "(port)image_V_address1");
    sc_trace(mVcdFile, image_V_ce1, "(port)image_V_ce1");
    sc_trace(mVcdFile, image_V_we1, "(port)image_V_we1");
    sc_trace(mVcdFile, image_V_d1, "(port)image_V_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, in_r_blk_n, "in_r_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond_fu_163_p2, "exitcond_fu_163_p2");
    sc_trace(mVcdFile, i_fu_145_p2, "i_fu_145_p2");
    sc_trace(mVcdFile, i_reg_293, "i_reg_293");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_117_cast_fu_159_p1, "tmp_117_cast_fu_159_p1");
    sc_trace(mVcdFile, tmp_117_cast_reg_298, "tmp_117_cast_reg_298");
    sc_trace(mVcdFile, exitcond_i_fu_139_p2, "exitcond_i_fu_139_p2");
    sc_trace(mVcdFile, p_rec_i_fu_169_p2, "p_rec_i_fu_169_p2");
    sc_trace(mVcdFile, p_rec_i_reg_306, "p_rec_i_reg_306");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, tmp_126_fu_194_p1, "tmp_126_fu_194_p1");
    sc_trace(mVcdFile, tmp_126_reg_311, "tmp_126_reg_311");
    sc_trace(mVcdFile, p_2_i_reg_317, "p_2_i_reg_317");
    sc_trace(mVcdFile, p_3_i_reg_322, "p_3_i_reg_322");
    sc_trace(mVcdFile, j_fu_248_p2, "j_fu_248_p2");
    sc_trace(mVcdFile, j_reg_327, "j_reg_327");
    sc_trace(mVcdFile, i_i_reg_105, "i_i_reg_105");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, p_1_rec_i_reg_117, "p_1_rec_i_reg_117");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_i_reg_128, "j_i_reg_128");
    sc_trace(mVcdFile, tmp_118_cast_fu_189_p1, "tmp_118_cast_fu_189_p1");
    sc_trace(mVcdFile, tmp_112_fu_212_p1, "tmp_112_fu_212_p1");
    sc_trace(mVcdFile, tmp_114_fu_267_p1, "tmp_114_fu_267_p1");
    sc_trace(mVcdFile, tmp_116_fu_285_p1, "tmp_116_fu_285_p1");
    sc_trace(mVcdFile, tmp_125_fu_175_p1, "tmp_125_fu_175_p1");
    sc_trace(mVcdFile, tmp_fu_151_p3, "tmp_fu_151_p3");
    sc_trace(mVcdFile, tmp_3_i_cast_fu_180_p1, "tmp_3_i_cast_fu_180_p1");
    sc_trace(mVcdFile, tmp_s_fu_184_p2, "tmp_s_fu_184_p2");
    sc_trace(mVcdFile, tmp_4_i_fu_198_p2, "tmp_4_i_fu_198_p2");
    sc_trace(mVcdFile, tmp_111_fu_204_p3, "tmp_111_fu_204_p3");
    sc_trace(mVcdFile, tmp_7_i_fu_254_p2, "tmp_7_i_fu_254_p2");
    sc_trace(mVcdFile, tmp_113_fu_259_p3, "tmp_113_fu_259_p3");
    sc_trace(mVcdFile, tmp_i_fu_272_p2, "tmp_i_fu_272_p2");
    sc_trace(mVcdFile, tmp_115_fu_277_p3, "tmp_115_fu_277_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Loop_1_proc::~Loop_1_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Loop_1_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(exitcond_i_fu_139_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((!(esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_r_empty_n.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i_i_reg_105 = i_reg_293.read();
    } else if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_i_reg_105 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_i_fu_139_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_i_reg_128 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_i_reg_128 = j_reg_327.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_i_fu_139_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        p_1_rec_i_reg_117 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_1_rec_i_reg_117 = p_rec_i_reg_306.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_293 = i_fu_145_p2.read();
    }
    if ((!(esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_r_empty_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        j_reg_327 = j_fu_248_p2.read();
        p_2_i_reg_317 = in_r_dout.read().range(23, 16);
        p_3_i_reg_322 = in_r_dout.read().range(31, 24);
        tmp_126_reg_311 = tmp_126_fu_194_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_r_empty_n.read(), ap_const_logic_0)))) {
        p_rec_i_reg_306 = p_rec_i_fu_169_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_i_fu_139_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_117_cast_reg_298 = tmp_117_cast_fu_159_p1.read();
    }
}

void Loop_1_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_1_proc::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Loop_1_proc::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Loop_1_proc::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Loop_1_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_1_proc::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_r_empty_n.read(), ap_const_logic_0));
}

void Loop_1_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(exitcond_i_fu_139_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_1_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond_i_fu_139_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_exitcond_fu_163_p2() {
    exitcond_fu_163_p2 = (!p_1_rec_i_reg_117.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(p_1_rec_i_reg_117.read() == ap_const_lv5_10);
}

void Loop_1_proc::thread_exitcond_i_fu_139_p2() {
    exitcond_i_fu_139_p2 = (!i_i_reg_105.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_105.read() == ap_const_lv7_40);
}

void Loop_1_proc::thread_i_fu_145_p2() {
    i_fu_145_p2 = (!i_i_reg_105.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_i_reg_105.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void Loop_1_proc::thread_image_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        image_V_address0 =  (sc_lv<12>) (tmp_114_fu_267_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        image_V_address0 =  (sc_lv<12>) (tmp_118_cast_fu_189_p1.read());
    } else {
        image_V_address0 = "XXXXXXXXXXXX";
    }
}

void Loop_1_proc::thread_image_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        image_V_address1 =  (sc_lv<12>) (tmp_116_fu_285_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        image_V_address1 =  (sc_lv<12>) (tmp_112_fu_212_p1.read());
    } else {
        image_V_address1 = "XXXXXXXXXXXX";
    }
}

void Loop_1_proc::thread_image_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_r_empty_n.read(), ap_const_logic_0))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        image_V_ce0 = ap_const_logic_1;
    } else {
        image_V_ce0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_image_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_r_empty_n.read(), ap_const_logic_0))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        image_V_ce1 = ap_const_logic_1;
    } else {
        image_V_ce1 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_image_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        image_V_d0 = p_2_i_reg_317.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        image_V_d0 = tmp_125_fu_175_p1.read();
    } else {
        image_V_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void Loop_1_proc::thread_image_V_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        image_V_d1 = p_3_i_reg_322.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        image_V_d1 = in_r_dout.read().range(15, 8);
    } else {
        image_V_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void Loop_1_proc::thread_image_V_we0() {
    if (((!(esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_r_empty_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        image_V_we0 = ap_const_logic_1;
    } else {
        image_V_we0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_image_V_we1() {
    if (((!(esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_r_empty_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        image_V_we1 = ap_const_logic_1;
    } else {
        image_V_we1 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_in_r_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0))) {
        in_r_blk_n = in_r_empty_n.read();
    } else {
        in_r_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_in_r_read() {
    if ((!(esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_r_empty_n.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        in_r_read = ap_const_logic_1;
    } else {
        in_r_read = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_j_fu_248_p2() {
    j_fu_248_p2 = (!ap_const_lv7_4.is_01() || !j_i_reg_128.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_4) + sc_biguint<7>(j_i_reg_128.read()));
}

void Loop_1_proc::thread_p_rec_i_fu_169_p2() {
    p_rec_i_fu_169_p2 = (!p_1_rec_i_reg_117.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(p_1_rec_i_reg_117.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void Loop_1_proc::thread_tmp_111_fu_204_p3() {
    tmp_111_fu_204_p3 = esl_concat<7,6>(i_i_reg_105.read(), tmp_4_i_fu_198_p2.read());
}

void Loop_1_proc::thread_tmp_112_fu_212_p1() {
    tmp_112_fu_212_p1 = esl_zext<64,13>(tmp_111_fu_204_p3.read());
}

void Loop_1_proc::thread_tmp_113_fu_259_p3() {
    tmp_113_fu_259_p3 = esl_concat<7,6>(i_i_reg_105.read(), tmp_7_i_fu_254_p2.read());
}

void Loop_1_proc::thread_tmp_114_fu_267_p1() {
    tmp_114_fu_267_p1 = esl_zext<64,13>(tmp_113_fu_259_p3.read());
}

void Loop_1_proc::thread_tmp_115_fu_277_p3() {
    tmp_115_fu_277_p3 = esl_concat<7,6>(i_i_reg_105.read(), tmp_i_fu_272_p2.read());
}

void Loop_1_proc::thread_tmp_116_fu_285_p1() {
    tmp_116_fu_285_p1 = esl_zext<64,13>(tmp_115_fu_277_p3.read());
}

void Loop_1_proc::thread_tmp_117_cast_fu_159_p1() {
    tmp_117_cast_fu_159_p1 = esl_zext<14,13>(tmp_fu_151_p3.read());
}

void Loop_1_proc::thread_tmp_118_cast_fu_189_p1() {
    tmp_118_cast_fu_189_p1 = esl_zext<64,14>(tmp_s_fu_184_p2.read());
}

void Loop_1_proc::thread_tmp_125_fu_175_p1() {
    tmp_125_fu_175_p1 = in_r_dout.read().range(8-1, 0);
}

void Loop_1_proc::thread_tmp_126_fu_194_p1() {
    tmp_126_fu_194_p1 = j_i_reg_128.read().range(6-1, 0);
}

void Loop_1_proc::thread_tmp_3_i_cast_fu_180_p1() {
    tmp_3_i_cast_fu_180_p1 = esl_zext<14,7>(j_i_reg_128.read());
}

void Loop_1_proc::thread_tmp_4_i_fu_198_p2() {
    tmp_4_i_fu_198_p2 = (tmp_126_fu_194_p1.read() | ap_const_lv6_1);
}

void Loop_1_proc::thread_tmp_7_i_fu_254_p2() {
    tmp_7_i_fu_254_p2 = (tmp_126_reg_311.read() | ap_const_lv6_2);
}

void Loop_1_proc::thread_tmp_fu_151_p3() {
    tmp_fu_151_p3 = esl_concat<7,6>(i_i_reg_105.read(), ap_const_lv6_0);
}

void Loop_1_proc::thread_tmp_i_fu_272_p2() {
    tmp_i_fu_272_p2 = (tmp_126_reg_311.read() | ap_const_lv6_3);
}

void Loop_1_proc::thread_tmp_s_fu_184_p2() {
    tmp_s_fu_184_p2 = (!tmp_117_cast_reg_298.read().is_01() || !tmp_3_i_cast_fu_180_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_117_cast_reg_298.read()) + sc_biguint<14>(tmp_3_i_cast_fu_180_p1.read()));
}

void Loop_1_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond_i_fu_139_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_r_empty_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((!(esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_r_empty_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(exitcond_fu_163_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

}

