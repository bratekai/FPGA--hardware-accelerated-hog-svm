-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_blocks is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    cells_bin_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cells_bin_V_ce0 : OUT STD_LOGIC;
    cells_bin_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cells_bin_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cells_bin_V_ce1 : OUT STD_LOGIC;
    cells_bin_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    cells_mag_sq_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cells_mag_sq_V_ce0 : OUT STD_LOGIC;
    cells_mag_sq_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    cells_mag_sq_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cells_mag_sq_V_ce1 : OUT STD_LOGIC;
    cells_mag_sq_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    hog_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    hog_ce0 : OUT STD_LOGIC;
    hog_we0 : OUT STD_LOGIC;
    hog_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hog_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    hog_ce1 : OUT STD_LOGIC;
    hog_we1 : OUT STD_LOGIC;
    hog_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of compute_blocks is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (41 downto 0) := "000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (41 downto 0) := "000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (41 downto 0) := "000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (41 downto 0) := "000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (41 downto 0) := "000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (41 downto 0) := "000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (41 downto 0) := "000001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (41 downto 0) := "000010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (41 downto 0) := "000100000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (41 downto 0) := "001000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (41 downto 0) := "010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (41 downto 0) := "100000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_40400000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000010000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_FC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111100";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_9E : STD_LOGIC_VECTOR (7 downto 0) := "10011110";
    constant ap_const_lv32_5F3759DF : STD_LOGIC_VECTOR (31 downto 0) := "01011111001101110101100111011111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv11_6 : STD_LOGIC_VECTOR (10 downto 0) := "00000000110";
    constant ap_const_lv11_7 : STD_LOGIC_VECTOR (10 downto 0) := "00000000111";
    constant ap_const_lv62_0 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_8 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_428 : STD_LOGIC_VECTOR (2 downto 0);
    signal hog_index_2_reg_439 : STD_LOGIC_VECTOR (31 downto 0);
    signal jj_reg_448 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvars_iv_in_reg_459 : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_468 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_484_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_497 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal reg_504 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state39_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state44_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state49_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state54_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal exitcond_flatten_reg_3481 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state40_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state45_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state50_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state41_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state46_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state51_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state37_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state47_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state52_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state38_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state43_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state48_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state53_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal exitcond_flatten_reg_3481_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_509 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_next7_fu_520_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_next7_reg_3229 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal hog_index_1_mid2_fu_538_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal hog_index_1_mid2_reg_3234 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_flatten8_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid2_fu_546_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_mid2_reg_3241 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_cast_mid2_v_fu_560_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_cast_mid2_v_reg_3248 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_v1_fu_574_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_v1_reg_3256 : STD_LOGIC_VECTOR (2 downto 0);
    signal hog_index_mid2_fu_582_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal hog_index_mid2_reg_3261 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal p_Val2_10_reg_3276 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_2_fu_614_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_2_reg_3281 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp25_fu_642_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp25_reg_3297 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_1_fu_653_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_1_reg_3302 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal is_neg_reg_3309 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_666_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_reg_3315 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_s_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_3320 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal p_Val2_15_fu_676_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_15_reg_3326 : STD_LOGIC_VECTOR (63 downto 0);
    signal num_zeros_fu_699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_reg_3332 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_703_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_61_reg_3337 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp32_V_4_fu_766_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_4_reg_3342 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp32_V_10_fu_774_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_10_reg_3347 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_59_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_3352 : STD_LOGIC_VECTOR (0 downto 0);
    signal yn_fu_850_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal yn_reg_3357 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal x_fu_861_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_3363 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_479_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_reg_3368 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal isneg_reg_3373 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal exp_tmp_V_reg_3379 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_101_fu_894_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_101_reg_3384 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_65_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_reg_3389 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_fu_914_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_2_reg_3395 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal man_V_1_fu_918_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_reg_3400 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_67_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_reg_3405 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_948_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_3411 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_70_fu_956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_reg_3417 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_fu_972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_reg_3423 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_2_fu_978_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_3428 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal sh_amt_cast_fu_983_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_amt_cast_reg_3433 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp5_fu_1055_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_reg_3438 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_3443 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_3448 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_fu_1098_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_107_reg_3453 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_cast_mid2_fu_1106_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_cast_mid2_reg_3458 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal tmp_77_fu_1154_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_reg_3463 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_cast_fu_1159_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal OP2_V_cast_reg_3468 : STD_LOGIC_VECTOR (62 downto 0);
    signal exitcond_flatten_fu_1163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_3481_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_3481_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_1169_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_next_reg_3485 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvars_iv_in_mid2_fu_1193_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv_in_mid2_reg_3490 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv_in_mid2_reg_3490_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv_in_mid2_reg_3490_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv_in_mid2_reg_3490_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_mid2_fu_1201_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ii_mid2_reg_3504 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_84_mid2_v_v_v_fu_1209_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_84_mid2_v_v_v_reg_3510 : STD_LOGIC_VECTOR (1 downto 0);
    signal hog_index_2_mid2_fu_1217_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal hog_index_2_mid2_reg_3516 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_112_fu_1267_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_112_reg_3521 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_s_26_fu_1333_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Val2_s_26_reg_3562 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_121_fu_1338_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_121_reg_3567 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_122_reg_3573 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_reg_3573_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_55_1_fu_1354_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Val2_55_1_reg_3579 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_132_fu_1359_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_132_reg_3584 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_133_reg_3590 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_reg_3590_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_fu_1371_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv_reg_3596 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_fu_1396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_3611 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_3611_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_fu_1406_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_V_2_reg_3616 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_145_1_fu_1412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_1_reg_3622 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_1_reg_3622_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_1_fu_1422_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_V_2_1_reg_3627 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_Val2_55_2_fu_1432_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Val2_55_2_reg_3633 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_143_fu_1437_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_143_reg_3638 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_144_reg_3644 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_144_reg_3644_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_55_3_fu_1453_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Val2_55_3_reg_3650 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_154_fu_1458_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_154_reg_3655 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_155_reg_3661 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_155_reg_3661_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ii_1_fu_1470_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ii_1_reg_3667 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_V_2_cast_fu_1485_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_2_cast_reg_3677 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_123_fu_1506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_123_reg_3682 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_124_fu_1510_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_124_reg_3687 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_124_reg_3687_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_2_1_cast_fu_1514_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_2_1_cast_reg_3692 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_134_fu_1535_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_134_reg_3697 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_135_fu_1539_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_135_reg_3702 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_135_reg_3702_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_145_2_fu_1543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_2_reg_3707 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_2_reg_3707_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_2_fu_1553_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_V_2_2_reg_3712 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_145_3_fu_1559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_3_reg_3718 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_3_reg_3718_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_3_fu_1569_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_V_2_3_reg_3723 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_Val2_55_4_fu_1579_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Val2_55_4_reg_3729 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_165_fu_1584_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_165_reg_3734 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_166_reg_3740 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_166_reg_3740_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_55_5_fu_1600_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Val2_55_5_reg_3746 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_176_fu_1605_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_176_reg_3751 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_177_reg_3757 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_177_reg_3757_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_012_0_i_fu_1676_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_012_0_i_reg_3763 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_012_0_i_1_fu_1743_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_012_0_i_1_reg_3768 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_2_2_cast_fu_1751_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_2_2_cast_reg_3773 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_145_fu_1772_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_145_reg_3778 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_146_fu_1776_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_146_reg_3783 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_146_reg_3783_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_2_3_cast_fu_1780_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_2_3_cast_reg_3788 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_156_fu_1801_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_156_reg_3793 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_157_fu_1805_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_157_reg_3798 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_157_reg_3798_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_145_4_fu_1809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_4_reg_3803 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_4_reg_3803_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_4_fu_1819_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_V_2_4_reg_3808 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_145_5_fu_1825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_5_reg_3814 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_5_reg_3814_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_5_fu_1835_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_V_2_5_reg_3819 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_Val2_55_6_fu_1845_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Val2_55_6_reg_3825 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_187_fu_1850_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_187_reg_3830 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_188_reg_3836 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_188_reg_3836_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_55_7_fu_1866_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Val2_55_7_reg_3842 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_198_fu_1871_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_198_reg_3847 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_199_reg_3853 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_199_reg_3853_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_012_0_i_2_fu_1942_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_012_0_i_2_reg_3859 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_012_0_i_3_fu_2009_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_012_0_i_3_reg_3864 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_2_4_cast_fu_2017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_2_4_cast_reg_3869 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_167_fu_2038_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_167_reg_3874 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_168_fu_2042_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_168_reg_3879 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_168_reg_3879_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_2_5_cast_fu_2046_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_2_5_cast_reg_3884 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_178_fu_2067_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_178_reg_3889 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_179_fu_2071_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_179_reg_3894 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_179_reg_3894_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_145_6_fu_2075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_6_reg_3899 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_6_reg_3899_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_6_fu_2085_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_V_2_6_reg_3904 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_145_7_fu_2091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_7_reg_3910 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_7_reg_3910_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_7_fu_2101_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_V_2_7_reg_3915 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_Val2_55_8_fu_2111_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Val2_55_8_reg_3921 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_209_fu_2116_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_209_reg_3926 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_210_reg_3932 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_210_reg_3932_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_012_0_i_4_fu_2187_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_012_0_i_4_reg_3938 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_012_0_i_5_fu_2254_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_012_0_i_5_reg_3943 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_2_6_cast_fu_2262_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_2_6_cast_reg_3948 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_189_fu_2283_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_189_reg_3953 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_190_fu_2287_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_190_reg_3958 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_190_reg_3958_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_2_7_cast_fu_2291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_2_7_cast_reg_3963 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_200_fu_2312_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_200_reg_3968 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_201_fu_2316_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_201_reg_3973 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_201_reg_3973_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_145_8_fu_2320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_8_reg_3978 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_8_reg_3978_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_8_fu_2330_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_V_2_8_reg_3983 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_012_0_i_6_fu_2395_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_012_0_i_6_reg_3989 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_012_0_i_7_fu_2462_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_012_0_i_7_reg_3994 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_2_8_cast_fu_2470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_2_8_cast_reg_3999 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_211_fu_2491_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_211_reg_4004 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_212_fu_2495_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_212_reg_4009 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_212_reg_4009_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_012_0_i_8_fu_2558_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_012_0_i_8_reg_4014 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_8_fu_2566_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_8_reg_4019 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_89_fu_2580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_reg_4024 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_20_1_fu_2586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_20_1_reg_4029 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_152_1_fu_2600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_152_1_reg_4034 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_20_2_fu_2708_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_20_2_reg_4039 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_152_2_fu_2722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_152_2_reg_4044 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_20_3_fu_2728_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_20_3_reg_4049 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_152_3_fu_2742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_152_3_reg_4054 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_20_4_fu_2856_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_20_4_reg_4059 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_152_4_fu_2870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_152_4_reg_4064 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_20_5_fu_2876_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_20_5_reg_4069 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_152_5_fu_2890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_152_5_reg_4074 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_20_6_fu_3004_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_20_6_reg_4079 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_152_6_fu_3018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_152_6_reg_4084 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_20_7_fu_3024_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_20_7_reg_4089 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_152_7_fu_3038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_152_7_reg_4094 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_20_8_fu_3152_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_20_8_reg_4099 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_152_8_fu_3166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_152_8_reg_4104 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state37 : STD_LOGIC;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal indvar_flatten6_reg_373 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal hog_index_reg_384 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_395 : STD_LOGIC_VECTOR (2 downto 0);
    signal hog_index_1_reg_406 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_417 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_432_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_hog_index_2_phi_fu_442_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_jj_phi_fu_452_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_indvars_iv_in_phi_fu_462_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_ii_phi_fu_472_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_42_fu_598_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_fu_609_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_57_fu_626_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_637_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_119_cast_fu_1273_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_120_cast_fu_1284_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_cast_fu_1294_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_122_cast_fu_1304_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_123_cast_fu_1314_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal tmp_124_cast_fu_1324_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_125_cast_fu_1381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal tmp_126_cast_fu_1391_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_127_cast_fu_1480_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_90_fu_2650_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_154_1_fu_2703_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_154_2_fu_2797_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_154_3_fu_2851_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_154_4_fu_2945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_154_5_fu_2999_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_154_6_fu_3093_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_154_7_fu_3147_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_154_8_fu_3221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_03_i_fu_2642_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i_1_fu_2695_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i_2_fu_2789_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i_3_fu_2843_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i_4_fu_2937_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i_5_fu_2991_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i_6_fu_3085_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i_7_fu_3139_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i_8_fu_3213_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_fu_484_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_484_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_fu_488_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_fu_491_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal hog_index_3_dup_fu_526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_s_fu_554_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_2_mid1_fu_568_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_34_fu_590_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_603_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_54_fu_619_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_46_fu_631_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp24_fu_648_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_681_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_fu_691_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal msb_idx_fu_707_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_712_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp32_V_fu_728_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_731_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_fu_743_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_79_fu_747_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_82_fu_753_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_fu_757_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_1_fu_737_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_2_fu_762_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_488_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_4_fu_778_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_794_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_799_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_1_trunc_fu_802_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_808_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1_fu_815_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_826_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_62_fu_836_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_op_fu_840_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_fu_846_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_fu_857_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_fu_494_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_868_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_fu_872_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_30_fu_907_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_64_fu_904_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_924_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_68_fu_936_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_69_fu_942_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_106_fu_962_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_74_fu_991_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal sel_tmp2_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_demorgan_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_1021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp22_demorgan_fu_1044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_1049_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_1038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_1006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_995_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_88_fu_1078_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_97_fu_1088_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_105_fu_1109_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_fu_1112_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_1117_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_84_fu_1127_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_86_fu_1134_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_108_fu_1141_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_109_fu_1147_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal exitcond1_fu_1187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_dup_fu_1181_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal jj_1_fu_1175_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_84_mid2_v_v_fu_1225_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ii_cast_fu_1233_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_78_fu_1236_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_mid2_v_fu_1228_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_110_fu_1241_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_111_fu_1253_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_117_cast_fu_1249_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_cast_fu_1263_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_113_fu_1278_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_114_fu_1289_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_115_fu_1299_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_116_fu_1309_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_117_fu_1319_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_s_26_fu_1333_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_s_26_fu_1333_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_55_1_fu_1354_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_55_1_fu_1354_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_118_fu_1376_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_119_fu_1386_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_147_cast_fu_1401_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_147_1_cast_fu_1417_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_Val2_55_2_fu_1432_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_55_2_fu_1432_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_55_3_fu_1453_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_55_3_fu_1453_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_120_fu_1475_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_7_fu_1488_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_81_fu_1498_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_35_1_fu_1517_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_148_1_fu_1527_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_147_2_cast_fu_1548_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_147_3_cast_fu_1564_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_Val2_55_4_fu_1579_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_55_4_fu_1579_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_55_5_fu_1600_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_55_5_fu_1600_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_2_fu_1617_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_125_fu_1622_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_126_fu_1638_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_fu_1641_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_127_fu_1653_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_128_fu_1657_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_129_fu_1663_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_130_fu_1667_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp2_fu_1632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_3_fu_1647_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_131_fu_1672_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_2_1_fu_1684_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_fu_1689_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_137_fu_1705_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_1_fu_1708_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_138_fu_1720_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_139_fu_1724_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_140_fu_1730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_141_fu_1734_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp3_fu_1699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_13_1_fu_1714_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_142_fu_1739_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_35_2_fu_1754_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_148_2_fu_1764_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_35_3_fu_1783_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_148_3_fu_1793_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_147_4_cast_fu_1814_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_147_5_cast_fu_1830_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_Val2_55_6_fu_1845_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_55_6_fu_1845_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_55_7_fu_1866_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_55_7_fu_1866_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_2_2_fu_1883_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_147_fu_1888_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_148_fu_1904_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_2_fu_1907_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_149_fu_1919_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_150_fu_1923_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_151_fu_1929_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_152_fu_1933_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp4_fu_1898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_13_2_fu_1913_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_153_fu_1938_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_2_3_fu_1950_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_158_fu_1955_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_159_fu_1971_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_3_fu_1974_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_160_fu_1986_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_161_fu_1990_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_162_fu_1996_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_163_fu_2000_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp5_fu_1965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_13_3_fu_1980_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_164_fu_2005_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_35_4_fu_2020_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_148_4_fu_2030_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_35_5_fu_2049_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_148_5_fu_2059_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_147_6_cast_fu_2080_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_147_7_cast_fu_2096_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_Val2_55_8_fu_2111_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_55_8_fu_2111_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_2_4_fu_2128_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_169_fu_2133_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_170_fu_2149_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_4_fu_2152_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_171_fu_2164_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_172_fu_2168_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_173_fu_2174_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_174_fu_2178_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp6_fu_2143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_13_4_fu_2158_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_175_fu_2183_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_2_5_fu_2195_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_180_fu_2200_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_181_fu_2216_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_5_fu_2219_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_182_fu_2231_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_183_fu_2235_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_184_fu_2241_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_185_fu_2245_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp7_fu_2210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_13_5_fu_2225_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_186_fu_2250_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_35_6_fu_2265_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_148_6_fu_2275_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_35_7_fu_2294_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_148_7_fu_2304_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_147_8_cast_fu_2325_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal msb_idx_2_6_fu_2336_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_191_fu_2341_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_192_fu_2357_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_6_fu_2360_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_193_fu_2372_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_194_fu_2376_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_195_fu_2382_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_196_fu_2386_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp8_fu_2351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_13_6_fu_2366_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_197_fu_2391_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_2_7_fu_2403_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_202_fu_2408_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_203_fu_2424_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_7_fu_2427_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_204_fu_2439_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_205_fu_2443_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_206_fu_2449_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_207_fu_2453_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp9_fu_2418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_13_7_fu_2433_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_208_fu_2458_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_35_8_fu_2473_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_148_8_fu_2483_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal msb_idx_2_8_fu_2499_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_213_fu_2504_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_214_fu_2520_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_8_fu_2523_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_215_fu_2535_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_216_fu_2539_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_217_fu_2545_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_218_fu_2549_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp10_fu_2514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_13_8_fu_2529_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_219_fu_2554_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_9_fu_2570_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_491_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_1_fu_2590_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_fu_2611_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_2606_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_7_trunc_fu_2614_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_2620_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_s_27_fu_2627_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_5_fu_2638_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_2664_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_fu_2659_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_7_trunc_1_fu_2667_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_2673_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_37_1_fu_2680_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_5_1_fu_2691_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_91_fu_2654_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_2_fu_2712_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_22_3_fu_2732_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_fu_2758_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_fu_2753_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_7_trunc_2_fu_2761_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_45_fu_2767_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_37_2_fu_2774_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_5_2_fu_2785_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_155_1_fu_2748_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_2812_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_fu_2807_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_7_trunc_3_fu_2815_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_fu_2821_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_37_3_fu_2828_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_5_3_fu_2839_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_155_2_fu_2802_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_4_fu_2860_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_22_5_fu_2880_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_52_fu_2906_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_51_fu_2901_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_7_trunc_4_fu_2909_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_53_fu_2915_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_37_4_fu_2922_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_5_4_fu_2933_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_155_3_fu_2896_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_2960_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_fu_2955_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_7_trunc_5_fu_2963_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_92_fu_2969_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_37_5_fu_2976_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_5_5_fu_2987_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_155_4_fu_2950_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_6_fu_3008_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_22_7_fu_3028_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_95_fu_3054_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_94_fu_3049_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_7_trunc_6_fu_3057_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_96_fu_3063_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_37_6_fu_3070_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_5_6_fu_3081_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_155_5_fu_3044_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_99_fu_3108_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_98_fu_3103_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_7_trunc_7_fu_3111_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_100_fu_3117_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_37_7_fu_3124_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_5_7_fu_3135_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_155_6_fu_3098_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_8_fu_3156_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_103_fu_3182_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_102_fu_3177_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_7_trunc_8_fu_3185_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_104_fu_3191_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_37_8_fu_3198_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_5_8_fu_3209_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_155_7_fu_3172_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component xillybus_wrapper_cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component xillybus_wrapper_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component xillybus_wrapper_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component xillybus_wrapper_fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    xillybus_wrapper_cud_U11 : component xillybus_wrapper_cud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_40400000,
        din1 => reg_497,
        ce => ap_const_logic_1,
        dout => grp_fu_479_p2);

    xillybus_wrapper_dEe_U12 : component xillybus_wrapper_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_484_p0,
        din1 => grp_fu_484_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_484_p2);

    xillybus_wrapper_eOg_U13 : component xillybus_wrapper_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_488_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_488_p1);

    xillybus_wrapper_eOg_U14 : component xillybus_wrapper_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_491_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_491_p1);

    xillybus_wrapper_fYi_U15 : component xillybus_wrapper_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => reg_497,
        dout => d_assign_fu_494_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond_flatten8_fu_514_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state37) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state37)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state37);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    hog_index_1_reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                hog_index_1_reg_406 <= tmp_77_reg_3463;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                hog_index_1_reg_406 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    hog_index_2_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then 
                hog_index_2_reg_439 <= hog_index_2_mid2_reg_3516;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                hog_index_2_reg_439 <= hog_index_1_mid2_reg_3234;
            end if; 
        end if;
    end process;

    hog_index_reg_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                hog_index_reg_384 <= hog_index_mid2_reg_3261;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                hog_index_reg_384 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_reg_395_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                i_reg_395 <= i_cast_mid2_v_reg_3248;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_395 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    ii_reg_468_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then 
                ii_reg_468 <= ii_1_reg_3667;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                ii_reg_468 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                indvar_flatten6_reg_373 <= indvar_flatten_next7_reg_3229;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten6_reg_373 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_428_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then 
                indvar_flatten_reg_428 <= indvar_flatten_next_reg_3485;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                indvar_flatten_reg_428 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvars_iv_in_reg_459_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then 
                indvars_iv_in_reg_459 <= indvars_iv_reg_3596;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                indvars_iv_in_reg_459 <= hog_index_1_mid2_reg_3234;
            end if; 
        end if;
    end process;

    j_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                j_reg_417 <= j_2_reg_3281;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_reg_417 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    jj_reg_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then 
                jj_reg_448 <= tmp_84_mid2_v_v_v_reg_3510;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                jj_reg_448 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    reg_504_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0)))) then 
                reg_504 <= cells_bin_V_q1;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_3481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
                reg_504 <= cells_bin_V_q0;
            end if; 
        end if;
    end process;

    reg_509_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0)))) then 
                reg_509 <= cells_bin_V_q0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_3481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
                reg_509 <= cells_bin_V_q1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                OP2_V_cast_reg_3468 <= OP2_V_cast_fu_1159_p1;
                    i_cast_mid2_reg_3458(2 downto 0) <= i_cast_mid2_fu_1106_p1(2 downto 0);
                tmp_77_reg_3463 <= tmp_77_fu_1154_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_flatten_reg_3481 <= exitcond_flatten_fu_1163_p2;
                exitcond_flatten_reg_3481_pp0_iter1_reg <= exitcond_flatten_reg_3481;
                exitcond_flatten_reg_3481_pp0_iter2_reg <= exitcond_flatten_reg_3481_pp0_iter1_reg;
                exitcond_flatten_reg_3481_pp0_iter3_reg <= exitcond_flatten_reg_3481_pp0_iter2_reg;
                indvars_iv_in_mid2_reg_3490_pp0_iter1_reg <= indvars_iv_in_mid2_reg_3490;
                indvars_iv_in_mid2_reg_3490_pp0_iter2_reg <= indvars_iv_in_mid2_reg_3490_pp0_iter1_reg;
                indvars_iv_in_mid2_reg_3490_pp0_iter3_reg <= indvars_iv_in_mid2_reg_3490_pp0_iter2_reg;
                tmp_124_reg_3687_pp0_iter2_reg <= tmp_124_reg_3687;
                tmp_135_reg_3702_pp0_iter2_reg <= tmp_135_reg_3702;
                tmp_145_2_reg_3707_pp0_iter2_reg <= tmp_145_2_reg_3707;
                tmp_145_3_reg_3718_pp0_iter2_reg <= tmp_145_3_reg_3718;
                tmp_166_reg_3740_pp0_iter2_reg <= tmp_166_reg_3740;
                tmp_177_reg_3757_pp0_iter2_reg <= tmp_177_reg_3757;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                exp_tmp_V_reg_3379 <= ireg_V_fu_868_p1(62 downto 52);
                isneg_reg_3373 <= ireg_V_fu_868_p1(63 downto 63);
                tmp_101_reg_3384 <= tmp_101_fu_894_p1;
                tmp_65_reg_3389 <= tmp_65_fu_898_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_flatten8_fu_514_p2 = ap_const_lv1_0))) then
                hog_index_1_mid2_reg_3234 <= hog_index_1_mid2_fu_538_p3;
                hog_index_mid2_reg_3261 <= hog_index_mid2_fu_582_p3;
                i_cast_mid2_v_reg_3248 <= i_cast_mid2_v_fu_560_p3;
                j_mid2_reg_3241 <= j_mid2_fu_546_p3;
                p_v1_reg_3256 <= p_v1_fu_574_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_1163_p2 = ap_const_lv1_0))) then
                hog_index_2_mid2_reg_3516 <= hog_index_2_mid2_fu_1217_p3;
                tmp_84_mid2_v_v_v_reg_3510 <= tmp_84_mid2_v_v_v_fu_1209_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                icmp1_reg_3423 <= icmp1_fu_972_p2;
                    p_Result_2_reg_3395(51 downto 0) <= p_Result_2_fu_914_p1(51 downto 0);
                sh_amt_reg_3411 <= sh_amt_fu_948_p3;
                tmp_67_reg_3405 <= tmp_67_fu_930_p2;
                tmp_70_reg_3417 <= tmp_70_fu_956_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then
                ii_1_reg_3667 <= ii_1_fu_1470_p2;
                indvars_iv_reg_3596 <= indvars_iv_fu_1371_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_1163_p2 = ap_const_lv1_0))) then
                ii_mid2_reg_3504 <= ii_mid2_fu_1201_p3;
                indvars_iv_in_mid2_reg_3490 <= indvars_iv_in_mid2_fu_1193_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                indvar_flatten_next7_reg_3229 <= indvar_flatten_next7_fu_520_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                indvar_flatten_next_reg_3485 <= indvar_flatten_next_fu_1169_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                is_neg_reg_3309 <= p_Val2_1_fu_653_p2(63 downto 63);
                p_Val2_1_reg_3302 <= p_Val2_1_fu_653_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                j_2_reg_3281 <= j_2_fu_614_p2;
                p_Val2_10_reg_3276 <= cells_mag_sq_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((isneg_reg_3373 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                man_V_1_reg_3400 <= man_V_1_fu_918_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                man_V_2_reg_3428 <= man_V_2_fu_978_p3;
                or_cond2_reg_3448 <= or_cond2_fu_1072_p2;
                or_cond_reg_3443 <= or_cond_fu_1060_p2;
                sel_tmp5_reg_3438 <= sel_tmp5_fu_1055_p2;
                sh_amt_cast_reg_3433 <= sh_amt_cast_fu_983_p1;
                tmp_107_reg_3453 <= tmp_107_fu_1098_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                num_zeros_reg_3332 <= num_zeros_fu_699_p1;
                p_Val2_15_reg_3326 <= p_Val2_15_fu_676_p3;
                tmp_61_reg_3337 <= tmp_61_fu_703_p1;
                tmp_s_reg_3320 <= tmp_s_fu_671_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_145_1_reg_3622 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0))) then
                p_012_0_i_1_reg_3768 <= p_012_0_i_1_fu_1743_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_145_2_reg_3707 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                p_012_0_i_2_reg_3859 <= p_012_0_i_2_fu_1942_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_145_3_reg_3718 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                p_012_0_i_3_reg_3864 <= p_012_0_i_3_fu_2009_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_145_4_reg_3803 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0))) then
                p_012_0_i_4_reg_3938 <= p_012_0_i_4_fu_2187_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_145_5_reg_3814 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0))) then
                p_012_0_i_5_reg_3943 <= p_012_0_i_5_fu_2254_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (tmp_145_6_reg_3899 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0))) then
                p_012_0_i_6_reg_3989 <= p_012_0_i_6_fu_2395_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (tmp_145_7_reg_3910 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0))) then
                p_012_0_i_7_reg_3994 <= p_012_0_i_7_fu_2462_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_145_8_reg_3978 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0))) then
                p_012_0_i_8_reg_4014 <= p_012_0_i_8_fu_2558_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_80_reg_3611 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0))) then
                p_012_0_i_reg_3763 <= p_012_0_i_fu_1676_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then
                p_Val2_55_1_reg_3579 <= p_Val2_55_1_fu_1354_p2;
                p_Val2_s_26_reg_3562 <= p_Val2_s_26_fu_1333_p2;
                tmp_121_reg_3567 <= tmp_121_fu_1338_p1;
                tmp_122_reg_3573 <= p_Val2_s_26_fu_1333_p2(62 downto 62);
                tmp_132_reg_3584 <= tmp_132_fu_1359_p1;
                tmp_133_reg_3590 <= p_Val2_55_1_fu_1354_p2(62 downto 62);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then
                p_Val2_55_2_reg_3633 <= p_Val2_55_2_fu_1432_p2;
                p_Val2_55_3_reg_3650 <= p_Val2_55_3_fu_1453_p2;
                tmp_143_reg_3638 <= tmp_143_fu_1437_p1;
                tmp_144_reg_3644 <= p_Val2_55_2_fu_1432_p2(62 downto 62);
                tmp_145_1_reg_3622 <= tmp_145_1_fu_1412_p2;
                tmp_154_reg_3655 <= tmp_154_fu_1458_p1;
                tmp_155_reg_3661 <= p_Val2_55_3_fu_1453_p2(62 downto 62);
                tmp_80_reg_3611 <= tmp_80_fu_1396_p2;
                tmp_V_2_1_reg_3627 <= tmp_V_2_1_fu_1422_p3;
                tmp_V_2_reg_3616 <= tmp_V_2_fu_1406_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then
                p_Val2_55_4_reg_3729 <= p_Val2_55_4_fu_1579_p2;
                p_Val2_55_5_reg_3746 <= p_Val2_55_5_fu_1600_p2;
                tmp_145_2_reg_3707 <= tmp_145_2_fu_1543_p2;
                tmp_145_3_reg_3718 <= tmp_145_3_fu_1559_p2;
                tmp_165_reg_3734 <= tmp_165_fu_1584_p1;
                tmp_166_reg_3740 <= p_Val2_55_4_fu_1579_p2(62 downto 62);
                tmp_176_reg_3751 <= tmp_176_fu_1605_p1;
                tmp_177_reg_3757 <= p_Val2_55_5_fu_1600_p2(62 downto 62);
                tmp_V_2_2_reg_3712 <= tmp_V_2_2_fu_1553_p3;
                tmp_V_2_3_reg_3723 <= tmp_V_2_3_fu_1569_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0))) then
                p_Val2_55_6_reg_3825 <= p_Val2_55_6_fu_1845_p2;
                p_Val2_55_7_reg_3842 <= p_Val2_55_7_fu_1866_p2;
                tmp_145_4_reg_3803 <= tmp_145_4_fu_1809_p2;
                tmp_145_5_reg_3814 <= tmp_145_5_fu_1825_p2;
                tmp_187_reg_3830 <= tmp_187_fu_1850_p1;
                tmp_188_reg_3836 <= p_Val2_55_6_fu_1845_p2(62 downto 62);
                tmp_198_reg_3847 <= tmp_198_fu_1871_p1;
                tmp_199_reg_3853 <= p_Val2_55_7_fu_1866_p2(62 downto 62);
                tmp_V_2_4_reg_3808 <= tmp_V_2_4_fu_1819_p3;
                tmp_V_2_5_reg_3819 <= tmp_V_2_5_fu_1835_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                p_Val2_55_8_reg_3921 <= p_Val2_55_8_fu_2111_p2;
                tmp_145_6_reg_3899 <= tmp_145_6_fu_2075_p2;
                tmp_145_7_reg_3910 <= tmp_145_7_fu_2091_p2;
                tmp_209_reg_3926 <= tmp_209_fu_2116_p1;
                tmp_210_reg_3932 <= p_Val2_55_8_fu_2111_p2(62 downto 62);
                tmp_V_2_6_reg_3904 <= tmp_V_2_6_fu_2085_p3;
                tmp_V_2_7_reg_3915 <= tmp_V_2_7_fu_2101_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state19))) then
                reg_497 <= grp_fu_484_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp25_reg_3297 <= tmp25_fu_642_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                tmp32_V_10_reg_3347 <= tmp32_V_10_fu_774_p1;
                tmp_59_reg_3352 <= tmp_59_fu_788_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_145_1_reg_3622_pp0_iter1_reg = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                tmp32_V_20_1_reg_4029 <= tmp32_V_20_1_fu_2586_p1;
                tmp_152_1_reg_4034 <= tmp_152_1_fu_2600_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_145_2_reg_3707_pp0_iter2_reg = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp32_V_20_2_reg_4039 <= tmp32_V_20_2_fu_2708_p1;
                tmp_152_2_reg_4044 <= tmp_152_2_fu_2722_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_145_3_reg_3718_pp0_iter2_reg = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp32_V_20_3_reg_4049 <= tmp32_V_20_3_fu_2728_p1;
                tmp_152_3_reg_4054 <= tmp_152_3_fu_2742_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (tmp_145_4_reg_3803_pp0_iter2_reg = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp32_V_20_4_reg_4059 <= tmp32_V_20_4_fu_2856_p1;
                tmp_152_4_reg_4064 <= tmp_152_4_fu_2870_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (tmp_145_5_reg_3814_pp0_iter2_reg = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp32_V_20_5_reg_4069 <= tmp32_V_20_5_fu_2876_p1;
                tmp_152_5_reg_4074 <= tmp_152_5_fu_2890_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_145_6_reg_3899_pp0_iter2_reg = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp32_V_20_6_reg_4079 <= tmp32_V_20_6_fu_3004_p1;
                tmp_152_6_reg_4084 <= tmp_152_6_fu_3018_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_145_7_reg_3910_pp0_iter2_reg = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp32_V_20_7_reg_4089 <= tmp32_V_20_7_fu_3024_p1;
                tmp_152_7_reg_4094 <= tmp_152_7_fu_3038_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_145_8_reg_3978_pp0_iter2_reg = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter3_reg = ap_const_lv1_0))) then
                tmp32_V_20_8_reg_4099 <= tmp32_V_20_8_fu_3152_p1;
                tmp_152_8_reg_4104 <= tmp_152_8_fu_3166_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                tmp32_V_4_reg_3342 <= tmp32_V_4_fu_766_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_80_reg_3611_pp0_iter1_reg = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                tmp32_V_8_reg_4019 <= tmp32_V_8_fu_2566_p1;
                tmp_89_reg_4024 <= tmp_89_fu_2580_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then
                tmp_112_reg_3521 <= tmp_112_fu_1267_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                tmp_122_reg_3573_pp0_iter1_reg <= tmp_122_reg_3573;
                tmp_133_reg_3590_pp0_iter1_reg <= tmp_133_reg_3590;
                tmp_145_8_reg_3978_pp0_iter2_reg <= tmp_145_8_reg_3978;
                tmp_190_reg_3958_pp0_iter2_reg <= tmp_190_reg_3958;
                tmp_201_reg_3973_pp0_iter2_reg <= tmp_201_reg_3973;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_80_reg_3611 = ap_const_lv1_0) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then
                tmp_123_reg_3682 <= tmp_123_fu_1506_p1;
                tmp_124_reg_3687 <= tmp_124_fu_1510_p1;
                    tmp_V_2_cast_reg_3677(61 downto 0) <= tmp_V_2_cast_fu_1485_p1(61 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_145_1_reg_3622 = ap_const_lv1_0) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then
                tmp_134_reg_3697 <= tmp_134_fu_1535_p1;
                tmp_135_reg_3702 <= tmp_135_fu_1539_p1;
                    tmp_V_2_1_cast_reg_3692(61 downto 0) <= tmp_V_2_1_cast_fu_1514_p1(61 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                tmp_144_reg_3644_pp0_iter1_reg <= tmp_144_reg_3644;
                tmp_145_1_reg_3622_pp0_iter1_reg <= tmp_145_1_reg_3622;
                tmp_155_reg_3661_pp0_iter1_reg <= tmp_155_reg_3661;
                tmp_212_reg_4009_pp0_iter2_reg <= tmp_212_reg_4009;
                tmp_80_reg_3611_pp0_iter1_reg <= tmp_80_reg_3611;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_145_4_reg_3803_pp0_iter2_reg <= tmp_145_4_reg_3803;
                tmp_145_5_reg_3814_pp0_iter2_reg <= tmp_145_5_reg_3814;
                tmp_146_reg_3783_pp0_iter2_reg <= tmp_146_reg_3783;
                tmp_157_reg_3798_pp0_iter2_reg <= tmp_157_reg_3798;
                tmp_188_reg_3836_pp0_iter2_reg <= tmp_188_reg_3836;
                tmp_199_reg_3853_pp0_iter2_reg <= tmp_199_reg_3853;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                tmp_145_6_reg_3899_pp0_iter2_reg <= tmp_145_6_reg_3899;
                tmp_145_7_reg_3910_pp0_iter2_reg <= tmp_145_7_reg_3910;
                tmp_168_reg_3879_pp0_iter2_reg <= tmp_168_reg_3879;
                tmp_179_reg_3894_pp0_iter2_reg <= tmp_179_reg_3894;
                tmp_210_reg_3932_pp0_iter2_reg <= tmp_210_reg_3932;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_145_8_reg_3978 <= tmp_145_8_fu_2320_p2;
                tmp_V_2_8_reg_3983 <= tmp_V_2_8_fu_2330_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_145_2_reg_3707 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_145_reg_3778 <= tmp_145_fu_1772_p1;
                tmp_146_reg_3783 <= tmp_146_fu_1776_p1;
                    tmp_V_2_2_cast_reg_3773(61 downto 0) <= tmp_V_2_2_cast_fu_1751_p1(61 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_145_3_reg_3718 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_156_reg_3793 <= tmp_156_fu_1801_p1;
                tmp_157_reg_3798 <= tmp_157_fu_1805_p1;
                    tmp_V_2_3_cast_reg_3788(61 downto 0) <= tmp_V_2_3_cast_fu_1780_p1(61 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_145_4_reg_3803 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                tmp_167_reg_3874 <= tmp_167_fu_2038_p1;
                tmp_168_reg_3879 <= tmp_168_fu_2042_p1;
                    tmp_V_2_4_cast_reg_3869(61 downto 0) <= tmp_V_2_4_cast_fu_2017_p1(61 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_145_5_reg_3814 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                tmp_178_reg_3889 <= tmp_178_fu_2067_p1;
                tmp_179_reg_3894 <= tmp_179_fu_2071_p1;
                    tmp_V_2_5_cast_reg_3884(61 downto 0) <= tmp_V_2_5_cast_fu_2046_p1(61 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_145_6_reg_3899 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_189_reg_3953 <= tmp_189_fu_2283_p1;
                tmp_190_reg_3958 <= tmp_190_fu_2287_p1;
                    tmp_V_2_6_cast_reg_3948(61 downto 0) <= tmp_V_2_6_cast_fu_2262_p1(61 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_145_7_reg_3910 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_200_reg_3968 <= tmp_200_fu_2312_p1;
                tmp_201_reg_3973 <= tmp_201_fu_2316_p1;
                    tmp_V_2_7_cast_reg_3963(61 downto 0) <= tmp_V_2_7_cast_fu_2291_p1(61 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (tmp_145_8_reg_3978 = ap_const_lv1_0) and (exitcond_flatten_reg_3481_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_211_reg_4004 <= tmp_211_fu_2491_p1;
                tmp_212_reg_4009 <= tmp_212_fu_2495_p1;
                    tmp_V_2_8_cast_reg_3999(61 downto 0) <= tmp_V_2_8_cast_fu_2470_p1(61 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((is_neg_reg_3309 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                tmp_31_reg_3315 <= tmp_31_fu_666_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                tmp_63_reg_3368 <= grp_fu_479_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                x_reg_3363 <= x_fu_861_p3;
                yn_reg_3357 <= yn_fu_850_p3;
            end if;
        end if;
    end process;
    p_Result_2_reg_3395(53 downto 52) <= "01";
    i_cast_mid2_reg_3458(3) <= '0';
    tmp_V_2_cast_reg_3677(63 downto 62) <= "00";
    tmp_V_2_1_cast_reg_3692(63 downto 62) <= "00";
    tmp_V_2_2_cast_reg_3773(63 downto 62) <= "00";
    tmp_V_2_3_cast_reg_3788(63 downto 62) <= "00";
    tmp_V_2_4_cast_reg_3869(63 downto 62) <= "00";
    tmp_V_2_5_cast_reg_3884(63 downto 62) <= "00";
    tmp_V_2_6_cast_reg_3948(63 downto 62) <= "00";
    tmp_V_2_7_cast_reg_3963(63 downto 62) <= "00";
    tmp_V_2_8_cast_reg_3999(63 downto 62) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state2, exitcond_flatten8_fu_514_p2, exitcond_flatten_fu_1163_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage2_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond_flatten8_fu_514_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_1163_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_1163_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_924_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_64_fu_904_p1));
        OP2_V_cast_fu_1159_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_109_fu_1147_p3),63));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(36);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(37);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(38);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(39);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(40);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state55 <= ap_CS_fsm(41);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state37_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state37_assign_proc : process(exitcond_flatten_fu_1163_p2)
    begin
        if ((exitcond_flatten_fu_1163_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state37 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state37 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, exitcond_flatten8_fu_514_p2)
    begin
        if (((exitcond_flatten8_fu_514_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_hog_index_2_phi_fu_442_p4_assign_proc : process(hog_index_2_reg_439, exitcond_flatten_reg_3481, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, hog_index_2_mid2_reg_3516, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then 
            ap_phi_mux_hog_index_2_phi_fu_442_p4 <= hog_index_2_mid2_reg_3516;
        else 
            ap_phi_mux_hog_index_2_phi_fu_442_p4 <= hog_index_2_reg_439;
        end if; 
    end process;


    ap_phi_mux_ii_phi_fu_472_p4_assign_proc : process(ii_reg_468, exitcond_flatten_reg_3481, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ii_1_reg_3667, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then 
            ap_phi_mux_ii_phi_fu_472_p4 <= ii_1_reg_3667;
        else 
            ap_phi_mux_ii_phi_fu_472_p4 <= ii_reg_468;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_432_p4_assign_proc : process(indvar_flatten_reg_428, exitcond_flatten_reg_3481, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, indvar_flatten_next_reg_3485, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_432_p4 <= indvar_flatten_next_reg_3485;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_432_p4 <= indvar_flatten_reg_428;
        end if; 
    end process;


    ap_phi_mux_indvars_iv_in_phi_fu_462_p4_assign_proc : process(indvars_iv_in_reg_459, exitcond_flatten_reg_3481, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, indvars_iv_reg_3596, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then 
            ap_phi_mux_indvars_iv_in_phi_fu_462_p4 <= indvars_iv_reg_3596;
        else 
            ap_phi_mux_indvars_iv_in_phi_fu_462_p4 <= indvars_iv_in_reg_459;
        end if; 
    end process;


    ap_phi_mux_jj_phi_fu_452_p4_assign_proc : process(jj_reg_448, exitcond_flatten_reg_3481, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_84_mid2_v_v_v_reg_3510, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_3481 = ap_const_lv1_0))) then 
            ap_phi_mux_jj_phi_fu_452_p4 <= tmp_84_mid2_v_v_v_reg_3510;
        else 
            ap_phi_mux_jj_phi_fu_452_p4 <= jj_reg_448;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond_flatten8_fu_514_p2)
    begin
        if (((exitcond_flatten8_fu_514_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    cells_bin_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_119_cast_fu_1273_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_122_cast_fu_1304_p1, ap_block_pp0_stage3, tmp_124_cast_fu_1324_p1, ap_block_pp0_stage4, tmp_126_cast_fu_1391_p1, tmp_127_cast_fu_1480_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cells_bin_V_address0 <= tmp_127_cast_fu_1480_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            cells_bin_V_address0 <= tmp_126_cast_fu_1391_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            cells_bin_V_address0 <= tmp_124_cast_fu_1324_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            cells_bin_V_address0 <= tmp_122_cast_fu_1304_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            cells_bin_V_address0 <= tmp_119_cast_fu_1273_p1(10 - 1 downto 0);
        else 
            cells_bin_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    cells_bin_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_120_cast_fu_1284_p1, tmp_121_cast_fu_1294_p1, ap_block_pp0_stage2, tmp_123_cast_fu_1314_p1, ap_block_pp0_stage3, tmp_125_cast_fu_1381_p1, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                cells_bin_V_address1 <= tmp_125_cast_fu_1381_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                cells_bin_V_address1 <= tmp_123_cast_fu_1314_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                cells_bin_V_address1 <= tmp_121_cast_fu_1294_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                cells_bin_V_address1 <= tmp_120_cast_fu_1284_p1(10 - 1 downto 0);
            else 
                cells_bin_V_address1 <= "XXXXXXXXXX";
            end if;
        else 
            cells_bin_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    cells_bin_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            cells_bin_V_ce0 <= ap_const_logic_1;
        else 
            cells_bin_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cells_bin_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            cells_bin_V_ce1 <= ap_const_logic_1;
        else 
            cells_bin_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cells_mag_sq_V_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, tmp_42_fu_598_p1, tmp_38_fu_609_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            cells_mag_sq_V_address0 <= tmp_38_fu_609_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cells_mag_sq_V_address0 <= tmp_42_fu_598_p1(6 - 1 downto 0);
        else 
            cells_mag_sq_V_address0 <= "XXXXXX";
        end if; 
    end process;


    cells_mag_sq_V_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, tmp_57_fu_626_p1, tmp_50_fu_637_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            cells_mag_sq_V_address1 <= tmp_50_fu_637_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            cells_mag_sq_V_address1 <= tmp_57_fu_626_p1(6 - 1 downto 0);
        else 
            cells_mag_sq_V_address1 <= "XXXXXX";
        end if; 
    end process;


    cells_mag_sq_V_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            cells_mag_sq_V_ce0 <= ap_const_logic_1;
        else 
            cells_mag_sq_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cells_mag_sq_V_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            cells_mag_sq_V_ce1 <= ap_const_logic_1;
        else 
            cells_mag_sq_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_1187_p2 <= "1" when (ap_phi_mux_ii_phi_fu_472_p4 = ap_const_lv2_2) else "0";
    exitcond_flatten8_fu_514_p2 <= "1" when (indvar_flatten6_reg_373 = ap_const_lv6_31) else "0";
    exitcond_flatten_fu_1163_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_432_p4 = ap_const_lv3_4) else "0";
    exitcond_fu_532_p2 <= "1" when (j_reg_417 = ap_const_lv3_7) else "0";
    f_5_1_fu_2691_p1 <= p_Result_37_1_fu_2680_p5;
    f_5_2_fu_2785_p1 <= p_Result_37_2_fu_2774_p5;
    f_5_3_fu_2839_p1 <= p_Result_37_3_fu_2828_p5;
    f_5_4_fu_2933_p1 <= p_Result_37_4_fu_2922_p5;
    f_5_5_fu_2987_p1 <= p_Result_37_5_fu_2976_p5;
    f_5_6_fu_3081_p1 <= p_Result_37_6_fu_3070_p5;
    f_5_7_fu_3135_p1 <= p_Result_37_7_fu_3124_p5;
    f_5_8_fu_3209_p1 <= p_Result_37_8_fu_3198_p5;
    f_5_fu_2638_p1 <= p_Result_s_27_fu_2627_p5;
    f_fu_857_p1 <= p_Result_1_fu_815_p5;

    grp_fu_484_p0_assign_proc : process(reg_497, yn_reg_3357, ap_CS_fsm_state16, ap_CS_fsm_state20, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_484_p0 <= reg_497;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_fu_484_p0 <= yn_reg_3357;
        else 
            grp_fu_484_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_484_p1_assign_proc : process(yn_reg_3357, x_reg_3363, tmp_63_reg_3368, ap_CS_fsm_state16, ap_CS_fsm_state20, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_484_p1 <= tmp_63_reg_3368;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_484_p1 <= x_reg_3363;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_484_p1 <= yn_reg_3357;
        else 
            grp_fu_484_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_488_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, tmp32_V_4_reg_3342, p_012_0_i_reg_3763, p_012_0_i_2_reg_3859, p_012_0_i_4_reg_3938, p_012_0_i_6_reg_3989, p_012_0_i_8_reg_4014, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_CS_fsm_state9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_488_p0 <= p_012_0_i_8_reg_4014;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_488_p0 <= p_012_0_i_6_reg_3989;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_488_p0 <= p_012_0_i_4_reg_3938;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_488_p0 <= p_012_0_i_2_reg_3859;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_488_p0 <= p_012_0_i_reg_3763;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_488_p0 <= tmp32_V_4_reg_3342;
        else 
            grp_fu_488_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_491_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, p_012_0_i_1_reg_3768, p_012_0_i_3_reg_3864, p_012_0_i_5_reg_3943, p_012_0_i_7_reg_3994, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_491_p0 <= p_012_0_i_7_reg_3994;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_491_p0 <= p_012_0_i_5_reg_3943;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_491_p0 <= p_012_0_i_3_reg_3864;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_491_p0 <= p_012_0_i_1_reg_3768;
        else 
            grp_fu_491_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    hog_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, tmp_154_1_fu_2703_p1, tmp_154_3_fu_2851_p1, tmp_154_4_fu_2945_p1, tmp_154_6_fu_3093_p1, tmp_154_8_fu_3221_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            hog_address0 <= tmp_154_8_fu_3221_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            hog_address0 <= tmp_154_6_fu_3093_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            hog_address0 <= tmp_154_4_fu_2945_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            hog_address0 <= tmp_154_3_fu_2851_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            hog_address0 <= tmp_154_1_fu_2703_p1(11 - 1 downto 0);
        else 
            hog_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    hog_address1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage4, tmp_90_fu_2650_p1, tmp_154_2_fu_2797_p1, tmp_154_5_fu_2999_p1, tmp_154_7_fu_3147_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            hog_address1 <= tmp_154_7_fu_3147_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            hog_address1 <= tmp_154_5_fu_2999_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            hog_address1 <= tmp_154_2_fu_2797_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            hog_address1 <= tmp_90_fu_2650_p1(11 - 1 downto 0);
        else 
            hog_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    hog_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            hog_ce0 <= ap_const_logic_1;
        else 
            hog_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hog_ce1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            hog_ce1 <= ap_const_logic_1;
        else 
            hog_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    hog_d0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, p_03_i_1_fu_2695_p3, p_03_i_3_fu_2843_p3, p_03_i_4_fu_2937_p3, p_03_i_6_fu_3085_p3, p_03_i_8_fu_3213_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            hog_d0 <= p_03_i_8_fu_3213_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            hog_d0 <= p_03_i_6_fu_3085_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            hog_d0 <= p_03_i_4_fu_2937_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            hog_d0 <= p_03_i_3_fu_2843_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            hog_d0 <= p_03_i_1_fu_2695_p3;
        else 
            hog_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    hog_d1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage4, p_03_i_fu_2642_p3, p_03_i_2_fu_2789_p3, p_03_i_5_fu_2991_p3, p_03_i_7_fu_3139_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            hog_d1 <= p_03_i_7_fu_3139_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            hog_d1 <= p_03_i_5_fu_2991_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            hog_d1 <= p_03_i_2_fu_2789_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            hog_d1 <= p_03_i_fu_2642_p3;
        else 
            hog_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    hog_index_1_mid2_fu_538_p3 <= 
        hog_index_3_dup_fu_526_p2 when (exitcond_fu_532_p2(0) = '1') else 
        hog_index_1_reg_406;
    hog_index_2_mid2_fu_1217_p3 <= 
        tmp_82_dup_fu_1181_p2 when (exitcond1_fu_1187_p2(0) = '1') else 
        ap_phi_mux_hog_index_2_phi_fu_442_p4;
    hog_index_3_dup_fu_526_p2 <= std_logic_vector(unsigned(ap_const_lv32_FC) + unsigned(hog_index_reg_384));
    hog_index_mid2_fu_582_p3 <= 
        hog_index_3_dup_fu_526_p2 when (exitcond_fu_532_p2(0) = '1') else 
        hog_index_reg_384;

    hog_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, exitcond_flatten_reg_3481_pp0_iter2_reg, exitcond_flatten_reg_3481_pp0_iter3_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_3481_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_3481_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (exitcond_flatten_reg_3481_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond_flatten_reg_3481_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_3481_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            hog_we0 <= ap_const_logic_1;
        else 
            hog_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hog_we1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, exitcond_flatten_reg_3481_pp0_iter2_reg, exitcond_flatten_reg_3481_pp0_iter3_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_3481_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_3481_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (exitcond_flatten_reg_3481_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond_flatten_reg_3481_pp0_iter2_reg = ap_const_lv1_0)))) then 
            hog_we1 <= ap_const_logic_1;
        else 
            hog_we1 <= ap_const_logic_0;
        end if; 
    end process;

    i_2_mid1_fu_568_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(i_reg_395));
    i_cast_mid2_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_cast_mid2_v_reg_3248),4));
    i_cast_mid2_v_fu_560_p3 <= 
        i_s_fu_554_p2 when (exitcond_fu_532_p2(0) = '1') else 
        i_reg_395;
    i_s_fu_554_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i_reg_395));
    icmp10_fu_2514_p2 <= "1" when (tmp_213_fu_2504_p4 = ap_const_lv27_0) else "0";
    icmp1_fu_972_p2 <= "1" when (tmp_106_fu_962_p4 = ap_const_lv7_0) else "0";
    icmp2_fu_1632_p2 <= "1" when (tmp_125_fu_1622_p4 = ap_const_lv27_0) else "0";
    icmp3_fu_1699_p2 <= "1" when (tmp_136_fu_1689_p4 = ap_const_lv27_0) else "0";
    icmp4_fu_1898_p2 <= "1" when (tmp_147_fu_1888_p4 = ap_const_lv27_0) else "0";
    icmp5_fu_1965_p2 <= "1" when (tmp_158_fu_1955_p4 = ap_const_lv27_0) else "0";
    icmp6_fu_2143_p2 <= "1" when (tmp_169_fu_2133_p4 = ap_const_lv27_0) else "0";
    icmp7_fu_2210_p2 <= "1" when (tmp_180_fu_2200_p4 = ap_const_lv27_0) else "0";
    icmp8_fu_2351_p2 <= "1" when (tmp_191_fu_2341_p4 = ap_const_lv27_0) else "0";
    icmp9_fu_2418_p2 <= "1" when (tmp_202_fu_2408_p4 = ap_const_lv27_0) else "0";
    icmp_fu_722_p2 <= "1" when (tmp_66_fu_712_p4 = ap_const_lv27_0) else "0";
    ii_1_fu_1470_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(ii_mid2_reg_3504));
    ii_cast_fu_1233_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ii_mid2_reg_3504),4));
    ii_mid2_fu_1201_p3 <= 
        ap_const_lv2_0 when (exitcond1_fu_1187_p2(0) = '1') else 
        ap_phi_mux_ii_phi_fu_472_p4;
    indvar_flatten_next7_fu_520_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_373) + unsigned(ap_const_lv6_1));
    indvar_flatten_next_fu_1169_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_432_p4) + unsigned(ap_const_lv3_1));
    indvars_iv_fu_1371_p2 <= std_logic_vector(unsigned(ap_const_lv32_9) + unsigned(indvars_iv_in_mid2_reg_3490));
    indvars_iv_in_mid2_fu_1193_p3 <= 
        tmp_82_dup_fu_1181_p2 when (exitcond1_fu_1187_p2(0) = '1') else 
        ap_phi_mux_indvars_iv_in_phi_fu_462_p4;
    ireg_V_fu_868_p1 <= d_assign_fu_494_p1;
    j_2_fu_614_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j_mid2_reg_3241));
    j_mid2_fu_546_p3 <= 
        ap_const_lv3_0 when (exitcond_fu_532_p2(0) = '1') else 
        j_reg_417;
    jj_1_fu_1175_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(ap_phi_mux_jj_phi_fu_452_p4));
    man_V_1_fu_918_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_2_fu_914_p1));
    man_V_2_fu_978_p3 <= 
        man_V_1_reg_3400 when (isneg_reg_3373(0) = '1') else 
        p_Result_2_reg_3395;
    msb_idx_2_1_fu_1684_p2 <= (tmp_134_reg_3697 xor ap_const_lv32_3F);
    msb_idx_2_2_fu_1883_p2 <= (tmp_145_reg_3778 xor ap_const_lv32_3F);
    msb_idx_2_3_fu_1950_p2 <= (tmp_156_reg_3793 xor ap_const_lv32_3F);
    msb_idx_2_4_fu_2128_p2 <= (tmp_167_reg_3874 xor ap_const_lv32_3F);
    msb_idx_2_5_fu_2195_p2 <= (tmp_178_reg_3889 xor ap_const_lv32_3F);
    msb_idx_2_6_fu_2336_p2 <= (tmp_189_reg_3953 xor ap_const_lv32_3F);
    msb_idx_2_7_fu_2403_p2 <= (tmp_200_reg_3968 xor ap_const_lv32_3F);
    msb_idx_2_8_fu_2499_p2 <= (tmp_211_reg_4004 xor ap_const_lv32_3F);
    msb_idx_2_fu_1617_p2 <= (tmp_123_reg_3682 xor ap_const_lv32_3F);
    msb_idx_fu_707_p2 <= (num_zeros_reg_3332 xor ap_const_lv32_3F);
    num_zeros_fu_699_p1 <= tmp_32_fu_691_p3(32 - 1 downto 0);
    or_cond1_fu_1066_p2 <= (sel_tmp9_fu_1026_p2 or sel_tmp3_fu_1006_p2);
    or_cond2_fu_1072_p2 <= (or_cond_fu_1060_p2 or or_cond1_fu_1066_p2);
    or_cond_fu_1060_p2 <= (sel_tmp5_fu_1055_p2 or sel_tmp1_fu_1038_p2);
    p_012_0_i_1_fu_1743_p3 <= 
        tmp32_V_13_1_fu_1714_p2 when (icmp3_fu_1699_p2(0) = '1') else 
        tmp_142_fu_1739_p1;
    p_012_0_i_2_fu_1942_p3 <= 
        tmp32_V_13_2_fu_1913_p2 when (icmp4_fu_1898_p2(0) = '1') else 
        tmp_153_fu_1938_p1;
    p_012_0_i_3_fu_2009_p3 <= 
        tmp32_V_13_3_fu_1980_p2 when (icmp5_fu_1965_p2(0) = '1') else 
        tmp_164_fu_2005_p1;
    p_012_0_i_4_fu_2187_p3 <= 
        tmp32_V_13_4_fu_2158_p2 when (icmp6_fu_2143_p2(0) = '1') else 
        tmp_175_fu_2183_p1;
    p_012_0_i_5_fu_2254_p3 <= 
        tmp32_V_13_5_fu_2225_p2 when (icmp7_fu_2210_p2(0) = '1') else 
        tmp_186_fu_2250_p1;
    p_012_0_i_6_fu_2395_p3 <= 
        tmp32_V_13_6_fu_2366_p2 when (icmp8_fu_2351_p2(0) = '1') else 
        tmp_197_fu_2391_p1;
    p_012_0_i_7_fu_2462_p3 <= 
        tmp32_V_13_7_fu_2433_p2 when (icmp9_fu_2418_p2(0) = '1') else 
        tmp_208_fu_2458_p1;
    p_012_0_i_8_fu_2558_p3 <= 
        tmp32_V_13_8_fu_2529_p2 when (icmp10_fu_2514_p2(0) = '1') else 
        tmp_219_fu_2554_p1;
    p_012_0_i_fu_1676_p3 <= 
        tmp32_V_3_fu_1647_p2 when (icmp2_fu_1632_p2(0) = '1') else 
        tmp_131_fu_1672_p1;
    p_03_i_1_fu_2695_p3 <= 
        ap_const_lv32_0 when (tmp_145_1_reg_3622_pp0_iter1_reg(0) = '1') else 
        f_5_1_fu_2691_p1;
    p_03_i_2_fu_2789_p3 <= 
        ap_const_lv32_0 when (tmp_145_2_reg_3707_pp0_iter2_reg(0) = '1') else 
        f_5_2_fu_2785_p1;
    p_03_i_3_fu_2843_p3 <= 
        ap_const_lv32_0 when (tmp_145_3_reg_3718_pp0_iter2_reg(0) = '1') else 
        f_5_3_fu_2839_p1;
    p_03_i_4_fu_2937_p3 <= 
        ap_const_lv32_0 when (tmp_145_4_reg_3803_pp0_iter2_reg(0) = '1') else 
        f_5_4_fu_2933_p1;
    p_03_i_5_fu_2991_p3 <= 
        ap_const_lv32_0 when (tmp_145_5_reg_3814_pp0_iter2_reg(0) = '1') else 
        f_5_5_fu_2987_p1;
    p_03_i_6_fu_3085_p3 <= 
        ap_const_lv32_0 when (tmp_145_6_reg_3899_pp0_iter2_reg(0) = '1') else 
        f_5_6_fu_3081_p1;
    p_03_i_7_fu_3139_p3 <= 
        ap_const_lv32_0 when (tmp_145_7_reg_3910_pp0_iter2_reg(0) = '1') else 
        f_5_7_fu_3135_p1;
    p_03_i_8_fu_3213_p3 <= 
        ap_const_lv32_0 when (tmp_145_8_reg_3978_pp0_iter2_reg(0) = '1') else 
        f_5_8_fu_3209_p1;
    p_03_i_fu_2642_p3 <= 
        ap_const_lv32_0 when (tmp_80_reg_3611_pp0_iter1_reg(0) = '1') else 
        f_5_fu_2638_p1;
    p_Repl2_1_trunc_fu_802_p2 <= std_logic_vector(unsigned(tmp_23_fu_794_p2) + unsigned(tmp_24_fu_799_p1));
    p_Repl2_7_trunc_1_fu_2667_p2 <= std_logic_vector(unsigned(tmp_40_fu_2664_p1) + unsigned(tmp_39_fu_2659_p2));
    p_Repl2_7_trunc_2_fu_2761_p2 <= std_logic_vector(unsigned(tmp_44_fu_2758_p1) + unsigned(tmp_43_fu_2753_p2));
    p_Repl2_7_trunc_3_fu_2815_p2 <= std_logic_vector(unsigned(tmp_48_fu_2812_p1) + unsigned(tmp_47_fu_2807_p2));
    p_Repl2_7_trunc_4_fu_2909_p2 <= std_logic_vector(unsigned(tmp_52_fu_2906_p1) + unsigned(tmp_51_fu_2901_p2));
    p_Repl2_7_trunc_5_fu_2963_p2 <= std_logic_vector(unsigned(tmp_56_fu_2960_p1) + unsigned(tmp_55_fu_2955_p2));
    p_Repl2_7_trunc_6_fu_3057_p2 <= std_logic_vector(unsigned(tmp_95_fu_3054_p1) + unsigned(tmp_94_fu_3049_p2));
    p_Repl2_7_trunc_7_fu_3111_p2 <= std_logic_vector(unsigned(tmp_99_fu_3108_p1) + unsigned(tmp_98_fu_3103_p2));
    p_Repl2_7_trunc_8_fu_3185_p2 <= std_logic_vector(unsigned(tmp_103_fu_3182_p1) + unsigned(tmp_102_fu_3177_p2));
    p_Repl2_7_trunc_fu_2614_p2 <= std_logic_vector(unsigned(tmp_36_fu_2611_p1) + unsigned(tmp_35_fu_2606_p2));
    p_Result_1_fu_815_p5 <= (tmp_25_fu_808_p3 & tmp32_V_10_reg_3347(22 downto 0));
    p_Result_22_1_fu_2590_p4 <= tmp32_V_20_1_fu_2586_p1(30 downto 23);
    p_Result_22_2_fu_2712_p4 <= tmp32_V_20_2_fu_2708_p1(30 downto 23);
    p_Result_22_3_fu_2732_p4 <= tmp32_V_20_3_fu_2728_p1(30 downto 23);
    p_Result_22_4_fu_2860_p4 <= tmp32_V_20_4_fu_2856_p1(30 downto 23);
    p_Result_22_5_fu_2880_p4 <= tmp32_V_20_5_fu_2876_p1(30 downto 23);
    p_Result_22_6_fu_3008_p4 <= tmp32_V_20_6_fu_3004_p1(30 downto 23);
    p_Result_22_7_fu_3028_p4 <= tmp32_V_20_7_fu_3024_p1(30 downto 23);
    p_Result_22_8_fu_3156_p4 <= tmp32_V_20_8_fu_3152_p1(30 downto 23);
    p_Result_2_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_907_p3),54));
    
    p_Result_35_1_fu_1517_p4_proc : process(tmp_V_2_1_cast_fu_1514_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable p_Result_35_1_fu_1517_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_2_1_cast_fu_1514_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for p_Result_35_1_fu_1517_p4_i in 0 to 64-1 loop
                v0_cpy(p_Result_35_1_fu_1517_p4_i) := tmp_V_2_1_cast_fu_1514_p1(64-1-p_Result_35_1_fu_1517_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_35_1_fu_1517_p4 <= resvalue(64-1 downto 0);
    end process;

    
    p_Result_35_2_fu_1754_p4_proc : process(tmp_V_2_2_cast_fu_1751_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable p_Result_35_2_fu_1754_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_2_2_cast_fu_1751_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for p_Result_35_2_fu_1754_p4_i in 0 to 64-1 loop
                v0_cpy(p_Result_35_2_fu_1754_p4_i) := tmp_V_2_2_cast_fu_1751_p1(64-1-p_Result_35_2_fu_1754_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_35_2_fu_1754_p4 <= resvalue(64-1 downto 0);
    end process;

    
    p_Result_35_3_fu_1783_p4_proc : process(tmp_V_2_3_cast_fu_1780_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable p_Result_35_3_fu_1783_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_2_3_cast_fu_1780_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for p_Result_35_3_fu_1783_p4_i in 0 to 64-1 loop
                v0_cpy(p_Result_35_3_fu_1783_p4_i) := tmp_V_2_3_cast_fu_1780_p1(64-1-p_Result_35_3_fu_1783_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_35_3_fu_1783_p4 <= resvalue(64-1 downto 0);
    end process;

    
    p_Result_35_4_fu_2020_p4_proc : process(tmp_V_2_4_cast_fu_2017_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable p_Result_35_4_fu_2020_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_2_4_cast_fu_2017_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for p_Result_35_4_fu_2020_p4_i in 0 to 64-1 loop
                v0_cpy(p_Result_35_4_fu_2020_p4_i) := tmp_V_2_4_cast_fu_2017_p1(64-1-p_Result_35_4_fu_2020_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_35_4_fu_2020_p4 <= resvalue(64-1 downto 0);
    end process;

    
    p_Result_35_5_fu_2049_p4_proc : process(tmp_V_2_5_cast_fu_2046_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable p_Result_35_5_fu_2049_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_2_5_cast_fu_2046_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for p_Result_35_5_fu_2049_p4_i in 0 to 64-1 loop
                v0_cpy(p_Result_35_5_fu_2049_p4_i) := tmp_V_2_5_cast_fu_2046_p1(64-1-p_Result_35_5_fu_2049_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_35_5_fu_2049_p4 <= resvalue(64-1 downto 0);
    end process;

    
    p_Result_35_6_fu_2265_p4_proc : process(tmp_V_2_6_cast_fu_2262_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable p_Result_35_6_fu_2265_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_2_6_cast_fu_2262_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for p_Result_35_6_fu_2265_p4_i in 0 to 64-1 loop
                v0_cpy(p_Result_35_6_fu_2265_p4_i) := tmp_V_2_6_cast_fu_2262_p1(64-1-p_Result_35_6_fu_2265_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_35_6_fu_2265_p4 <= resvalue(64-1 downto 0);
    end process;

    
    p_Result_35_7_fu_2294_p4_proc : process(tmp_V_2_7_cast_fu_2291_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable p_Result_35_7_fu_2294_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_2_7_cast_fu_2291_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for p_Result_35_7_fu_2294_p4_i in 0 to 64-1 loop
                v0_cpy(p_Result_35_7_fu_2294_p4_i) := tmp_V_2_7_cast_fu_2291_p1(64-1-p_Result_35_7_fu_2294_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_35_7_fu_2294_p4 <= resvalue(64-1 downto 0);
    end process;

    
    p_Result_35_8_fu_2473_p4_proc : process(tmp_V_2_8_cast_fu_2470_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable p_Result_35_8_fu_2473_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_2_8_cast_fu_2470_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for p_Result_35_8_fu_2473_p4_i in 0 to 64-1 loop
                v0_cpy(p_Result_35_8_fu_2473_p4_i) := tmp_V_2_8_cast_fu_2470_p1(64-1-p_Result_35_8_fu_2473_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_35_8_fu_2473_p4 <= resvalue(64-1 downto 0);
    end process;

    p_Result_37_1_fu_2680_p5 <= (tmp_41_fu_2673_p3 & tmp32_V_20_1_reg_4029(22 downto 0));
    p_Result_37_2_fu_2774_p5 <= (tmp_45_fu_2767_p3 & tmp32_V_20_2_reg_4039(22 downto 0));
    p_Result_37_3_fu_2828_p5 <= (tmp_49_fu_2821_p3 & tmp32_V_20_3_reg_4049(22 downto 0));
    p_Result_37_4_fu_2922_p5 <= (tmp_53_fu_2915_p3 & tmp32_V_20_4_reg_4059(22 downto 0));
    p_Result_37_5_fu_2976_p5 <= (tmp_92_fu_2969_p3 & tmp32_V_20_5_reg_4069(22 downto 0));
    p_Result_37_6_fu_3070_p5 <= (tmp_96_fu_3063_p3 & tmp32_V_20_6_reg_4079(22 downto 0));
    p_Result_37_7_fu_3124_p5 <= (tmp_100_fu_3117_p3 & tmp32_V_20_7_reg_4089(22 downto 0));
    p_Result_37_8_fu_3198_p5 <= (tmp_104_fu_3191_p3 & tmp32_V_20_8_reg_4099(22 downto 0));
    p_Result_4_fu_778_p4 <= tmp32_V_10_fu_774_p1(30 downto 23);
    
    p_Result_7_fu_1488_p4_proc : process(tmp_V_2_cast_fu_1485_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable p_Result_7_fu_1488_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_2_cast_fu_1485_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for p_Result_7_fu_1488_p4_i in 0 to 64-1 loop
                v0_cpy(p_Result_7_fu_1488_p4_i) := tmp_V_2_cast_fu_1485_p1(64-1-p_Result_7_fu_1488_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_7_fu_1488_p4 <= resvalue(64-1 downto 0);
    end process;

    p_Result_9_fu_2570_p4 <= tmp32_V_8_fu_2566_p1(30 downto 23);
    p_Result_s_27_fu_2627_p5 <= (tmp_37_fu_2620_p3 & tmp32_V_8_reg_4019(22 downto 0));
    
    p_Result_s_fu_681_p4_proc : process(p_Val2_15_fu_676_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable p_Result_s_fu_681_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_15_fu_676_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for p_Result_s_fu_681_p4_i in 0 to 64-1 loop
                v0_cpy(p_Result_s_fu_681_p4_i) := p_Val2_15_fu_676_p3(64-1-p_Result_s_fu_681_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_681_p4 <= resvalue(64-1 downto 0);
    end process;

    p_Val2_15_fu_676_p3 <= 
        tmp_31_reg_3315 when (is_neg_reg_3309(0) = '1') else 
        p_Val2_1_reg_3302;
    p_Val2_1_fu_653_p2 <= std_logic_vector(unsigned(tmp25_reg_3297) + unsigned(tmp24_fu_648_p2));
    p_Val2_55_1_fu_1354_p0 <= OP2_V_cast_reg_3468(31 - 1 downto 0);
    p_Val2_55_1_fu_1354_p1 <= reg_509;
    p_Val2_55_1_fu_1354_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_55_1_fu_1354_p0) * signed(p_Val2_55_1_fu_1354_p1))), 63));
    p_Val2_55_2_fu_1432_p0 <= OP2_V_cast_reg_3468(31 - 1 downto 0);
    p_Val2_55_2_fu_1432_p1 <= reg_504;
    p_Val2_55_2_fu_1432_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_55_2_fu_1432_p0) * signed(p_Val2_55_2_fu_1432_p1))), 63));
    p_Val2_55_3_fu_1453_p0 <= OP2_V_cast_reg_3468(31 - 1 downto 0);
    p_Val2_55_3_fu_1453_p1 <= reg_509;
    p_Val2_55_3_fu_1453_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_55_3_fu_1453_p0) * signed(p_Val2_55_3_fu_1453_p1))), 63));
    p_Val2_55_4_fu_1579_p0 <= OP2_V_cast_reg_3468(31 - 1 downto 0);
    p_Val2_55_4_fu_1579_p1 <= reg_504;
    p_Val2_55_4_fu_1579_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_55_4_fu_1579_p0) * signed(p_Val2_55_4_fu_1579_p1))), 63));
    p_Val2_55_5_fu_1600_p0 <= OP2_V_cast_reg_3468(31 - 1 downto 0);
    p_Val2_55_5_fu_1600_p1 <= reg_509;
    p_Val2_55_5_fu_1600_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_55_5_fu_1600_p0) * signed(p_Val2_55_5_fu_1600_p1))), 63));
    p_Val2_55_6_fu_1845_p0 <= OP2_V_cast_reg_3468(31 - 1 downto 0);
    p_Val2_55_6_fu_1845_p1 <= reg_504;
    p_Val2_55_6_fu_1845_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_55_6_fu_1845_p0) * signed(p_Val2_55_6_fu_1845_p1))), 63));
    p_Val2_55_7_fu_1866_p0 <= OP2_V_cast_reg_3468(31 - 1 downto 0);
    p_Val2_55_7_fu_1866_p1 <= reg_509;
    p_Val2_55_7_fu_1866_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_55_7_fu_1866_p0) * signed(p_Val2_55_7_fu_1866_p1))), 63));
    p_Val2_55_8_fu_2111_p0 <= OP2_V_cast_reg_3468(31 - 1 downto 0);
    p_Val2_55_8_fu_2111_p1 <= reg_504;
    p_Val2_55_8_fu_2111_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_55_8_fu_2111_p0) * signed(p_Val2_55_8_fu_2111_p1))), 63));
    p_Val2_s_26_fu_1333_p0 <= OP2_V_cast_reg_3468(31 - 1 downto 0);
    p_Val2_s_26_fu_1333_p1 <= reg_504;
    p_Val2_s_26_fu_1333_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_s_26_fu_1333_p0) * signed(p_Val2_s_26_fu_1333_p1))), 63));
    p_op_fu_840_p2 <= std_logic_vector(unsigned(ap_const_lv32_5F3759DF) - unsigned(tmp_62_fu_836_p1));
    p_shl_cast_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_111_fu_1253_p4),11));
    p_v1_fu_574_p3 <= 
        i_2_mid1_fu_568_p2 when (exitcond_fu_532_p2(0) = '1') else 
        i_s_fu_554_p2;
    sel_tmp1_fu_1038_p2 <= (sel_tmp_fu_1032_p2 and sel_tmp8_fu_1021_p2);
    sel_tmp22_demorgan_fu_1044_p2 <= (tmp_67_reg_3405 or sel_tmp7_demorgan_fu_1011_p2);
    sel_tmp2_fu_1001_p2 <= (tmp_65_reg_3389 xor ap_const_lv1_1);
    sel_tmp3_fu_1006_p2 <= (tmp_70_reg_3417 and sel_tmp2_fu_1001_p2);
    sel_tmp4_fu_1049_p2 <= (sel_tmp22_demorgan_fu_1044_p2 xor ap_const_lv1_1);
    sel_tmp5_fu_1055_p2 <= (sel_tmp4_fu_1049_p2 and icmp1_reg_3423);
    sel_tmp7_demorgan_fu_1011_p2 <= (tmp_70_reg_3417 or tmp_65_reg_3389);
    sel_tmp7_fu_1015_p2 <= (sel_tmp7_demorgan_fu_1011_p2 xor ap_const_lv1_1);
    sel_tmp8_fu_1021_p2 <= (tmp_67_reg_3405 and sel_tmp7_fu_1015_p2);
    sel_tmp9_fu_1026_p2 <= (tmp_72_fu_986_p2 and sel_tmp8_fu_1021_p2);
    sel_tmp_fu_1032_p2 <= (tmp_72_fu_986_p2 xor ap_const_lv1_1);
        sh_amt_cast_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_3411),32));

    sh_amt_fu_948_p3 <= 
        tmp_68_fu_936_p2 when (tmp_67_fu_930_p2(0) = '1') else 
        tmp_69_fu_942_p2;
    tmp24_fu_648_p2 <= std_logic_vector(unsigned(p_Val2_10_reg_3276) + unsigned(cells_mag_sq_V_q1));
    tmp25_fu_642_p2 <= std_logic_vector(unsigned(cells_mag_sq_V_q0) + unsigned(cells_mag_sq_V_q1));
    tmp32_V_10_fu_774_p1 <= grp_fu_488_p1;
    tmp32_V_13_1_fu_1714_p2 <= std_logic_vector(shift_left(unsigned(tmp_137_fu_1705_p1),to_integer(unsigned('0' & tmp_150_1_fu_1708_p2(31-1 downto 0)))));
    tmp32_V_13_2_fu_1913_p2 <= std_logic_vector(shift_left(unsigned(tmp_148_fu_1904_p1),to_integer(unsigned('0' & tmp_150_2_fu_1907_p2(31-1 downto 0)))));
    tmp32_V_13_3_fu_1980_p2 <= std_logic_vector(shift_left(unsigned(tmp_159_fu_1971_p1),to_integer(unsigned('0' & tmp_150_3_fu_1974_p2(31-1 downto 0)))));
    tmp32_V_13_4_fu_2158_p2 <= std_logic_vector(shift_left(unsigned(tmp_170_fu_2149_p1),to_integer(unsigned('0' & tmp_150_4_fu_2152_p2(31-1 downto 0)))));
    tmp32_V_13_5_fu_2225_p2 <= std_logic_vector(shift_left(unsigned(tmp_181_fu_2216_p1),to_integer(unsigned('0' & tmp_150_5_fu_2219_p2(31-1 downto 0)))));
    tmp32_V_13_6_fu_2366_p2 <= std_logic_vector(shift_left(unsigned(tmp_192_fu_2357_p1),to_integer(unsigned('0' & tmp_150_6_fu_2360_p2(31-1 downto 0)))));
    tmp32_V_13_7_fu_2433_p2 <= std_logic_vector(shift_left(unsigned(tmp_203_fu_2424_p1),to_integer(unsigned('0' & tmp_150_7_fu_2427_p2(31-1 downto 0)))));
    tmp32_V_13_8_fu_2529_p2 <= std_logic_vector(shift_left(unsigned(tmp_214_fu_2520_p1),to_integer(unsigned('0' & tmp_150_8_fu_2523_p2(31-1 downto 0)))));
    tmp32_V_1_fu_737_p2 <= std_logic_vector(shift_left(unsigned(tmp32_V_fu_728_p1),to_integer(unsigned('0' & tmp_58_fu_731_p2(31-1 downto 0)))));
    tmp32_V_20_1_fu_2586_p1 <= grp_fu_491_p1;
    tmp32_V_20_2_fu_2708_p1 <= grp_fu_488_p1;
    tmp32_V_20_3_fu_2728_p1 <= grp_fu_491_p1;
    tmp32_V_20_4_fu_2856_p1 <= grp_fu_488_p1;
    tmp32_V_20_5_fu_2876_p1 <= grp_fu_491_p1;
    tmp32_V_20_6_fu_3004_p1 <= grp_fu_488_p1;
    tmp32_V_20_7_fu_3024_p1 <= grp_fu_491_p1;
    tmp32_V_20_8_fu_3152_p1 <= grp_fu_488_p1;
    tmp32_V_2_fu_762_p1 <= tmp_85_fu_757_p2(32 - 1 downto 0);
    tmp32_V_3_fu_1647_p2 <= std_logic_vector(shift_left(unsigned(tmp_126_fu_1638_p1),to_integer(unsigned('0' & tmp_87_fu_1641_p2(31-1 downto 0)))));
    tmp32_V_4_fu_766_p3 <= 
        tmp32_V_1_fu_737_p2 when (icmp_fu_722_p2(0) = '1') else 
        tmp32_V_2_fu_762_p1;
    tmp32_V_8_fu_2566_p1 <= grp_fu_488_p1;
    tmp32_V_fu_728_p1 <= p_Val2_15_reg_3326(32 - 1 downto 0);
    tmp_100_fu_3117_p3 <= (tmp_199_reg_3853_pp0_iter2_reg & p_Repl2_7_trunc_7_fu_3111_p2);
    tmp_101_fu_894_p1 <= ireg_V_fu_868_p1(52 - 1 downto 0);
    tmp_102_fu_3177_p2 <= std_logic_vector(signed(ap_const_lv8_9E) - signed(tmp_212_reg_4009_pp0_iter2_reg));
    tmp_103_fu_3182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_152_8_reg_4104),8));
    tmp_104_fu_3191_p3 <= (tmp_210_reg_3932_pp0_iter2_reg & p_Repl2_7_trunc_8_fu_3185_p2);
    tmp_105_fu_1109_p1 <= man_V_2_reg_3428(32 - 1 downto 0);
    tmp_106_fu_962_p4 <= sh_amt_fu_948_p3(11 downto 5);
    tmp_107_fu_1098_p3 <= 
        tmp_88_fu_1078_p4 when (sel_tmp9_fu_1026_p2(0) = '1') else 
        tmp_97_fu_1088_p4;
    tmp_108_fu_1141_p3 <= 
        tmp_86_fu_1134_p3 when (or_cond_reg_3443(0) = '1') else 
        tmp_107_reg_3453;
    tmp_109_fu_1147_p3 <= 
        tmp_108_fu_1141_p3 when (or_cond2_reg_3448(0) = '1') else 
        ap_const_lv31_0;
    tmp_110_fu_1241_p3 <= (tmp_78_fu_1236_p2 & tmp_84_mid2_v_fu_1228_p2);
    tmp_111_fu_1253_p4 <= ((tmp_78_fu_1236_p2 & tmp_84_mid2_v_fu_1228_p2) & ap_const_lv3_0);
    tmp_112_fu_1267_p2 <= std_logic_vector(unsigned(tmp_117_cast_fu_1249_p1) + unsigned(p_shl_cast_fu_1263_p1));
    tmp_113_fu_1278_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(tmp_112_fu_1267_p2));
    tmp_114_fu_1289_p2 <= std_logic_vector(unsigned(ap_const_lv11_2) + unsigned(tmp_112_reg_3521));
    tmp_115_fu_1299_p2 <= std_logic_vector(unsigned(ap_const_lv11_3) + unsigned(tmp_112_reg_3521));
    tmp_116_fu_1309_p2 <= std_logic_vector(unsigned(ap_const_lv11_4) + unsigned(tmp_112_reg_3521));
    tmp_117_cast_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_110_fu_1241_p3),11));
    tmp_117_fu_1319_p2 <= std_logic_vector(unsigned(ap_const_lv11_5) + unsigned(tmp_112_reg_3521));
    tmp_118_fu_1376_p2 <= std_logic_vector(unsigned(ap_const_lv11_6) + unsigned(tmp_112_reg_3521));
    tmp_119_cast_fu_1273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_112_fu_1267_p2),64));
    tmp_119_fu_1386_p2 <= std_logic_vector(unsigned(ap_const_lv11_7) + unsigned(tmp_112_reg_3521));
    tmp_120_cast_fu_1284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_113_fu_1278_p2),64));
    tmp_120_fu_1475_p2 <= std_logic_vector(unsigned(ap_const_lv11_8) + unsigned(tmp_112_reg_3521));
        tmp_121_cast_fu_1294_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_114_fu_1289_p2),64));

    tmp_121_fu_1338_p1 <= p_Val2_s_26_fu_1333_p2(62 - 1 downto 0);
        tmp_122_cast_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_115_fu_1299_p2),64));

        tmp_123_cast_fu_1314_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_116_fu_1309_p2),64));

    tmp_123_fu_1506_p1 <= tmp_81_fu_1498_p3(32 - 1 downto 0);
        tmp_124_cast_fu_1324_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_117_fu_1319_p2),64));

    tmp_124_fu_1510_p1 <= tmp_81_fu_1498_p3(8 - 1 downto 0);
        tmp_125_cast_fu_1381_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_118_fu_1376_p2),64));

    tmp_125_fu_1622_p4 <= msb_idx_2_fu_1617_p2(31 downto 5);
        tmp_126_cast_fu_1391_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_119_fu_1386_p2),64));

    tmp_126_fu_1638_p1 <= tmp_V_2_reg_3616(32 - 1 downto 0);
        tmp_127_cast_fu_1480_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_120_fu_1475_p2),64));

    tmp_127_fu_1653_p1 <= msb_idx_2_fu_1617_p2(6 - 1 downto 0);
    tmp_128_fu_1657_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_127_fu_1653_p1));
    tmp_129_fu_1663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_128_fu_1657_p2),64));
    tmp_130_fu_1667_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_2_cast_reg_3677),to_integer(unsigned('0' & tmp_129_fu_1663_p1(31-1 downto 0)))));
    tmp_131_fu_1672_p1 <= tmp_130_fu_1667_p2(32 - 1 downto 0);
    tmp_132_fu_1359_p1 <= p_Val2_55_1_fu_1354_p2(62 - 1 downto 0);
    tmp_134_fu_1535_p1 <= tmp_148_1_fu_1527_p3(32 - 1 downto 0);
    tmp_135_fu_1539_p1 <= tmp_148_1_fu_1527_p3(8 - 1 downto 0);
    tmp_136_fu_1689_p4 <= msb_idx_2_1_fu_1684_p2(31 downto 5);
    tmp_137_fu_1705_p1 <= tmp_V_2_1_reg_3627(32 - 1 downto 0);
    tmp_138_fu_1720_p1 <= msb_idx_2_1_fu_1684_p2(6 - 1 downto 0);
    tmp_139_fu_1724_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_138_fu_1720_p1));
    tmp_140_fu_1730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_139_fu_1724_p2),64));
    tmp_141_fu_1734_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_2_1_cast_reg_3692),to_integer(unsigned('0' & tmp_140_fu_1730_p1(31-1 downto 0)))));
    tmp_142_fu_1739_p1 <= tmp_141_fu_1734_p2(32 - 1 downto 0);
    tmp_143_fu_1437_p1 <= p_Val2_55_2_fu_1432_p2(62 - 1 downto 0);
    tmp_145_1_fu_1412_p2 <= "1" when (p_Val2_55_1_reg_3579 = ap_const_lv63_0) else "0";
    tmp_145_2_fu_1543_p2 <= "1" when (p_Val2_55_2_reg_3633 = ap_const_lv63_0) else "0";
    tmp_145_3_fu_1559_p2 <= "1" when (p_Val2_55_3_reg_3650 = ap_const_lv63_0) else "0";
    tmp_145_4_fu_1809_p2 <= "1" when (p_Val2_55_4_reg_3729 = ap_const_lv63_0) else "0";
    tmp_145_5_fu_1825_p2 <= "1" when (p_Val2_55_5_reg_3746 = ap_const_lv63_0) else "0";
    tmp_145_6_fu_2075_p2 <= "1" when (p_Val2_55_6_reg_3825 = ap_const_lv63_0) else "0";
    tmp_145_7_fu_2091_p2 <= "1" when (p_Val2_55_7_reg_3842 = ap_const_lv63_0) else "0";
    tmp_145_8_fu_2320_p2 <= "1" when (p_Val2_55_8_reg_3921 = ap_const_lv63_0) else "0";
    tmp_145_fu_1772_p1 <= tmp_148_2_fu_1764_p3(32 - 1 downto 0);
    tmp_146_fu_1776_p1 <= tmp_148_2_fu_1764_p3(8 - 1 downto 0);
    tmp_147_1_cast_fu_1417_p2 <= std_logic_vector(unsigned(ap_const_lv62_0) - unsigned(tmp_132_reg_3584));
    tmp_147_2_cast_fu_1548_p2 <= std_logic_vector(unsigned(ap_const_lv62_0) - unsigned(tmp_143_reg_3638));
    tmp_147_3_cast_fu_1564_p2 <= std_logic_vector(unsigned(ap_const_lv62_0) - unsigned(tmp_154_reg_3655));
    tmp_147_4_cast_fu_1814_p2 <= std_logic_vector(unsigned(ap_const_lv62_0) - unsigned(tmp_165_reg_3734));
    tmp_147_5_cast_fu_1830_p2 <= std_logic_vector(unsigned(ap_const_lv62_0) - unsigned(tmp_176_reg_3751));
    tmp_147_6_cast_fu_2080_p2 <= std_logic_vector(unsigned(ap_const_lv62_0) - unsigned(tmp_187_reg_3830));
    tmp_147_7_cast_fu_2096_p2 <= std_logic_vector(unsigned(ap_const_lv62_0) - unsigned(tmp_198_reg_3847));
    tmp_147_8_cast_fu_2325_p2 <= std_logic_vector(unsigned(ap_const_lv62_0) - unsigned(tmp_209_reg_3926));
    tmp_147_cast_fu_1401_p2 <= std_logic_vector(unsigned(ap_const_lv62_0) - unsigned(tmp_121_reg_3567));
    tmp_147_fu_1888_p4 <= msb_idx_2_2_fu_1883_p2(31 downto 5);
    
    tmp_148_1_fu_1527_p3_proc : process(p_Result_35_1_fu_1517_p4)
    begin
        tmp_148_1_fu_1527_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_35_1_fu_1517_p4(i) = '1' then
                tmp_148_1_fu_1527_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    
    tmp_148_2_fu_1764_p3_proc : process(p_Result_35_2_fu_1754_p4)
    begin
        tmp_148_2_fu_1764_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_35_2_fu_1754_p4(i) = '1' then
                tmp_148_2_fu_1764_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    
    tmp_148_3_fu_1793_p3_proc : process(p_Result_35_3_fu_1783_p4)
    begin
        tmp_148_3_fu_1793_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_35_3_fu_1783_p4(i) = '1' then
                tmp_148_3_fu_1793_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    
    tmp_148_4_fu_2030_p3_proc : process(p_Result_35_4_fu_2020_p4)
    begin
        tmp_148_4_fu_2030_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_35_4_fu_2020_p4(i) = '1' then
                tmp_148_4_fu_2030_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    
    tmp_148_5_fu_2059_p3_proc : process(p_Result_35_5_fu_2049_p4)
    begin
        tmp_148_5_fu_2059_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_35_5_fu_2049_p4(i) = '1' then
                tmp_148_5_fu_2059_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    
    tmp_148_6_fu_2275_p3_proc : process(p_Result_35_6_fu_2265_p4)
    begin
        tmp_148_6_fu_2275_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_35_6_fu_2265_p4(i) = '1' then
                tmp_148_6_fu_2275_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    
    tmp_148_7_fu_2304_p3_proc : process(p_Result_35_7_fu_2294_p4)
    begin
        tmp_148_7_fu_2304_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_35_7_fu_2294_p4(i) = '1' then
                tmp_148_7_fu_2304_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    
    tmp_148_8_fu_2483_p3_proc : process(p_Result_35_8_fu_2473_p4)
    begin
        tmp_148_8_fu_2483_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_35_8_fu_2473_p4(i) = '1' then
                tmp_148_8_fu_2483_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_148_fu_1904_p1 <= tmp_V_2_2_reg_3712(32 - 1 downto 0);
    tmp_149_fu_1919_p1 <= msb_idx_2_2_fu_1883_p2(6 - 1 downto 0);
    tmp_150_1_fu_1708_p2 <= std_logic_vector(unsigned(ap_const_lv32_1F) - unsigned(msb_idx_2_1_fu_1684_p2));
    tmp_150_2_fu_1907_p2 <= std_logic_vector(unsigned(ap_const_lv32_1F) - unsigned(msb_idx_2_2_fu_1883_p2));
    tmp_150_3_fu_1974_p2 <= std_logic_vector(unsigned(ap_const_lv32_1F) - unsigned(msb_idx_2_3_fu_1950_p2));
    tmp_150_4_fu_2152_p2 <= std_logic_vector(unsigned(ap_const_lv32_1F) - unsigned(msb_idx_2_4_fu_2128_p2));
    tmp_150_5_fu_2219_p2 <= std_logic_vector(unsigned(ap_const_lv32_1F) - unsigned(msb_idx_2_5_fu_2195_p2));
    tmp_150_6_fu_2360_p2 <= std_logic_vector(unsigned(ap_const_lv32_1F) - unsigned(msb_idx_2_6_fu_2336_p2));
    tmp_150_7_fu_2427_p2 <= std_logic_vector(unsigned(ap_const_lv32_1F) - unsigned(msb_idx_2_7_fu_2403_p2));
    tmp_150_8_fu_2523_p2 <= std_logic_vector(unsigned(ap_const_lv32_1F) - unsigned(msb_idx_2_8_fu_2499_p2));
    tmp_150_fu_1923_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_149_fu_1919_p1));
    tmp_151_fu_1929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_150_fu_1923_p2),64));
    tmp_152_1_fu_2600_p2 <= "0" when (p_Result_22_1_fu_2590_p4 = ap_const_lv8_9E) else "1";
    tmp_152_2_fu_2722_p2 <= "0" when (p_Result_22_2_fu_2712_p4 = ap_const_lv8_9E) else "1";
    tmp_152_3_fu_2742_p2 <= "0" when (p_Result_22_3_fu_2732_p4 = ap_const_lv8_9E) else "1";
    tmp_152_4_fu_2870_p2 <= "0" when (p_Result_22_4_fu_2860_p4 = ap_const_lv8_9E) else "1";
    tmp_152_5_fu_2890_p2 <= "0" when (p_Result_22_5_fu_2880_p4 = ap_const_lv8_9E) else "1";
    tmp_152_6_fu_3018_p2 <= "0" when (p_Result_22_6_fu_3008_p4 = ap_const_lv8_9E) else "1";
    tmp_152_7_fu_3038_p2 <= "0" when (p_Result_22_7_fu_3028_p4 = ap_const_lv8_9E) else "1";
    tmp_152_8_fu_3166_p2 <= "0" when (p_Result_22_8_fu_3156_p4 = ap_const_lv8_9E) else "1";
    tmp_152_fu_1933_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_2_2_cast_reg_3773),to_integer(unsigned('0' & tmp_151_fu_1929_p1(31-1 downto 0)))));
    tmp_153_fu_1938_p1 <= tmp_152_fu_1933_p2(32 - 1 downto 0);
    tmp_154_1_fu_2703_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_91_fu_2654_p2),64));
    tmp_154_2_fu_2797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_155_1_fu_2748_p2),64));
    tmp_154_3_fu_2851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_155_2_fu_2802_p2),64));
    tmp_154_4_fu_2945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_155_3_fu_2896_p2),64));
    tmp_154_5_fu_2999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_155_4_fu_2950_p2),64));
    tmp_154_6_fu_3093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_155_5_fu_3044_p2),64));
    tmp_154_7_fu_3147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_155_6_fu_3098_p2),64));
    tmp_154_8_fu_3221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_155_7_fu_3172_p2),64));
    tmp_154_fu_1458_p1 <= p_Val2_55_3_fu_1453_p2(62 - 1 downto 0);
    tmp_155_1_fu_2748_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(indvars_iv_in_mid2_reg_3490_pp0_iter2_reg));
    tmp_155_2_fu_2802_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) + unsigned(indvars_iv_in_mid2_reg_3490_pp0_iter2_reg));
    tmp_155_3_fu_2896_p2 <= std_logic_vector(unsigned(ap_const_lv32_4) + unsigned(indvars_iv_in_mid2_reg_3490_pp0_iter2_reg));
    tmp_155_4_fu_2950_p2 <= std_logic_vector(unsigned(ap_const_lv32_5) + unsigned(indvars_iv_in_mid2_reg_3490_pp0_iter2_reg));
    tmp_155_5_fu_3044_p2 <= std_logic_vector(unsigned(ap_const_lv32_6) + unsigned(indvars_iv_in_mid2_reg_3490_pp0_iter3_reg));
    tmp_155_6_fu_3098_p2 <= std_logic_vector(unsigned(ap_const_lv32_7) + unsigned(indvars_iv_in_mid2_reg_3490_pp0_iter3_reg));
    tmp_155_7_fu_3172_p2 <= std_logic_vector(unsigned(ap_const_lv32_8) + unsigned(indvars_iv_in_mid2_reg_3490_pp0_iter3_reg));
    tmp_156_fu_1801_p1 <= tmp_148_3_fu_1793_p3(32 - 1 downto 0);
    tmp_157_fu_1805_p1 <= tmp_148_3_fu_1793_p3(8 - 1 downto 0);
    tmp_158_fu_1955_p4 <= msb_idx_2_3_fu_1950_p2(31 downto 5);
    tmp_159_fu_1971_p1 <= tmp_V_2_3_reg_3723(32 - 1 downto 0);
    tmp_160_fu_1986_p1 <= msb_idx_2_3_fu_1950_p2(6 - 1 downto 0);
    tmp_161_fu_1990_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_160_fu_1986_p1));
    tmp_162_fu_1996_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_161_fu_1990_p2),64));
    tmp_163_fu_2000_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_2_3_cast_reg_3788),to_integer(unsigned('0' & tmp_162_fu_1996_p1(31-1 downto 0)))));
    tmp_164_fu_2005_p1 <= tmp_163_fu_2000_p2(32 - 1 downto 0);
    tmp_165_fu_1584_p1 <= p_Val2_55_4_fu_1579_p2(62 - 1 downto 0);
    tmp_167_fu_2038_p1 <= tmp_148_4_fu_2030_p3(32 - 1 downto 0);
    tmp_168_fu_2042_p1 <= tmp_148_4_fu_2030_p3(8 - 1 downto 0);
    tmp_169_fu_2133_p4 <= msb_idx_2_4_fu_2128_p2(31 downto 5);
    tmp_170_fu_2149_p1 <= tmp_V_2_4_reg_3808(32 - 1 downto 0);
    tmp_171_fu_2164_p1 <= msb_idx_2_4_fu_2128_p2(6 - 1 downto 0);
    tmp_172_fu_2168_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_171_fu_2164_p1));
    tmp_173_fu_2174_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_172_fu_2168_p2),64));
    tmp_174_fu_2178_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_2_4_cast_reg_3869),to_integer(unsigned('0' & tmp_173_fu_2174_p1(31-1 downto 0)))));
    tmp_175_fu_2183_p1 <= tmp_174_fu_2178_p2(32 - 1 downto 0);
    tmp_176_fu_1605_p1 <= p_Val2_55_5_fu_1600_p2(62 - 1 downto 0);
    tmp_178_fu_2067_p1 <= tmp_148_5_fu_2059_p3(32 - 1 downto 0);
    tmp_179_fu_2071_p1 <= tmp_148_5_fu_2059_p3(8 - 1 downto 0);
    tmp_180_fu_2200_p4 <= msb_idx_2_5_fu_2195_p2(31 downto 5);
    tmp_181_fu_2216_p1 <= tmp_V_2_5_reg_3819(32 - 1 downto 0);
    tmp_182_fu_2231_p1 <= msb_idx_2_5_fu_2195_p2(6 - 1 downto 0);
    tmp_183_fu_2235_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_182_fu_2231_p1));
    tmp_184_fu_2241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_183_fu_2235_p2),64));
    tmp_185_fu_2245_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_2_5_cast_reg_3884),to_integer(unsigned('0' & tmp_184_fu_2241_p1(31-1 downto 0)))));
    tmp_186_fu_2250_p1 <= tmp_185_fu_2245_p2(32 - 1 downto 0);
    tmp_187_fu_1850_p1 <= p_Val2_55_6_fu_1845_p2(62 - 1 downto 0);
    tmp_189_fu_2283_p1 <= tmp_148_6_fu_2275_p3(32 - 1 downto 0);
    tmp_190_fu_2287_p1 <= tmp_148_6_fu_2275_p3(8 - 1 downto 0);
    tmp_191_fu_2341_p4 <= msb_idx_2_6_fu_2336_p2(31 downto 5);
    tmp_192_fu_2357_p1 <= tmp_V_2_6_reg_3904(32 - 1 downto 0);
    tmp_193_fu_2372_p1 <= msb_idx_2_6_fu_2336_p2(6 - 1 downto 0);
    tmp_194_fu_2376_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_193_fu_2372_p1));
    tmp_195_fu_2382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_194_fu_2376_p2),64));
    tmp_196_fu_2386_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_2_6_cast_reg_3948),to_integer(unsigned('0' & tmp_195_fu_2382_p1(31-1 downto 0)))));
    tmp_197_fu_2391_p1 <= tmp_196_fu_2386_p2(32 - 1 downto 0);
    tmp_198_fu_1871_p1 <= p_Val2_55_7_fu_1866_p2(62 - 1 downto 0);
    tmp_200_fu_2312_p1 <= tmp_148_7_fu_2304_p3(32 - 1 downto 0);
    tmp_201_fu_2316_p1 <= tmp_148_7_fu_2304_p3(8 - 1 downto 0);
    tmp_202_fu_2408_p4 <= msb_idx_2_7_fu_2403_p2(31 downto 5);
    tmp_203_fu_2424_p1 <= tmp_V_2_7_reg_3915(32 - 1 downto 0);
    tmp_204_fu_2439_p1 <= msb_idx_2_7_fu_2403_p2(6 - 1 downto 0);
    tmp_205_fu_2443_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_204_fu_2439_p1));
    tmp_206_fu_2449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_205_fu_2443_p2),64));
    tmp_207_fu_2453_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_2_7_cast_reg_3963),to_integer(unsigned('0' & tmp_206_fu_2449_p1(31-1 downto 0)))));
    tmp_208_fu_2458_p1 <= tmp_207_fu_2453_p2(32 - 1 downto 0);
    tmp_209_fu_2116_p1 <= p_Val2_55_8_fu_2111_p2(62 - 1 downto 0);
    tmp_211_fu_2491_p1 <= tmp_148_8_fu_2483_p3(32 - 1 downto 0);
    tmp_212_fu_2495_p1 <= tmp_148_8_fu_2483_p3(8 - 1 downto 0);
    tmp_213_fu_2504_p4 <= msb_idx_2_8_fu_2499_p2(31 downto 5);
    tmp_214_fu_2520_p1 <= tmp_V_2_8_reg_3983(32 - 1 downto 0);
    tmp_215_fu_2535_p1 <= msb_idx_2_8_fu_2499_p2(6 - 1 downto 0);
    tmp_216_fu_2539_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_215_fu_2535_p1));
    tmp_217_fu_2545_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_216_fu_2539_p2),64));
    tmp_218_fu_2549_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_2_8_cast_reg_3999),to_integer(unsigned('0' & tmp_217_fu_2545_p1(31-1 downto 0)))));
    tmp_219_fu_2554_p1 <= tmp_218_fu_2549_p2(32 - 1 downto 0);
    tmp_23_fu_794_p2 <= std_logic_vector(signed(ap_const_lv8_9E) - signed(tmp_61_reg_3337));
    tmp_24_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_reg_3352),8));
    tmp_25_fu_808_p3 <= (is_neg_reg_3309 & p_Repl2_1_trunc_fu_802_p2);
    tmp_30_fu_907_p3 <= (ap_const_lv1_1 & tmp_101_reg_3384);
    tmp_31_fu_666_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(p_Val2_1_reg_3302));
    
    tmp_32_fu_691_p3_proc : process(p_Result_s_fu_681_p4)
    begin
        tmp_32_fu_691_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_s_fu_681_p4(i) = '1' then
                tmp_32_fu_691_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_34_fu_590_p3 <= (p_v1_fu_574_p3 & j_mid2_fu_546_p3);
    tmp_35_fu_2606_p2 <= std_logic_vector(signed(ap_const_lv8_9E) - signed(tmp_124_reg_3687_pp0_iter2_reg));
    tmp_36_fu_2611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_89_reg_4024),8));
    tmp_37_fu_2620_p3 <= (tmp_122_reg_3573_pp0_iter1_reg & p_Repl2_7_trunc_fu_2614_p2);
    tmp_38_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_603_p3),64));
    tmp_39_fu_2659_p2 <= std_logic_vector(signed(ap_const_lv8_9E) - signed(tmp_135_reg_3702_pp0_iter2_reg));
    tmp_40_fu_2664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_152_1_reg_4034),8));
    tmp_41_fu_2673_p3 <= (tmp_133_reg_3590_pp0_iter1_reg & p_Repl2_7_trunc_1_fu_2667_p2);
    tmp_42_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_590_p3),64));
    tmp_43_fu_2753_p2 <= std_logic_vector(signed(ap_const_lv8_9E) - signed(tmp_146_reg_3783_pp0_iter2_reg));
    tmp_44_fu_2758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_152_2_reg_4044),8));
    tmp_45_fu_2767_p3 <= (tmp_144_reg_3644_pp0_iter1_reg & p_Repl2_7_trunc_2_fu_2761_p2);
    tmp_46_fu_631_p3 <= (i_cast_mid2_v_reg_3248 & j_2_reg_3281);
    tmp_47_fu_2807_p2 <= std_logic_vector(signed(ap_const_lv8_9E) - signed(tmp_157_reg_3798_pp0_iter2_reg));
    tmp_48_fu_2812_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_152_3_reg_4054),8));
    tmp_49_fu_2821_p3 <= (tmp_155_reg_3661_pp0_iter1_reg & p_Repl2_7_trunc_3_fu_2815_p2);
    tmp_50_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_631_p3),64));
    tmp_51_fu_2901_p2 <= std_logic_vector(signed(ap_const_lv8_9E) - signed(tmp_168_reg_3879_pp0_iter2_reg));
    tmp_52_fu_2906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_152_4_reg_4064),8));
    tmp_53_fu_2915_p3 <= (tmp_166_reg_3740_pp0_iter2_reg & p_Repl2_7_trunc_4_fu_2909_p2);
    tmp_54_fu_619_p3 <= (p_v1_reg_3256 & j_2_fu_614_p2);
    tmp_55_fu_2955_p2 <= std_logic_vector(signed(ap_const_lv8_9E) - signed(tmp_179_reg_3894_pp0_iter2_reg));
    tmp_56_fu_2960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_152_5_reg_4074),8));
    tmp_57_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_fu_619_p3),64));
    tmp_58_fu_731_p2 <= std_logic_vector(unsigned(ap_const_lv32_1F) - unsigned(msb_idx_fu_707_p2));
    tmp_59_fu_788_p2 <= "0" when (p_Result_4_fu_778_p4 = ap_const_lv8_9E) else "1";
    tmp_60_fu_826_p4 <= p_Result_1_fu_815_p5(31 downto 1);
    tmp_61_fu_703_p1 <= tmp_32_fu_691_p3(8 - 1 downto 0);
    tmp_62_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_60_fu_826_p4),32));
    tmp_64_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_reg_3379),12));
    tmp_65_fu_898_p2 <= "1" when (tmp_93_fu_872_p1 = ap_const_lv63_0) else "0";
    tmp_66_fu_712_p4 <= msb_idx_fu_707_p2(31 downto 5);
    tmp_67_fu_930_p2 <= "1" when (signed(F2_fu_924_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_68_fu_936_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_fu_924_p2));
    tmp_69_fu_942_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_924_p2));
    tmp_70_fu_956_p2 <= "1" when (F2_fu_924_p2 = ap_const_lv12_10) else "0";
    tmp_71_fu_846_p1 <= p_op_fu_840_p2;
    tmp_72_fu_986_p2 <= "1" when (unsigned(sh_amt_reg_3411) < unsigned(ap_const_lv12_36)) else "0";
    tmp_73_fu_743_p1 <= msb_idx_fu_707_p2(6 - 1 downto 0);
    tmp_74_fu_991_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_cast_fu_983_p1),54));
    tmp_75_fu_995_p2 <= std_logic_vector(shift_right(signed(man_V_2_fu_978_p3),to_integer(unsigned('0' & tmp_74_fu_991_p1(31-1 downto 0)))));
    tmp_76_fu_1112_p2 <= std_logic_vector(shift_left(unsigned(tmp_105_fu_1109_p1),to_integer(unsigned('0' & sh_amt_cast_reg_3433(31-1 downto 0)))));
    tmp_77_fu_1154_p2 <= std_logic_vector(unsigned(ap_const_lv32_24) + unsigned(hog_index_1_mid2_reg_3234));
    tmp_78_fu_1236_p2 <= std_logic_vector(unsigned(ii_cast_fu_1233_p1) + unsigned(i_cast_mid2_reg_3458));
    tmp_79_fu_747_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_73_fu_743_p1));
    tmp_80_fu_1396_p2 <= "1" when (p_Val2_s_26_reg_3562 = ap_const_lv63_0) else "0";
    
    tmp_81_fu_1498_p3_proc : process(p_Result_7_fu_1488_p4)
    begin
        tmp_81_fu_1498_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_7_fu_1488_p4(i) = '1' then
                tmp_81_fu_1498_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_82_dup_fu_1181_p2 <= std_logic_vector(unsigned(ap_const_lv32_12) + unsigned(ap_phi_mux_hog_index_2_phi_fu_442_p4));
    tmp_82_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_79_fu_747_p2),64));
    tmp_83_fu_1117_p4 <= tmp_76_fu_1112_p2(31 downto 1);
    tmp_84_fu_1127_p3 <= 
        ap_const_lv31_7FFFFFFF when (isneg_reg_3373(0) = '1') else 
        ap_const_lv31_0;
    tmp_84_mid2_v_fu_1228_p2 <= std_logic_vector(unsigned(tmp_84_mid2_v_v_fu_1225_p1) + unsigned(j_mid2_reg_3241));
    tmp_84_mid2_v_v_fu_1225_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_mid2_v_v_v_reg_3510),3));
    tmp_84_mid2_v_v_v_fu_1209_p3 <= 
        jj_1_fu_1175_p2 when (exitcond1_fu_1187_p2(0) = '1') else 
        ap_phi_mux_jj_phi_fu_452_p4;
    tmp_85_fu_757_p2 <= std_logic_vector(shift_right(unsigned(p_Val2_15_reg_3326),to_integer(unsigned('0' & tmp_82_fu_753_p1(31-1 downto 0)))));
    tmp_86_fu_1134_p3 <= 
        tmp_83_fu_1117_p4 when (sel_tmp5_reg_3438(0) = '1') else 
        tmp_84_fu_1127_p3;
    tmp_87_fu_1641_p2 <= std_logic_vector(unsigned(ap_const_lv32_1F) - unsigned(msb_idx_2_fu_1617_p2));
    tmp_88_fu_1078_p4 <= tmp_75_fu_995_p2(31 downto 1);
    tmp_89_fu_2580_p2 <= "0" when (p_Result_9_fu_2570_p4 = ap_const_lv8_9E) else "1";
    tmp_90_fu_2650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvars_iv_in_mid2_reg_3490_pp0_iter2_reg),64));
    tmp_91_fu_2654_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(indvars_iv_in_mid2_reg_3490_pp0_iter2_reg));
    tmp_92_fu_2969_p3 <= (tmp_177_reg_3757_pp0_iter2_reg & p_Repl2_7_trunc_5_fu_2963_p2);
    tmp_93_fu_872_p1 <= ireg_V_fu_868_p1(63 - 1 downto 0);
    tmp_94_fu_3049_p2 <= std_logic_vector(signed(ap_const_lv8_9E) - signed(tmp_190_reg_3958_pp0_iter2_reg));
    tmp_95_fu_3054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_152_6_reg_4084),8));
    tmp_96_fu_3063_p3 <= (tmp_188_reg_3836_pp0_iter2_reg & p_Repl2_7_trunc_6_fu_3057_p2);
    tmp_97_fu_1088_p4 <= man_V_2_fu_978_p3(31 downto 1);
    tmp_98_fu_3103_p2 <= std_logic_vector(signed(ap_const_lv8_9E) - signed(tmp_201_reg_3973_pp0_iter2_reg));
    tmp_99_fu_3108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_152_7_reg_4094),8));
    tmp_V_2_1_cast_fu_1514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_2_1_reg_3627),64));
    tmp_V_2_1_fu_1422_p3 <= 
        tmp_147_1_cast_fu_1417_p2 when (tmp_133_reg_3590(0) = '1') else 
        tmp_132_reg_3584;
    tmp_V_2_2_cast_fu_1751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_2_2_reg_3712),64));
    tmp_V_2_2_fu_1553_p3 <= 
        tmp_147_2_cast_fu_1548_p2 when (tmp_144_reg_3644(0) = '1') else 
        tmp_143_reg_3638;
    tmp_V_2_3_cast_fu_1780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_2_3_reg_3723),64));
    tmp_V_2_3_fu_1569_p3 <= 
        tmp_147_3_cast_fu_1564_p2 when (tmp_155_reg_3661(0) = '1') else 
        tmp_154_reg_3655;
    tmp_V_2_4_cast_fu_2017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_2_4_reg_3808),64));
    tmp_V_2_4_fu_1819_p3 <= 
        tmp_147_4_cast_fu_1814_p2 when (tmp_166_reg_3740(0) = '1') else 
        tmp_165_reg_3734;
    tmp_V_2_5_cast_fu_2046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_2_5_reg_3819),64));
    tmp_V_2_5_fu_1835_p3 <= 
        tmp_147_5_cast_fu_1830_p2 when (tmp_177_reg_3757(0) = '1') else 
        tmp_176_reg_3751;
    tmp_V_2_6_cast_fu_2262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_2_6_reg_3904),64));
    tmp_V_2_6_fu_2085_p3 <= 
        tmp_147_6_cast_fu_2080_p2 when (tmp_188_reg_3836(0) = '1') else 
        tmp_187_reg_3830;
    tmp_V_2_7_cast_fu_2291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_2_7_reg_3915),64));
    tmp_V_2_7_fu_2101_p3 <= 
        tmp_147_7_cast_fu_2096_p2 when (tmp_199_reg_3853(0) = '1') else 
        tmp_198_reg_3847;
    tmp_V_2_8_cast_fu_2470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_2_8_reg_3983),64));
    tmp_V_2_8_fu_2330_p3 <= 
        tmp_147_8_cast_fu_2325_p2 when (tmp_210_reg_3932(0) = '1') else 
        tmp_209_reg_3926;
    tmp_V_2_cast_fu_1485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_2_reg_3616),64));
    tmp_V_2_fu_1406_p3 <= 
        tmp_147_cast_fu_1401_p2 when (tmp_122_reg_3573(0) = '1') else 
        tmp_121_reg_3567;
    tmp_fu_603_p3 <= (i_cast_mid2_v_reg_3248 & j_mid2_reg_3241);
    tmp_s_fu_671_p2 <= "1" when (p_Val2_1_reg_3302 = ap_const_lv64_0) else "0";
    x_fu_861_p3 <= 
        ap_const_lv32_0 when (tmp_s_reg_3320(0) = '1') else 
        f_fu_857_p1;
    yn_fu_850_p3 <= 
        ap_const_lv32_5F3759DF when (tmp_s_reg_3320(0) = '1') else 
        tmp_71_fu_846_p1;
end behav;
