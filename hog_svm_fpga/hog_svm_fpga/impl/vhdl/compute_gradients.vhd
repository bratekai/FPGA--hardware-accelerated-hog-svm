-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_gradients is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    image_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    image_V_ce0 : OUT STD_LOGIC;
    image_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    image_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    image_V_ce1 : OUT STD_LOGIC;
    image_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    grad_vote_magnitude_s_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    grad_vote_magnitude_s_ce0 : OUT STD_LOGIC;
    grad_vote_magnitude_s_we0 : OUT STD_LOGIC;
    grad_vote_magnitude_s_d0 : OUT STD_LOGIC_VECTOR (25 downto 0);
    grad_vote_bin_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    grad_vote_bin_V_ce0 : OUT STD_LOGIC;
    grad_vote_bin_V_we0 : OUT STD_LOGIC;
    grad_vote_bin_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of compute_gradients is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv29_10000 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000010000000000000000";
    constant ap_const_lv31_20000 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000100000000000000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_171 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_reg_182 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_reg_193 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_s_27_fu_232_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_s_27_reg_966 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal dy_V_fu_240_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal dy_V_reg_971 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_flatten_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_976 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_976_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_976_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_254_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_flatten_next_reg_980 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_985 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid2_fu_272_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_mid2_reg_991 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_mid2_reg_991_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal j_mid2_reg_991_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid1_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid1_reg_998 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid1_26_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid1_26_reg_1003 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_73_mid2_v_fu_292_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_73_mid2_v_reg_1008 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_73_mid2_v_reg_1008_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_73_mid2_v_reg_1008_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_110_fu_300_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_110_reg_1014 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal gradX_fu_487_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal gradX_reg_1040 : STD_LOGIC_VECTOR (8 downto 0);
    signal gradX_reg_1040_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_114_reg_1052 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_503_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_2_reg_1057 : STD_LOGIC_VECTOR (6 downto 0);
    signal gradY_fu_536_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal gradY_reg_1062 : STD_LOGIC_VECTOR (8 downto 0);
    signal quad_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal quad_reg_1070 : STD_LOGIC_VECTOR (0 downto 0);
    signal quad_reg_1070_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_1078 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_561_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_1084 : STD_LOGIC_VECTOR (8 downto 0);
    signal r1_V_fu_639_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r1_V_reg_1089 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_98_i_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_i_reg_1095 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_i_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_i_reg_1102 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_i_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_i_reg_1108 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_i_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_i_reg_1114 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_phi_mux_indvar_flatten_phi_fu_175_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_i_phi_fu_186_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_j_phi_fu_197_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_96_fu_356_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_98_fu_369_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_105_cast_fu_457_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_106_cast_fu_468_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_107_cast_fu_841_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_100_fu_216_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal uy_V_cast_fu_226_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_cast_fu_220_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_5_dup_fu_260_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_111_fu_310_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_73_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lx_V_fu_314_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_74_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rx_V_fu_334_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_4_fu_340_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_95_fu_348_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_s_fu_320_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_97_fu_361_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_5_cast_mid1_fu_374_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_89_fu_384_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_90_fu_391_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_91_fu_397_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal uy_V_cast_mid1_fu_379_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_92_fu_409_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_93_fu_416_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_94_fu_422_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_fu_434_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_fu_438_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_cast_fu_448_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_96_cast_fu_405_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_99_fu_451_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_100_cast_fu_430_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_101_fu_462_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_fu_442_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_112_fu_473_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_fu_481_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_1_fu_508_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_1_fu_512_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_fu_516_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_113_fu_522_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_39_fu_530_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_115_fu_544_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_566_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_5_fu_578_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_6_fu_590_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_103_fu_602_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_7_fu_607_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_15_cast_fu_586_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_56_cast_fu_574_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_fu_619_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_16_cast_fu_598_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal addconv_cast_fu_625_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal addconv2_fu_629_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal addconv2_cast_fu_635_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_17_cast_fu_615_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_104_fu_645_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal dy_V_1_fu_652_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_93_i_fu_664_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_93_i_cast_fu_671_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_94_i_fu_679_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_94_i_cast_fu_686_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_50_cast_i_fu_675_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_12_cast_i_fu_694_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_95_i_fu_704_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_95_i_cast_fu_711_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_96_i_fu_719_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_96_i_cast_fu_726_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_97_i_fu_734_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_97_i_cast_fu_741_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_12_i_cast_fu_690_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_17_i_cast_fu_745_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp1_fu_749_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp1_cast_fu_755_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_41_fu_730_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_765_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp2_cast_fu_771_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_15_i_cast_fu_715_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp3_fu_781_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp3_cast_fu_787_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dy_V_cast15_cast_i_fu_656_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal addconv_i_fu_698_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal dy_V_cast_i_fu_660_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_i_fu_759_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_13_i_fu_775_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_14_i_fu_791_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_fu_821_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_75_cast1_fu_832_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_92_cast_fu_828_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_102_fu_835_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal a_V_fu_847_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal a_V_cast_fu_854_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_81_fu_858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_i_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_i_fu_871_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_cast_i_cast_s_fu_892_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp3_i_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_i_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_i_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_cast_i_cast_s_fu_878_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp2_i_fu_909_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp4_fu_940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_i_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_cast_i_cast_s_fu_885_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp6_i_fu_932_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp10_i_fu_950_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_976 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                i_reg_182 <= tmp_73_mid2_v_reg_1008;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_182 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_171_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_976 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                indvar_flatten_reg_171 <= indvar_flatten_next_reg_980;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_171 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    j_reg_193_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_976 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                j_reg_193 <= j_2_reg_1057;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_reg_193 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                dy_V_reg_971 <= dy_V_fu_240_p3;
                exitcond_flatten_reg_976 <= exitcond_flatten_fu_248_p2;
                exitcond_flatten_reg_976_pp0_iter1_reg <= exitcond_flatten_reg_976;
                exitcond_flatten_reg_976_pp0_iter2_reg <= exitcond_flatten_reg_976_pp0_iter1_reg;
                j_mid2_reg_991_pp0_iter1_reg <= j_mid2_reg_991;
                j_mid2_reg_991_pp0_iter2_reg <= j_mid2_reg_991_pp0_iter1_reg;
                p_s_27_reg_966 <= p_s_27_fu_232_p3;
                quad_reg_1070_pp0_iter2_reg <= quad_reg_1070;
                tmp_73_mid2_v_reg_1008_pp0_iter1_reg <= tmp_73_mid2_v_reg_1008;
                tmp_73_mid2_v_reg_1008_pp0_iter2_reg <= tmp_73_mid2_v_reg_1008_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_248_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_reg_985 <= exitcond_fu_266_p2;
                j_mid2_reg_991 <= j_mid2_fu_272_p3;
                tmp_110_reg_1014 <= tmp_110_fu_300_p1;
                tmp_mid1_26_reg_1003 <= tmp_mid1_26_fu_286_p2;
                tmp_mid1_reg_998 <= tmp_mid1_fu_280_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_976 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                gradX_reg_1040 <= gradX_fu_487_p3;
                tmp_114_reg_1052 <= r_V_fu_442_p2(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                gradX_reg_1040_pp0_iter1_reg <= gradX_reg_1040;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_976 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                gradY_reg_1062 <= gradY_fu_536_p3;
                quad_reg_1070 <= quad_fu_552_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_980 <= indvar_flatten_next_fu_254_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_976 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                j_2_reg_1057 <= j_2_fu_503_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_976_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Val2_s_reg_1084 <= p_Val2_s_fu_561_p3;
                    r1_V_reg_1089(25 downto 13) <= r1_V_fu_639_p2(25 downto 13);
                tmp_100_i_reg_1108 <= tmp_100_i_fu_809_p2;
                tmp_102_i_reg_1114 <= tmp_102_i_fu_815_p2;
                tmp_98_i_reg_1095 <= tmp_98_i_fu_797_p2;
                tmp_99_i_reg_1102 <= tmp_99_i_fu_803_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_248_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_73_mid2_v_reg_1008 <= tmp_73_mid2_v_fu_292_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_976_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_80_reg_1078 <= tmp_80_fu_557_p2;
            end if;
        end if;
    end process;
    r1_V_reg_1089(12 downto 0) <= "0000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, exitcond_flatten_fu_248_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond_flatten_fu_248_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((exitcond_flatten_fu_248_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
        a_V_cast_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a_V_fu_847_p3),26));

    a_V_fu_847_p3 <= (p_Val2_s_reg_1084 & ap_const_lv16_0);
        addconv2_cast_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addconv2_fu_629_p2),26));

    addconv2_fu_629_p2 <= std_logic_vector(signed(p_Val2_16_cast_fu_598_p1) + signed(addconv_cast_fu_625_p1));
        addconv_cast_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addconv_fu_619_p2),25));

    addconv_fu_619_p2 <= std_logic_vector(signed(p_Val2_15_cast_fu_586_p1) + signed(p_Val2_56_cast_fu_574_p1));
    addconv_i_fu_698_p2 <= std_logic_vector(unsigned(p_Val2_50_cast_i_fu_675_p1) + unsigned(p_Val2_12_cast_i_fu_694_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state8 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_248_p2)
    begin
        if ((exitcond_flatten_fu_248_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_186_p4_assign_proc : process(i_reg_182, ap_CS_fsm_pp0_stage0, exitcond_flatten_reg_976, tmp_73_mid2_v_reg_1008, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((exitcond_flatten_reg_976 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_186_p4 <= tmp_73_mid2_v_reg_1008;
        else 
            ap_phi_mux_i_phi_fu_186_p4 <= i_reg_182;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_175_p4_assign_proc : process(indvar_flatten_reg_171, ap_CS_fsm_pp0_stage0, exitcond_flatten_reg_976, indvar_flatten_next_reg_980, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((exitcond_flatten_reg_976 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_175_p4 <= indvar_flatten_next_reg_980;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_175_p4 <= indvar_flatten_reg_171;
        end if; 
    end process;


    ap_phi_mux_j_phi_fu_197_p4_assign_proc : process(j_reg_193, ap_CS_fsm_pp0_stage0, exitcond_flatten_reg_976, j_2_reg_1057, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((exitcond_flatten_reg_976 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_j_phi_fu_197_p4 <= j_2_reg_1057;
        else 
            ap_phi_mux_j_phi_fu_197_p4 <= j_reg_193;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

        dy_V_1_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_104_fu_645_p3),27));

    dy_V_cast15_cast_i_fu_656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dy_V_1_fu_652_p1),30));
    dy_V_cast_i_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dy_V_1_fu_652_p1),32));
    dy_V_fu_240_p3 <= 
        ap_const_lv6_3F when (tmp_s_fu_210_p2(0) = '1') else 
        i_5_cast_fu_220_p2;
    exitcond_flatten_fu_248_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_175_p4 = ap_const_lv13_1000) else "0";
    exitcond_fu_266_p2 <= "1" when (ap_phi_mux_j_phi_fu_197_p4 = ap_const_lv7_40) else "0";
    gradX_fu_487_p3 <= 
        tmp_77_fu_481_p2 when (tmp_112_fu_473_p3(0) = '1') else 
        r_V_fu_442_p2;
    gradY_fu_536_p3 <= 
        p_Val2_39_fu_530_p2 when (tmp_113_fu_522_p3(0) = '1') else 
        r_V_1_fu_516_p2;
    grad_vote_bin_V_address0 <= tmp_107_cast_fu_841_p1(12 - 1 downto 0);

    grad_vote_bin_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            grad_vote_bin_V_ce0 <= ap_const_logic_1;
        else 
            grad_vote_bin_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grad_vote_bin_V_d0 <= 
        sel_tmp10_i_fu_950_p3 when (tmp_98_i_reg_1095(0) = '1') else 
        ap_const_lv4_0;

    grad_vote_bin_V_we0_assign_proc : process(exitcond_flatten_reg_976_pp0_iter2_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((exitcond_flatten_reg_976_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            grad_vote_bin_V_we0 <= ap_const_logic_1;
        else 
            grad_vote_bin_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grad_vote_magnitude_s_address0 <= tmp_107_cast_fu_841_p1(12 - 1 downto 0);

    grad_vote_magnitude_s_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            grad_vote_magnitude_s_ce0 <= ap_const_logic_1;
        else 
            grad_vote_magnitude_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grad_vote_magnitude_s_d0 <= 
        r1_V_reg_1089 when (tmp_81_fu_858_p2(0) = '1') else 
        a_V_cast_fu_854_p1;

    grad_vote_magnitude_s_we0_assign_proc : process(exitcond_flatten_reg_976_pp0_iter2_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((exitcond_flatten_reg_976_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            grad_vote_magnitude_s_we0 <= ap_const_logic_1;
        else 
            grad_vote_magnitude_s_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_5_cast_fu_220_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(tmp_100_fu_216_p1));
    i_5_cast_mid1_fu_374_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(tmp_110_reg_1014));
    i_5_dup_fu_260_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(ap_phi_mux_i_phi_fu_186_p4));

    image_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_96_fu_356_p1, tmp_105_cast_fu_457_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                image_V_address0 <= tmp_105_cast_fu_457_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                image_V_address0 <= tmp_96_fu_356_p1(12 - 1 downto 0);
            else 
                image_V_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            image_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    image_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_98_fu_369_p1, ap_block_pp0_stage1, tmp_106_cast_fu_468_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                image_V_address1 <= tmp_106_cast_fu_468_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                image_V_address1 <= tmp_98_fu_369_p1(12 - 1 downto 0);
            else 
                image_V_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            image_V_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    image_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            image_V_ce0 <= ap_const_logic_1;
        else 
            image_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            image_V_ce1 <= ap_const_logic_1;
        else 
            image_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_254_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(ap_phi_mux_indvar_flatten_phi_fu_175_p4));
    j_2_fu_503_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(j_mid2_reg_991));
    j_mid2_fu_272_p3 <= 
        ap_const_lv7_0 when (exitcond_fu_266_p2(0) = '1') else 
        ap_phi_mux_j_phi_fu_197_p4;
    lhs_V_1_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_q0),9));
    lhs_V_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_q0),9));
    lx_V_fu_314_p2 <= std_logic_vector(signed(ap_const_lv6_3F) + signed(tmp_111_fu_310_p1));
    p_4_fu_340_p3 <= 
        ap_const_lv6_3F when (tmp_74_fu_328_p2(0) = '1') else 
        rx_V_fu_334_p2;
    p_Val2_12_cast_i_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_94_i_cast_fu_686_p1),30));
    p_Val2_12_i_cast_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_94_i_cast_fu_686_p1),29));
    p_Val2_13_i_fu_775_p2 <= std_logic_vector(unsigned(tmp2_cast_fu_771_p1) + unsigned(p_Val2_50_cast_i_fu_675_p1));
    p_Val2_14_i_fu_791_p2 <= std_logic_vector(unsigned(tmp3_cast_fu_787_p1) + unsigned(p_Val2_41_fu_730_p1));
        p_Val2_15_cast_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_5_fu_578_p3),24));

    p_Val2_15_i_cast_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_95_i_cast_fu_711_p1),31));
        p_Val2_16_cast_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_6_fu_590_p3),25));

        p_Val2_17_cast_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_7_fu_607_p3),26));

    p_Val2_17_i_cast_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_97_i_cast_fu_741_p1),29));
    p_Val2_1_fu_566_p3 <= (p_Val2_s_fu_561_p3 & ap_const_lv13_0);
    p_Val2_39_fu_530_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(r_V_1_fu_516_p2));
    p_Val2_41_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_96_i_cast_fu_726_p1),32));
    p_Val2_50_cast_i_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_93_i_cast_fu_671_p1),30));
        p_Val2_56_cast_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_566_p3),24));

    p_Val2_5_fu_578_p3 <= (p_Val2_s_fu_561_p3 & ap_const_lv14_0);
    p_Val2_6_fu_590_p3 <= (p_Val2_s_fu_561_p3 & ap_const_lv15_0);
    p_Val2_7_fu_607_p3 <= (tmp_103_fu_602_p3 & ap_const_lv15_0);
    p_Val2_i_fu_759_p2 <= std_logic_vector(unsigned(tmp1_cast_fu_755_p1) + unsigned(p_Val2_41_fu_730_p1));
    p_Val2_s_fu_561_p3 <= 
        gradX_reg_1040_pp0_iter1_reg when (tmp_80_reg_1078(0) = '1') else 
        gradY_reg_1062;
    p_s_27_fu_232_p3 <= 
        ap_const_lv6_0 when (tmp_fu_204_p2(0) = '1') else 
        uy_V_cast_fu_226_p2;
    p_s_fu_320_p3 <= 
        ap_const_lv6_0 when (tmp_73_fu_304_p2(0) = '1') else 
        lx_V_fu_314_p2;
    quad_fu_552_p2 <= (tmp_115_fu_544_p3 xor tmp_114_reg_1052);
    r1_V_fu_639_p2 <= std_logic_vector(signed(addconv2_cast_fu_635_p1) + signed(p_Val2_17_cast_fu_615_p1));
    r_V_1_fu_516_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_508_p1) - unsigned(rhs_V_1_fu_512_p1));
    r_V_fu_442_p2 <= std_logic_vector(unsigned(lhs_V_fu_434_p1) - unsigned(rhs_V_fu_438_p1));
    rhs_V_1_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_q1),9));
    rhs_V_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_q1),9));
    rx_V_fu_334_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(tmp_111_fu_310_p1));
    sel_tmp10_i_fu_950_p3 <= 
        tmp_109_cast_i_cast_s_fu_885_p3 when (sel_tmp9_i_fu_944_p2(0) = '1') else 
        sel_tmp6_i_fu_932_p3;
    sel_tmp1_i_fu_904_p2 <= (tmp_98_i_reg_1095 and sel_tmp_i_fu_899_p2);
    sel_tmp2_i_fu_909_p3 <= 
        tmp_101_i_fu_871_p3 when (sel_tmp1_i_fu_904_p2(0) = '1') else 
        tmp_110_cast_i_cast_s_fu_892_p3;
    sel_tmp3_i_fu_917_p2 <= (tmp_99_i_reg_1102 and tmp_98_i_reg_1095);
    sel_tmp4_i_fu_921_p2 <= (tmp_100_i_reg_1108 xor ap_const_lv1_1);
    sel_tmp5_i_fu_926_p2 <= (sel_tmp4_i_fu_921_p2 and sel_tmp3_i_fu_917_p2);
    sel_tmp6_i_fu_932_p3 <= 
        tmp_108_cast_i_cast_s_fu_878_p3 when (sel_tmp5_i_fu_926_p2(0) = '1') else 
        sel_tmp2_i_fu_909_p3;
    sel_tmp9_i_fu_944_p2 <= (tmp4_fu_940_p2 and sel_tmp3_i_fu_917_p2);
    sel_tmp_i_fu_899_p2 <= (tmp_99_i_reg_1102 xor ap_const_lv1_1);
    tmp1_cast_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_fu_749_p2),32));
    tmp1_fu_749_p2 <= std_logic_vector(unsigned(p_Val2_12_i_cast_fu_690_p1) + unsigned(p_Val2_17_i_cast_fu_745_p1));
    tmp2_cast_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_765_p2),30));
    tmp2_fu_765_p2 <= std_logic_vector(unsigned(ap_const_lv29_10000) + unsigned(p_Val2_12_i_cast_fu_690_p1));
    tmp3_cast_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_781_p2),32));
    tmp3_fu_781_p2 <= std_logic_vector(unsigned(ap_const_lv31_20000) + unsigned(p_Val2_15_i_cast_fu_715_p1));
    tmp4_fu_940_p2 <= (tmp_102_i_reg_1114 and tmp_100_i_reg_1108);
    tmp_100_cast_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_94_fu_422_p3),13));
    tmp_100_fu_216_p1 <= ap_phi_mux_i_phi_fu_186_p4(6 - 1 downto 0);
    tmp_100_i_fu_809_p2 <= "1" when (signed(dy_V_cast15_cast_i_fu_656_p1) > signed(p_Val2_13_i_fu_775_p2)) else "0";
    tmp_101_fu_462_p2 <= std_logic_vector(unsigned(tmp_75_cast_fu_448_p1) + unsigned(tmp_100_cast_fu_430_p1));
    tmp_101_i_fu_871_p3 <= 
        ap_const_lv4_8 when (quad_reg_1070_pp0_iter2_reg(0) = '1') else 
        ap_const_lv4_1;
    tmp_102_fu_835_p2 <= std_logic_vector(unsigned(tmp_75_cast1_fu_832_p1) + unsigned(tmp_92_cast_fu_828_p1));
    tmp_102_i_fu_815_p2 <= "1" when (signed(dy_V_cast_i_fu_660_p1) > signed(p_Val2_14_i_fu_791_p2)) else "0";
    tmp_103_fu_602_p3 <= 
        gradY_reg_1062 when (tmp_80_reg_1078(0) = '1') else 
        gradX_reg_1040_pp0_iter1_reg;
    tmp_104_fu_645_p3 <= (gradY_reg_1062 & ap_const_lv16_0);
    tmp_105_cast_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_99_fu_451_p2),64));
    tmp_106_cast_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_101_fu_462_p2),64));
    tmp_107_cast_fu_841_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_102_fu_835_p2),64));
    tmp_108_cast_i_cast_s_fu_878_p3 <= 
        ap_const_lv4_7 when (quad_reg_1070_pp0_iter2_reg(0) = '1') else 
        ap_const_lv4_2;
    tmp_109_cast_i_cast_s_fu_885_p3 <= 
        ap_const_lv4_5 when (quad_reg_1070_pp0_iter2_reg(0) = '1') else 
        ap_const_lv4_4;
    tmp_110_cast_i_cast_s_fu_892_p3 <= 
        ap_const_lv4_6 when (quad_reg_1070_pp0_iter2_reg(0) = '1') else 
        ap_const_lv4_3;
    tmp_110_fu_300_p1 <= i_5_dup_fu_260_p2(6 - 1 downto 0);
    tmp_111_fu_310_p1 <= j_mid2_fu_272_p3(6 - 1 downto 0);
    tmp_112_fu_473_p3 <= r_V_fu_442_p2(8 downto 8);
    tmp_113_fu_522_p3 <= r_V_1_fu_516_p2(8 downto 8);
    tmp_115_fu_544_p3 <= r_V_1_fu_516_p2(8 downto 8);
    tmp_73_fu_304_p2 <= "1" when (j_mid2_fu_272_p3 = ap_const_lv7_0) else "0";
    tmp_73_mid2_v_fu_292_p3 <= 
        i_5_dup_fu_260_p2 when (exitcond_fu_266_p2(0) = '1') else 
        ap_phi_mux_i_phi_fu_186_p4;
    tmp_74_fu_328_p2 <= "1" when (j_mid2_fu_272_p3 = ap_const_lv7_3F) else "0";
    tmp_75_cast1_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_mid2_reg_991_pp0_iter2_reg),14));
    tmp_75_cast_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_mid2_reg_991),13));
    tmp_77_fu_481_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(r_V_fu_442_p2));
    tmp_80_fu_557_p2 <= "1" when (signed(gradX_reg_1040) > signed(gradY_reg_1062)) else "0";
    tmp_81_fu_858_p2 <= "1" when (signed(r1_V_reg_1089) > signed(a_V_cast_fu_854_p1)) else "0";
    tmp_88_fu_821_p3 <= (tmp_73_mid2_v_reg_1008_pp0_iter2_reg & ap_const_lv6_0);
    tmp_89_fu_384_p3 <= 
        ap_const_lv6_3F when (tmp_mid1_26_reg_1003(0) = '1') else 
        i_5_cast_mid1_fu_374_p2;
    tmp_90_fu_391_p3 <= 
        tmp_89_fu_384_p3 when (exitcond_reg_985(0) = '1') else 
        dy_V_reg_971;
    tmp_91_fu_397_p3 <= (tmp_90_fu_391_p3 & ap_const_lv6_0);
    tmp_92_cast_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_88_fu_821_p3),14));
    tmp_92_fu_409_p3 <= 
        ap_const_lv6_0 when (tmp_mid1_reg_998(0) = '1') else 
        uy_V_cast_mid1_fu_379_p2;
    tmp_93_fu_416_p3 <= 
        tmp_92_fu_409_p3 when (exitcond_reg_985(0) = '1') else 
        p_s_27_reg_966;
        tmp_93_i_cast_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_93_i_fu_664_p3),29));

    tmp_93_i_fu_664_p3 <= (gradX_reg_1040_pp0_iter1_reg & ap_const_lv13_0);
    tmp_94_fu_422_p3 <= (tmp_93_fu_416_p3 & ap_const_lv6_0);
        tmp_94_i_cast_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_94_i_fu_679_p3),28));

    tmp_94_i_fu_679_p3 <= (gradX_reg_1040_pp0_iter1_reg & ap_const_lv12_0);
    tmp_95_fu_348_p3 <= (tmp_73_mid2_v_fu_292_p3 & p_4_fu_340_p3);
        tmp_95_i_cast_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_95_i_fu_704_p3),30));

    tmp_95_i_fu_704_p3 <= (gradX_reg_1040_pp0_iter1_reg & ap_const_lv14_0);
    tmp_96_cast_fu_405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_91_fu_397_p3),13));
    tmp_96_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_95_fu_348_p3),64));
        tmp_96_i_cast_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_96_i_fu_719_p3),31));

    tmp_96_i_fu_719_p3 <= (gradX_reg_1040_pp0_iter1_reg & ap_const_lv15_0);
    tmp_97_fu_361_p3 <= (tmp_73_mid2_v_fu_292_p3 & p_s_fu_320_p3);
        tmp_97_i_cast_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_97_i_fu_734_p3),26));

    tmp_97_i_fu_734_p3 <= (gradX_reg_1040_pp0_iter1_reg & ap_const_lv10_0);
    tmp_98_fu_369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_97_fu_361_p3),64));
    tmp_98_i_fu_797_p2 <= "1" when (signed(dy_V_cast15_cast_i_fu_656_p1) > signed(addconv_i_fu_698_p2)) else "0";
    tmp_99_fu_451_p2 <= std_logic_vector(unsigned(tmp_75_cast_fu_448_p1) + unsigned(tmp_96_cast_fu_405_p1));
    tmp_99_i_fu_803_p2 <= "1" when (signed(dy_V_cast_i_fu_660_p1) > signed(p_Val2_i_fu_759_p2)) else "0";
    tmp_fu_204_p2 <= "1" when (ap_phi_mux_i_phi_fu_186_p4 = ap_const_lv7_0) else "0";
    tmp_mid1_26_fu_286_p2 <= "1" when (i_5_dup_fu_260_p2 = ap_const_lv7_3F) else "0";
    tmp_mid1_fu_280_p2 <= "1" when (i_5_dup_fu_260_p2 = ap_const_lv7_0) else "0";
    tmp_s_fu_210_p2 <= "1" when (ap_phi_mux_i_phi_fu_186_p4 = ap_const_lv7_3F) else "0";
    uy_V_cast_fu_226_p2 <= std_logic_vector(signed(ap_const_lv6_3F) + signed(tmp_100_fu_216_p1));
    uy_V_cast_mid1_fu_379_p2 <= std_logic_vector(signed(ap_const_lv6_3F) + signed(tmp_110_reg_1014));
end behav;
